<?xml version="1.0" encoding="UTF-8" standalone="no"?><posts><post answer="&lt;p&gt;&lt;code&gt;&quot;N/A&quot;&lt;/code&gt; is not integer. It must throw &lt;code&gt;NumberFormatException&lt;/code&gt; if you try to parse it to integer.&lt;/p&gt;&amp;#xA;&amp;#xA;&lt;p&gt;Check before parsing. or handle &lt;code&gt;Exception&lt;/code&gt; properly.&lt;/p&gt;&amp;#xA;&amp;#xA;&lt;ol&gt;&amp;#xA;&lt;li&gt;Exception Handling*&lt;/li&gt;&amp;#xA;&lt;/ol&gt;&amp;#xA;&amp;#xA;&lt;blockquote&gt;&amp;#xA;&lt;pre&gt;&lt;code&gt;try{&amp;#xA;   int i = Integer.parseInt(input);&amp;#xA;}catch(NumberFormatException ex){ // handle your exception&amp;#xA;   ...&amp;#xA;}&amp;#xA;&lt;/code&gt;&lt;/pre&gt;&amp;#xA;&lt;/blockquote&gt;&amp;#xA;&amp;#xA;&lt;p&gt;or - &lt;em&gt;Integer pattern matching&lt;/em&gt; -&lt;/p&gt;&amp;#xA;&amp;#xA;&lt;pre&gt;&lt;code&gt;String input=...;&amp;#xA;String pattern =&quot;-?\\d+&quot;;&amp;#xA;if(input.matches(&quot;-?\\d+&quot;)){ // any positive or negetive integer or not!&amp;#xA; ...&amp;#xA;}&amp;#xA;&lt;/code&gt;&lt;/pre&gt;&amp;#xA;" question="&lt;p&gt;In my debugging I am getting the exception like this:&lt;/p&gt;&amp;#xA;&amp;#xA;&lt;pre&gt;&lt;code&gt;java.lang.NumberFormatException: For input string: &quot;N/A&quot;&amp;#xA;    at java.lang.NumberFormatException.forInputString(Unknown Source)&amp;#xA;    at java.lang.Integer.parseInt(Unknown Source)&amp;#xA;    at java.lang.Integer.valueOf(Unknown Source)&amp;#xA;    at java.util.TreeMap.compare(Unknown Source)&amp;#xA;    at java.util.TreeMap.put(Unknown Source)&amp;#xA;    at java.util.TreeSet.add(Unknown Source)`&amp;#xA;&lt;/code&gt;&lt;/pre&gt;&amp;#xA;&amp;#xA;&lt;p&gt;How to resolve the error?&lt;/p&gt;&amp;#xA;" stacktrace="java.lang.NumberFormatException: For input string: &quot;N/A&quot;&#10;    at java.lang.NumberFormatException.forInputString(Unknown Source)&#10;    at java.lang.Integer.parseInt(Unknown Source)&#10;    at java.lang.Integer.valueOf(Unknown Source)&#10;    at java.util.TreeMap.compare(Unknown Source)&#10;    at java.util.TreeMap.put(Unknown Source)&#10;    at java.util.TreeSet.add(Unknown Source)`"/><post answer="&lt;p&gt;The reason it fails is that you're trying to put &lt;code&gt;+0xff8ca87c&lt;/code&gt; into a signed integer. The maximum value of a 32-bit signed integer is &lt;code&gt;+0x7fffffff&lt;/code&gt;, because the most significant bit is used to store the sign.&lt;/p&gt;&amp;#xA;&amp;#xA;&lt;p&gt;Try using a &lt;code&gt;long&lt;/code&gt; instead. The maximum value of a 64-bit signed int is &lt;code&gt;0x7fffffffffffffff&lt;/code&gt;, which is more than adequate for your needs in this case.&lt;/p&gt;&amp;#xA;&amp;#xA;&lt;p&gt;Or, in Java 8 you can use &lt;code&gt;Integer.parseUnsignedInt(&quot;ff8ca87c&quot;, 16);&lt;/code&gt; which will treat the value as an unsigned integer.&lt;/p&gt;&amp;#xA;" question="&lt;p&gt;I'm doing some crazy math type stuff making composites of images and things like that and everything is going just great! I mess it up badly a few times, but eventually I find the errors and now everything is correct except this one line.&lt;/p&gt;&amp;#xA;&amp;#xA;&lt;pre&gt;&lt;code&gt;Integer.parseInt(&quot;ff8ca87c&quot;, 16);&amp;#xA;&lt;/code&gt;&lt;/pre&gt;&amp;#xA;&amp;#xA;&lt;p&gt;This gives me a NumberFormatException for some reason. Do you know why that is?&lt;/p&gt;&amp;#xA;&amp;#xA;&lt;pre&gt;&lt;code&gt;Exception in thread &quot;main&quot; java.lang.NumberFormatException: For input string: &quot;ff8ca87c&quot;&amp;#xA;    at java.lang.NumberFormatException.forInputString(Unknown Source)&amp;#xA;    at java.lang.Integer.parseInt(Unknown Source)&amp;#xA;    at java.lang.Integer.valueOf(Unknown Source)&amp;#xA;&lt;/code&gt;&lt;/pre&gt;&amp;#xA;" stacktrace="Exception in thread &quot;main&quot; java.lang.NumberFormatException: For input string: &quot;ff8ca87c&quot;&#10;    at java.lang.NumberFormatException.forInputString(Unknown Source)&#10;    at java.lang.Integer.parseInt(Unknown Source)&#10;    at java.lang.Integer.valueOf(Unknown Source)"/><post answer="&lt;p&gt;Reading from a binary file turned out to be reckless.&amp;#xA;&lt;strong&gt;In different environments converting binary data into string can return different results.&lt;/strong&gt;&amp;#xA;Workaround was to use specific &lt;em&gt;charset&lt;/em&gt; during reading data.&lt;/p&gt;&amp;#xA;&amp;#xA;&lt;pre&gt;&lt;code&gt;String strFileContents = &quot;&quot;;&amp;#xA;byte[] contents = new byte[1024];&amp;#xA;int bytesRead = 0;&amp;#xA;&amp;#xA;while (dataInputStream.available() != 0) {&amp;#xA;    while ((bytesRead = bufferedInputStream.read(contents)) != -1) {&amp;#xA;        strFileContents = new String(contents, 0, bytesRead, &quot;ISO-8859-1&quot;);&amp;#xA;    }&amp;#xA;}&amp;#xA;&lt;/code&gt;&lt;/pre&gt;&amp;#xA;&amp;#xA;&lt;p&gt;Now running project in eclipse and from jar file on any system gives the same results.&lt;/p&gt;&amp;#xA;" question="&lt;p&gt;I am working on an old &lt;em&gt;awt/swing&lt;/em&gt; project (not of my property) on &lt;em&gt;Solaris&lt;/em&gt;.The source code and a &lt;em&gt;jar&lt;/em&gt; file have been given to me. The problem occurs when I run it on &lt;em&gt;eclipse:&lt;/em&gt; I am getting an error related to string parsing (parsing a string hex into integer). However, when I run it from the jar, no error happens. In fact, when I export the project as a new runnable Jar file, it runs properly.&lt;/p&gt;&amp;#xA;&amp;#xA;&lt;p&gt;I have already tried messing with the java version used in the project. I have configured eclipse to work only with 1.6.0_31-b04 version. Printing the system properties show that the java runtime version is the same on eclipse and on the console.&lt;/p&gt;&amp;#xA;&amp;#xA;&lt;p&gt;Error message on eclipse:&lt;/p&gt;&amp;#xA;&amp;#xA;&lt;pre&gt;&lt;code&gt;java.lang.NumberFormatException: For input string: &quot;7003fffd03&quot;&amp;#xA;    at java.lang.NumberFormatException.forInputString(Unknown Source)&amp;#xA;    at java.lang.Integer.parseInt(Unknown Source)&amp;#xA;    at java.lang.Integer.valueOf(Unknown Source)&amp;#xA;    at java.lang.Integer.decode(Unknown Source)&amp;#xA;    ...&amp;#xA;&lt;/code&gt;&lt;/pre&gt;&amp;#xA;&amp;#xA;&lt;p&gt;I point out: &lt;strong&gt;No error is generated and everything works fine when I run exported Jar on console.&lt;/strong&gt;&lt;/p&gt;&amp;#xA;&amp;#xA;&lt;p&gt;I do not ask for a solution with such little information. I would appreciate any hypothesis you could provide me with.&lt;/p&gt;&amp;#xA;" stacktrace="java.lang.NumberFormatException: For input string: &quot;7003fffd03&quot;&#10;    at java.lang.NumberFormatException.forInputString(Unknown Source)&#10;    at java.lang.Integer.parseInt(Unknown Source)&#10;    at java.lang.Integer.valueOf(Unknown Source)&#10;    at java.lang.Integer.decode(Unknown Source)"/><post answer="" question="&lt;p&gt;hereis my code.... I am getting a NumberFormatException and idk whow to solve it.. newbie and totally stuck, really need the help&lt;/p&gt;&amp;#xA;&amp;#xA;&lt;pre&gt;&lt;code&gt;public class AcccountArray {&amp;#xA;&amp;#xA;    public static void main(String[] args) &amp;#xA;    {&amp;#xA;        //Scan the file and save account details to array&amp;#xA;        File file = new File (&quot;customers.txt&quot;);&amp;#xA;        System.out.println(&quot;Path : &quot; + file.getAbsolutePath());&amp;#xA;        try{&amp;#xA;                    Scanner scanner = new Scanner(&quot;customers.txt&quot;);&amp;#xA;                    String[][] Account = new String[Integer.valueOf(scanner.nextLine())][3];&amp;#xA;&amp;#xA;                    for(int i=0;i&amp;lt;Account.length;i++)&amp;#xA;                    {&amp;#xA;                        Account[i][0]=scanner.nextLine();&amp;#xA;                        //System.out.println(Account[i][0]);&amp;#xA;                        Account[i][1]=scanner.nextLine();&amp;#xA;                        //System.out.println(Account[i][1]);&amp;#xA;                        Account[i][2]=scanner.nextLine();&amp;#xA;                        //System.out.println(Account[i][2]);&amp;#xA;                    }&amp;#xA;                    scanner.close();&amp;#xA;&lt;/code&gt;&lt;/pre&gt;&amp;#xA;&amp;#xA;&lt;p&gt;error:&lt;/p&gt;&amp;#xA;&amp;#xA;&lt;pre&gt;&lt;code&gt;java.lang.NumberFormatException: For input string: &quot;customers.txt&quot;&amp;#xA;    at java.lang.NumberFormatException.forInputString(Unknown Source)&amp;#xA;    at java.lang.Integer.parseInt(Unknown Source)&amp;#xA;    at java.lang.Integer.valueOf(Unknown Source)&amp;#xA;    at AcccountArray.main(AcccountArray.java:15)&amp;#xA;&lt;/code&gt;&lt;/pre&gt;&amp;#xA;&amp;#xA;&lt;p&gt;li. 15 is   &lt;/p&gt;&amp;#xA;&amp;#xA;&lt;pre&gt;&lt;code&gt;String[][] Account = new String[Integer.valueOf(scanner.nextLine())][3];&amp;#xA;&lt;/code&gt;&lt;/pre&gt;&amp;#xA;" stacktrace="java.lang.NumberFormatException: For input string: &quot;customers.txt&quot;&#10;    at java.lang.NumberFormatException.forInputString(Unknown Source)&#10;    at java.lang.Integer.parseInt(Unknown Source)&#10;    at java.lang.Integer.valueOf(Unknown Source)&#10;    at AcccountArray.main(AcccountArray.java:15)"/><post answer="" question="&lt;p&gt;I am trying to use the Simple framework to deserialize some data provided by a third-party provider into Java objects. The incoming data is POST-ed to an HTTP server, and from there my code needs to take over.&lt;/p&gt;&amp;#xA;&amp;#xA;&lt;p&gt;The XML looks like this:&lt;/p&gt;&amp;#xA;&amp;#xA;&lt;pre&gt;&lt;code&gt;&amp;lt;SomeElement attrib1=&quot;foo&quot; attrib2=&quot;1337&quot; attrib3=&quot;&quot; /&amp;gt;&amp;#xA;&lt;/code&gt;&lt;/pre&gt;&amp;#xA;&amp;#xA;&lt;p&gt;There are many more attributes - nearly 50 of them. &lt;/p&gt;&amp;#xA;&amp;#xA;&lt;p&gt;My Java class is:&lt;/p&gt;&amp;#xA;&amp;#xA;&lt;pre&gt;&lt;code&gt;public class SomeElement {&amp;#xA;    @Attribute private String attrib1;&amp;#xA;    @Attribute private int attrib2;&amp;#xA;    @Attribute(required=false, empty=&quot;0&quot;) private int attrib3;&amp;#xA;}&amp;#xA;&lt;/code&gt;&lt;/pre&gt;&amp;#xA;&amp;#xA;&lt;p&gt;This does not parse, though. I get:&lt;/p&gt;&amp;#xA;&amp;#xA;&lt;pre&gt;&lt;code&gt;Exception in thread &quot;main&quot; java.lang.NumberFormatException: For input string: &quot;&quot;&amp;#xA;    at java.lang.NumberFormatException.forInputString(Unknown Source)&amp;#xA;    at java.lang.Integer.parseInt(Unknown Source)&amp;#xA;    at java.lang.Integer.valueOf(Unknown Source)&amp;#xA;    at org.simpleframework.xml.transform.IntegerTransform.read(IntegerTransform.java:55)&amp;#xA;&lt;/code&gt;&lt;/pre&gt;&amp;#xA;&amp;#xA;&lt;p&gt;It is not clear to my how I can get Simple XML to parse &quot;&quot; correctly to something usable. I am probably missing some magic incantation of the annotations, but I can't find anything in the documentation.&lt;/p&gt;&amp;#xA;" stacktrace="Exception in thread &quot;main&quot; java.lang.NumberFormatException: For input string: &quot;&quot;&#10;    at java.lang.NumberFormatException.forInputString(Unknown Source)&#10;    at java.lang.Integer.parseInt(Unknown Source)&#10;    at java.lang.Integer.valueOf(Unknown Source)&#10;    at org.simpleframework.xml.transform.IntegerTransform.read(IntegerTransform.java:55)"/><post answer="&lt;p&gt;You need to tell &lt;code&gt;decode&lt;/code&gt; you're using hex. Prefix the string with &lt;code&gt;0x&lt;/code&gt;. &lt;/p&gt;&amp;#xA;&amp;#xA;&lt;pre&gt;&lt;code&gt;value = Integer.decode(&quot;0x&quot;+&quot;10038&quot;.substring(1));&amp;#xA;&lt;/code&gt;&lt;/pre&gt;&amp;#xA;" question="&lt;p&gt;I'm doing a project and i have a really simple hash function in java that &lt;em&gt;SHOULD&lt;/em&gt; read each &quot;data&quot; (which is a generic type that is a String or Double type read by file) character and make a sum of their values that will be used as hashcode.&amp;#xA;I thought that i could convert each character to Hexadecimal, and then &quot;decode&quot; or &quot;parseInt&quot; the obtained String, but it does not work and i do not understand why.&lt;/p&gt;&amp;#xA;&amp;#xA;&lt;p&gt;Here is my method:&lt;/p&gt;&amp;#xA;&amp;#xA;&lt;pre&gt;&lt;code&gt;public long HashFunction(T data){&amp;#xA;         String bytes = data.toString();&amp;#xA;&amp;#xA;         int value=0;&amp;#xA;         for (int i=0; i&amp;lt;bytes.length(); i++) &amp;#xA;             value = value + Integer.decode(Integer.toHexString( bytes.charAt(i) | 0x100000).substring(1)); &amp;#xA;&amp;#xA;        return (value%1583)%(size);&amp;#xA;        //1583 prime number not near to the power of 2, size is the size of the array of my hashtable&amp;#xA;&amp;#xA;    }&amp;#xA;&lt;/code&gt;&lt;/pre&gt;&amp;#xA;&amp;#xA;&lt;p&gt;And here is my error, 0038 should be an &quot;8&quot;:&lt;/p&gt;&amp;#xA;&amp;#xA;&lt;pre&gt;&lt;code&gt;Exception in thread &quot;main&quot; java.lang.NumberFormatException: For input string: &quot;0038&quot;&amp;#xA;    at java.lang.NumberFormatException.forInputString(Unknown Source)&amp;#xA;    at java.lang.Integer.parseInt(Unknown Source)&amp;#xA;    at java.lang.Integer.valueOf(Unknown Source)&amp;#xA;    at java.lang.Integer.decode(Unknown Source)&amp;#xA;    at dizionario_package.HashTable.HashFunction(HashTable.java:22)&amp;#xA;    at dizionario_package.HashTable.HashInsert(HashTable.java:29)&amp;#xA;    at dizionario_package.RecordReader.CreateHTFromFile(RecordReader.java:24)&amp;#xA;    at dizionario_package.proviamo.main(proviamo.java:8)&amp;#xA;&lt;/code&gt;&lt;/pre&gt;&amp;#xA;&amp;#xA;&lt;p&gt;Also, i'm sure that the error is in this function, because if i use the java hashcode method, it works.&lt;/p&gt;&amp;#xA;&amp;#xA;&lt;p&gt;Thanks in advance. &lt;/p&gt;&amp;#xA;" stacktrace="Exception in thread &quot;main&quot; java.lang.NumberFormatException: For input string: &quot;0038&quot;&#10;    at java.lang.NumberFormatException.forInputString(Unknown Source)&#10;    at java.lang.Integer.parseInt(Unknown Source)&#10;    at java.lang.Integer.valueOf(Unknown Source)&#10;    at java.lang.Integer.decode(Unknown Source)&#10;    at dizionario_package.HashTable.HashFunction(HashTable.java:22)&#10;    at dizionario_package.HashTable.HashInsert(HashTable.java:29)&#10;    at dizionario_package.RecordReader.CreateHTFromFile(RecordReader.java:24)&#10;    at dizionario_package.proviamo.main(proviamo.java:8)"/><post answer="&lt;p&gt;Check for a parse exception @ com.poslji.gor.FormFiller.onCreate(FormFiller.java:188), use try catch&lt;/p&gt;&amp;#xA;&amp;#xA;&lt;p&gt;Edit:&lt;/p&gt;&amp;#xA;&amp;#xA;&lt;p&gt;Then again I am not sure how it ran in 1.5 :D&lt;/p&gt;&amp;#xA;" question="&lt;p&gt;My app works on 1.5 emulator and 1.5 device. When i try to start it on 1.6 emulator, it produces strange exceptions (doesn't even start). I don't have any 1.6 device to try this app if it works on a real device.&amp;#xA;I get some warnings in Eclipse ( warning: Ignoring InnerClasses attribute for an anonymous inner class that doesn't come with an associated EnclosingMethod attribute. This class was probably produced by a broken compiler.) and get cant rid of them (i think they come from some apache jars that i need to make http multipart posts).&amp;#xA; Is it possible that this jars are cause for my exceptions in 1.6 or is it something else?&lt;/p&gt;&amp;#xA;&amp;#xA;&lt;p&gt;My logacat:&lt;/p&gt;&amp;#xA;&amp;#xA;&lt;p&gt;04-29 16:14:55.874: ERROR/AndroidRuntime(392): Uncaught handler: thread main exiting due to uncaught exception&amp;#xA;04-29 16:14:55.894: ERROR/AndroidRuntime(392): java.lang.RuntimeException: Unable to start activity ComponentInfo{com.poslji.gor/com.poslji.gor.FormFiller}: java.lang.NumberFormatException: unable to parse 'null' as integer&amp;#xA;04-29 16:14:55.894: ERROR/AndroidRuntime(392):     at android.app.ActivityThread.performLaunchActivity(ActivityThread.java:2401)&amp;#xA;04-29 16:14:55.894: ERROR/AndroidRuntime(392):     at android.app.ActivityThread.handleLaunchActivity(ActivityThread.java:2417)&amp;#xA;04-29 16:14:55.894: ERROR/AndroidRuntime(392):     at android.app.ActivityThread.access$2100(ActivityThread.java:116)&amp;#xA;04-29 16:14:55.894: ERROR/AndroidRuntime(392):     at android.app.ActivityThread$H.handleMessage(ActivityThread.java:1794)&amp;#xA;04-29 16:14:55.894: ERROR/AndroidRuntime(392):     at android.os.Handler.dispatchMessage(Handler.java:99)&amp;#xA;04-29 16:14:55.894: ERROR/AndroidRuntime(392):     at android.os.Looper.loop(Looper.java:123)&amp;#xA;04-29 16:14:55.894: ERROR/AndroidRuntime(392):     at android.app.ActivityThread.main(ActivityThread.java:4203)&amp;#xA;04-29 16:14:55.894: ERROR/AndroidRuntime(392):     at java.lang.reflect.Method.invokeNative(Native Method)&amp;#xA;04-29 16:14:55.894: ERROR/AndroidRuntime(392):     at java.lang.reflect.Method.invoke(Method.java:521)&amp;#xA;04-29 16:14:55.894: ERROR/AndroidRuntime(392):     at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:791)&amp;#xA;04-29 16:14:55.894: ERROR/AndroidRuntime(392):     at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:549)&amp;#xA;04-29 16:14:55.894: ERROR/AndroidRuntime(392):     at dalvik.system.NativeStart.main(Native Method)&amp;#xA;04-29 16:14:55.894: ERROR/AndroidRuntime(392): Caused by: java.lang.NumberFormatException: unable to parse 'null' as integer&amp;#xA;04-29 16:14:55.894: ERROR/AndroidRuntime(392):     at java.lang.Integer.parseInt(Integer.java:358)&amp;#xA;04-29 16:14:55.894: ERROR/AndroidRuntime(392):     at java.lang.Integer.parseInt(Integer.java:333)&amp;#xA;04-29 16:14:55.894: ERROR/AndroidRuntime(392):     at com.poslji.gor.FormFiller.nastavi(FormFiller.java:322)&amp;#xA;04-29 16:14:55.894: ERROR/AndroidRuntime(392):     at com.poslji.gor.FormFiller.onCreate(FormFiller.java:188)&amp;#xA;04-29 16:14:55.894: ERROR/AndroidRuntime(392):     at android.app.Instrumentation.callActivityOnCreate(Instrumentation.java:1123)&amp;#xA;04-29 16:14:55.894: ERROR/AndroidRuntime(392):     at android.app.ActivityThread.performLaunchActivity(ActivityThread.java:2364)&lt;/p&gt;&amp;#xA;" stacktrace="Caused by: java.lang.NumberFormatException: unable to parse 'null' as integer"/><post answer="&lt;p&gt;You're trying to parse a single &lt;em&gt;character&lt;/em&gt; (&lt;code&gt;'-'&lt;/code&gt;) (after converting it to a string, admittedly) instead of the string &quot;-1&quot;. If you use &lt;code&gt;charAt&lt;/code&gt; you'll be parsing a single &lt;em&gt;digit&lt;/em&gt; at a time, so &quot;10&quot; will come out as 1 and then 0, not 10.&lt;/p&gt;&amp;#xA;&amp;#xA;&lt;p&gt;If you just split your string on spaces, you should be able to parse the strings with no problems.&lt;/p&gt;&amp;#xA;" question="&lt;p&gt;Hi i have a string looking something like this 10 -1 30 -2 and i want to read the numbers between spaces. I can do this using a FOR statement and the code &lt;/p&gt;&amp;#xA;&amp;#xA;&lt;pre&gt;&lt;code&gt;Character.toString(myString.charAt(i));&amp;#xA;&lt;/code&gt;&lt;/pre&gt;&amp;#xA;&amp;#xA;&lt;p&gt;and&lt;/p&gt;&amp;#xA;&amp;#xA;&lt;pre&gt;&lt;code&gt;Integer.parseInt(myString);&amp;#xA;&lt;/code&gt;&lt;/pre&gt;&amp;#xA;&amp;#xA;&lt;p&gt;But i face a problem when i try to read negative number like -1 and i got the error message:&lt;/p&gt;&amp;#xA;&amp;#xA;&lt;pre&gt;&lt;code&gt;09-09 13:06:49.630: ERROR/AndroidRuntime(3365): Caused by: java.lang.NumberFormatException: unable to parse '-' as integer&amp;#xA;&lt;/code&gt;&lt;/pre&gt;&amp;#xA;&amp;#xA;&lt;p&gt;Any ideas how to solve this ??&lt;/p&gt;&amp;#xA;" stacktrace="Caused by: java.lang.NumberFormatException: unable to parse '-' as integer"/><post answer="&lt;p&gt;Your &lt;code&gt;String&lt;/code&gt; that is throwing the &lt;code&gt;NumberFormatException&lt;/code&gt; ends in white-space &lt;code&gt;&quot;64403F &quot;&lt;/code&gt;. Call &lt;code&gt;trim()&lt;/code&gt; on the &lt;code&gt;String&lt;/code&gt; before you parse it. Using &lt;a href=&quot;http://docs.oracle.com/javase/7/docs/api/java/lang/Integer.html#parseInt%28java.lang.String,%20int%29&quot; rel=&quot;nofollow&quot;&gt;&lt;code&gt;Integer.parseInt(String, int)&lt;/code&gt;&lt;/a&gt;&lt;/p&gt;&amp;#xA;&amp;#xA;&lt;pre&gt;&lt;code&gt;String str = &quot;64403F &quot;;&amp;#xA;System.out.println(Integer.parseInt(str.trim(), 16));&amp;#xA;&lt;/code&gt;&lt;/pre&gt;&amp;#xA;&amp;#xA;&lt;p&gt;Or, using &lt;a href=&quot;http://docs.oracle.com/javase/7/docs/api/java/lang/Integer.html#decode%28java.lang.String%29&quot; rel=&quot;nofollow&quot;&gt;&lt;code&gt;Integer.decode(String)&lt;/code&gt;&lt;/a&gt;&lt;/p&gt;&amp;#xA;&amp;#xA;&lt;pre&gt;&lt;code&gt;String str = &quot;64403F &quot;;&amp;#xA;System.out.println(Integer.decode(&quot;0x&quot; + str.trim()));&amp;#xA;&lt;/code&gt;&lt;/pre&gt;&amp;#xA;&amp;#xA;&lt;p&gt;The output is&lt;/p&gt;&amp;#xA;&amp;#xA;&lt;pre&gt;&lt;code&gt;6570047&amp;#xA;&lt;/code&gt;&lt;/pre&gt;&amp;#xA;" question="&lt;pre&gt;&lt;code&gt;Exception in thread &quot;main&quot; java.lang.NumberFormatException: For input string: &quot;64403F &quot;&amp;#xA;    at java.lang.NumberFormatException.forInputString(Unknown Source)&amp;#xA;&lt;/code&gt;&lt;/pre&gt;&amp;#xA;&amp;#xA;&lt;p&gt;But it works for many inputs like A89B88, 927F66, FFDB58. Can you please help me in understanding what's happening here?&lt;/p&gt;&amp;#xA;" stacktrace="Exception in thread &quot;main&quot; java.lang.NumberFormatException: For input string: &quot;64403F &quot;&#10;    at java.lang.NumberFormatException.forInputString(Unknown Source)"/><post answer="&lt;p&gt;Greg Hewgill's comment is correct.  It looks like you're trying to have the bits be automatically interpreted.  Probably the simplest thing to do is something like&lt;/p&gt;&amp;#xA;&amp;#xA;&lt;pre&gt;&lt;code&gt; Long.valueOf(displayValue + &quot;F&quot;, currentBase).intValue();&amp;#xA;&lt;/code&gt;&lt;/pre&gt;&amp;#xA;&amp;#xA;&lt;p&gt;to get the bits, and then truncate them to int.  Of course, now it's your responsibility to ensure that the argument to &lt;code&gt;Long.valueOf&lt;/code&gt; fits in 32 bits.&lt;/p&gt;&amp;#xA;" question="&lt;p&gt;I am receiving an exception when I insert to many hex characters into a string that is being converted to an integer value.&lt;/p&gt;&amp;#xA;&amp;#xA;&lt;p&gt;Code:&lt;/p&gt;&amp;#xA;&amp;#xA;&lt;pre&gt;&lt;code&gt;//variables used in this problem&amp;#xA;int INT_MAX = 2147483647;&amp;#xA;int INT_MIN = -2147483648;&amp;#xA;int currentBase = 16;&amp;#xA;string displayValue;&amp;#xA;&amp;#xA;switch(currentBase) {&amp;#xA;    case 16:&amp;#xA;        if((Integer.valueOf(displayValue + &quot;F&quot;, currentBase) &amp;gt;= INT_MIN) &amp;amp;&amp;amp; (Integer.valueOf(displayValue + &quot;F&quot;, currentBase) &amp;lt;= INT_MAX))&amp;#xA;        {&amp;#xA;            displayValue += &quot;F&quot;;&amp;#xA;        }&amp;#xA;        break;&amp;#xA;}&amp;#xA;&lt;/code&gt;&lt;/pre&gt;&amp;#xA;&amp;#xA;&lt;p&gt;The error message:&lt;/p&gt;&amp;#xA;&amp;#xA;&lt;pre&gt;&lt;code&gt;E/AndroidRuntime(6944): Caused by: java.lang.NumberFormatException: Invalid int: &quot;FFFFFFFF&quot;&amp;#xA;E/AndroidRuntime(6944):     at java.lang.Integer.invalidInt(Integer.java:138)&amp;#xA;E/AndroidRuntime(6944):     at java.lang.Integer.parse(Integer.java:378)&amp;#xA;E/AndroidRuntime(6944):     at java.lang.Integer.parseInt(Integer.java:366)&amp;#xA;E/AndroidRuntime(6944):     at java.lang.Integer.valueOf(Integer.java:510)&amp;#xA;E/AndroidRuntime(6944):     at com.example.calculator.MainActivity.send_f(MainActivity.java:968)&amp;#xA;&lt;/code&gt;&lt;/pre&gt;&amp;#xA;&amp;#xA;&lt;p&gt;I need this string to have a value no larger than size int (32 bits).  Any suggestions?&lt;/p&gt;&amp;#xA;" stacktrace="Caused by: java.lang.NumberFormatException: Invalid int: &quot;FFFFFFFF&quot;"/></posts>