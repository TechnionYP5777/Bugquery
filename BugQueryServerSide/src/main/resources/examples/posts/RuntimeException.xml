<?xml version="1.0" encoding="UTF-8" standalone="no"?><posts><post answer="" question="&lt;p&gt;I recently followed a guide on how to handle a username and login using php and MySQL. Unfortunately the guide doesn't cover AsyncTasks which are necessary now because android won't allow me to do any of the network stuff on the mainthread. (&lt;a href=&quot;http://www.androidhive.info/2012/01/android-login-and-registration-with-php-mysql-and-sqlite/&quot; rel=&quot;nofollow&quot;&gt;This is the guide&lt;/a&gt;)&lt;/p&gt;&amp;#xA;&amp;#xA;&lt;p&gt;I used the following code. (Crated an AsyncTask at the bottom and moved the contents of the OnClick Listener for the login button and moved it to the AsyncTask and made the button execute the asynctask. I am new to AsyncTask so there may be multiple issues. If you need more info pleas let me know.&lt;/p&gt;&amp;#xA;&amp;#xA;&lt;pre&gt;&lt;code&gt;Error: 01-22 10:25:13.140    3774-3788/com.Ayman.jokeit E/AndroidRuntime? FATAL EXCEPTION: AsyncTask #2&amp;#xA;    Process: com.Ayman.jokeit, PID: 3774&amp;#xA;    java.lang.RuntimeException: An error occured while executing doInBackground()&amp;#xA;            at android.os.AsyncTask$3.done(AsyncTask.java:300)&amp;#xA;            at java.util.concurrent.FutureTask.finishCompletion(FutureTask.java:355)&amp;#xA;            at java.util.concurrent.FutureTask.setException(FutureTask.java:222)&amp;#xA;            at java.util.concurrent.FutureTask.run(FutureTask.java:242)&amp;#xA;            at android.os.AsyncTask$SerialExecutor$1.run(AsyncTask.java:231)&amp;#xA;            at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1112)&amp;#xA;            at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:587)&amp;#xA;            at java.lang.Thread.run(Thread.java:841)&amp;#xA;     Caused by: java.lang.NullPointerException&amp;#xA;            at com.Ayman.jokeit.LoginActivity$LoginTask.doInBackground(LoginActivity.java:81)&amp;#xA;            at com.Ayman.jokeit.LoginActivity$LoginTask.doInBackground(LoginActivity.java:70)&amp;#xA;            at android.os.AsyncTask$2.call(AsyncTask.java:288)&amp;#xA;            at java.util.concurrent.FutureTask.run(FutureTask.java:237)&amp;#xA;            at android.os.AsyncTask$SerialExecutor$1.run(AsyncTask.java:231)&amp;#xA;            at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1112)&amp;#xA;            at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:587)&amp;#xA;            at java.lang.Thread.run(Thread.java:841)&amp;#xA;&lt;/code&gt;&lt;/pre&gt;&amp;#xA;&amp;#xA;&lt;p&gt;I'm including the following relevant code:&lt;/p&gt;&amp;#xA;&amp;#xA;&lt;pre&gt;&lt;code&gt;package com.Ayman.jokeit;&amp;#xA;&amp;#xA;import org.json.JSONException;&amp;#xA;import org.json.JSONObject;&amp;#xA;&amp;#xA;import android.app.Activity;&amp;#xA;import android.content.Intent;&amp;#xA;import android.os.AsyncTask;&amp;#xA;import android.os.Bundle;&amp;#xA;import android.view.View;&amp;#xA;import android.widget.Button;&amp;#xA;import android.widget.EditText;&amp;#xA;import android.widget.TextView;&amp;#xA;&amp;#xA;import com.Ayman.jokeit.library.DatabaseHandler;&amp;#xA;import com.Ayman.jokeit.library.UserFunctions;&amp;#xA;&amp;#xA;public class LoginActivity extends Activity {&amp;#xA;    Button btnLogin;&amp;#xA;    Button btnLinkToRegister;&amp;#xA;    EditText inputEmail;&amp;#xA;    EditText inputPassword;&amp;#xA;    TextView loginErrorMsg;&amp;#xA;&amp;#xA;    // JSON Response node names&amp;#xA;    private static String KEY_SUCCESS = &quot;success&quot;;&amp;#xA;    private static String KEY_ERROR = &quot;error&quot;;&amp;#xA;    private static String KEY_ERROR_MSG = &quot;error_msg&quot;;&amp;#xA;    private static String KEY_UID = &quot;uid&quot;;&amp;#xA;    private static String KEY_NAME = &quot;name&quot;;&amp;#xA;    private static String KEY_EMAIL = &quot;email&quot;;&amp;#xA;    private static String KEY_CREATED_AT = &quot;created_at&quot;;&amp;#xA;&amp;#xA;    @Override&amp;#xA;    public void onCreate(Bundle savedInstanceState) {&amp;#xA;        super.onCreate(savedInstanceState);&amp;#xA;        setContentView(R.layout.login);&amp;#xA;&amp;#xA;        // Importing all assets like buttons, text fields&amp;#xA;        inputEmail = (EditText) findViewById(R.id.loginEmail);&amp;#xA;        inputPassword = (EditText) findViewById(R.id.loginPassword);&amp;#xA;        btnLogin = (Button) findViewById(R.id.btnLogin);&amp;#xA;        btnLinkToRegister = (Button) findViewById(R.id.btnLinkToRegisterScreen);&amp;#xA;        loginErrorMsg = (TextView) findViewById(R.id.login_error);&amp;#xA;&amp;#xA;        // Login button Click Event&amp;#xA;        btnLogin.setOnClickListener(new View.OnClickListener() {&amp;#xA;&amp;#xA;            public void onClick(View view) {&amp;#xA;                //if you want to keep the loader from Ravi&amp;#xA;&amp;#xA;                //and then, you add the AsyncTask&amp;#xA;                LoginTask AsyncLogin = new LoginTask();&amp;#xA;                AsyncLogin.execute();&amp;#xA;            }&amp;#xA;&amp;#xA;        });&amp;#xA;&amp;#xA;        // Link to Register Screen&amp;#xA;        btnLinkToRegister.setOnClickListener(new View.OnClickListener() {&amp;#xA;&amp;#xA;            public void onClick(View view) {&amp;#xA;                Intent i = new Intent(getApplicationContext(),&amp;#xA;                        RegisterActivity.class);&amp;#xA;                startActivity(i);&amp;#xA;                finish();&amp;#xA;            }&amp;#xA;        });&amp;#xA;    }&amp;#xA;    public class LoginTask extends AsyncTask&amp;lt;String, Void, Void&amp;gt; {&amp;#xA;&amp;#xA;        @Override&amp;#xA;        protected Void doInBackground(String... strings) {&amp;#xA;            String email = inputEmail.getText().toString();&amp;#xA;            String password = inputPassword.getText().toString();&amp;#xA;            UserFunctions userFunction = new UserFunctions();&amp;#xA;            JSONObject json = userFunction.loginUser(email, password);&amp;#xA;&amp;#xA;            // check for login response&amp;#xA;            try {&amp;#xA;                if  (json.getString(KEY_SUCCESS) != null) {&amp;#xA;                    loginErrorMsg.setText(&quot;&quot;);&amp;#xA;                    String res = json.getString(KEY_SUCCESS);&amp;#xA;                    if(Integer.parseInt(res) == 1){&amp;#xA;                        // user successfully logged in&amp;#xA;                        // Store user details in SQLite Database&amp;#xA;                        DatabaseHandler db = new DatabaseHandler(getApplicationContext());&amp;#xA;                        JSONObject json_user = json.getJSONObject(&quot;user&quot;);&amp;#xA;&amp;#xA;                        // Clear all previous data in database&amp;#xA;                        userFunction.logoutUser(getApplicationContext());&amp;#xA;                        db.addUser(json_user.getString(KEY_NAME), json_user.getString(KEY_EMAIL), json.getString(KEY_UID), json_user.getString(KEY_CREATED_AT));&amp;#xA;&amp;#xA;                        // Launch Dashboard Screen&amp;#xA;                        Intent dashboard = new Intent(getApplicationContext(), DashboardActivity.class);&amp;#xA;&amp;#xA;                        // Close all views before launching Dashboard&amp;#xA;                        dashboard.addFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP);&amp;#xA;                        startActivity(dashboard);&amp;#xA;&amp;#xA;                        // Close Login Screen&amp;#xA;                        finish();&amp;#xA;                    }else{&amp;#xA;                        // Error in login&amp;#xA;                        loginErrorMsg.setText(&quot;Incorrect username/password&quot;);&amp;#xA;                    }&amp;#xA;                }&amp;#xA;            } catch (JSONException e) {&amp;#xA;                e.printStackTrace();&amp;#xA;            }&amp;#xA;&amp;#xA;            return null;&amp;#xA;        }&amp;#xA;    }&amp;#xA;}&amp;#xA;&lt;/code&gt;&lt;/pre&gt;&amp;#xA;" stacktrace="java.lang.RuntimeException: An error occured while executing doInBackground()&#10;            at android.os.AsyncTask$3.done(AsyncTask.java:300)&#10;            at java.util.concurrent.FutureTask.finishCompletion(FutureTask.java:355)&#10;            at java.util.concurrent.FutureTask.setException(FutureTask.java:222)&#10;            at java.util.concurrent.FutureTask.run(FutureTask.java:242)&#10;            at android.os.AsyncTask$SerialExecutor$1.run(AsyncTask.java:231)&#10;            at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1112)&#10;            at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:587)&#10;            at java.lang.Thread.run(Thread.java:841)"/><post answer="&lt;p&gt;&lt;strong&gt;JAVA&lt;/strong&gt;&lt;/p&gt;&amp;#xA;&amp;#xA;&lt;pre&gt;&lt;code&gt;class AttemptLogin extends AsyncTask&amp;lt;String, String, JSONObject&amp;gt;&amp;#xA;{&amp;#xA;    String username;&amp;#xA;    String password;&amp;#xA;&amp;#xA;    public AttemptLogin(String username, String password){&amp;#xA;        this.username = username;&amp;#xA;        this.password = password;&amp;#xA;    }&amp;#xA;&amp;#xA;    protected JSONObject doInBackground(String... args)&amp;#xA;    {&amp;#xA;        JSONObject json;&amp;#xA;        try {&amp;#xA;            // Building Parameters&amp;#xA;            List&amp;lt;NameValuePair&amp;gt; params = new ArrayList&amp;lt;NameValuePair&amp;gt;();&amp;#xA;            params.add(new BasicNameValuePair(&quot;username&quot;, this.username));&amp;#xA;            params.add(new BasicNameValuePair(&quot;password&quot;, this.password));&amp;#xA;&amp;#xA;            Log.d(&quot;request!&quot;, &quot;starting&quot;);&amp;#xA;            // getting product details by making HTTP request&amp;#xA;            JSONObject json = jsonParser.makeHttpRequest(&amp;#xA;                    LOGIN_URL, &quot;POST&quot;, params);&amp;#xA;        } catch (JSONException e) {&amp;#xA;            e.printStackTrace();&amp;#xA;        }&amp;#xA;        return json;&amp;#xA;    }&amp;#xA;&amp;#xA;    protected void onPostExecute(JSONObject result)&amp;#xA;    {&amp;#xA;       // check your log for json response&amp;#xA;       Log.d(&quot;Login attempt&quot;, json.toString());&amp;#xA;    }&amp;#xA;}&amp;#xA;&lt;/code&gt;&lt;/pre&gt;&amp;#xA;&amp;#xA;&lt;p&gt;You run it like this&lt;/p&gt;&amp;#xA;&amp;#xA;&lt;pre&gt;&lt;code&gt;@Override&amp;#xA;public void onClick(View v) {&amp;#xA;    // TODO Auto-generated method stub&amp;#xA;    switch (v.getId()) {&amp;#xA;        case R.id.login:&amp;#xA;            String username = user.getText().toString();&amp;#xA;            String password = pass.getText().toString();&amp;#xA;&amp;#xA;            AttemptLogin attempt = new AttemptLogin(username, password);&amp;#xA;            attempt.execute();&amp;#xA;            break;&amp;#xA;        case R.id.register:&amp;#xA;            Intent i = new Intent(this, register.class);&amp;#xA;            startActivity(i);&amp;#xA;            break;&amp;#xA;&amp;#xA;        default:&amp;#xA;            break;&amp;#xA;    }&amp;#xA;}&amp;#xA;&lt;/code&gt;&lt;/pre&gt;&amp;#xA;&amp;#xA;&lt;p&gt;&lt;strong&gt;PHP&lt;/strong&gt;&lt;/p&gt;&amp;#xA;&amp;#xA;&lt;pre&gt;&lt;code&gt;&amp;lt;?php   &amp;#xA;$response = array();&amp;#xA;if (isset($_POST['username'], $_POST['password'])) {  &amp;#xA;    require(&quot;config.inc.php&quot;);&amp;#xA;    try {&amp;#xA;        $query = &quot; &amp;#xA;            SELECT &amp;#xA;                id, &amp;#xA;                username, &amp;#xA;                password&amp;#xA;            FROM users &amp;#xA;            WHERE &amp;#xA;                username = :username&amp;#xA;            AND password = :password&amp;#xA;        &quot;;&amp;#xA;&amp;#xA;        $stmt   = $db-&amp;gt;prepare($query);&amp;#xA;        $result = $stmt-&amp;gt;execute(array(':username' =&amp;gt; $_POST['username'],&amp;#xA;                                       ':password' =&amp;gt; $_POST['password']&amp;#xA;                         ));&amp;#xA;        if($stmt-&amp;gt;rowCount == 1){&amp;#xA;            $response[&quot;success&quot;] = true;&amp;#xA;            $response[&quot;message&quot;] = &quot;user found&quot;;        &amp;#xA;        }else{&amp;#xA;            $response[&quot;success&quot;] = false;&amp;#xA;            $response[&quot;message&quot;] = &quot;user not found&quot;;&amp;#xA;        }&amp;#xA;    }&amp;#xA;    catch (PDOException $ex) {&amp;#xA;        $response[&quot;success&quot;] = false;&amp;#xA;        $response[&quot;message&quot;] = &quot;Database Error1. Please Try Again!&quot;;&amp;#xA;    }&amp;#xA;&amp;#xA;} else {          &amp;#xA;    $response[&quot;success&quot;] = false;         &amp;#xA;    $response[&quot;message&quot;] = &quot;User Name and password not set&quot;; &amp;#xA;}&amp;#xA;echo json_encode($response);&amp;#xA;&lt;/code&gt;&lt;/pre&gt;&amp;#xA;" question="&lt;p&gt;Im making a log in activity to connect to a MySQL database. For some reason I keep getting this&lt;/p&gt;&amp;#xA;&amp;#xA;&lt;pre&gt;&lt;code&gt;08-13 08:45:59.739    1144-1159/com.amity.paul.amity E/JSON Parser? Error parsing data org.json.JSONException: Value ï»¿ï»¿ of type java.lang.String cannot be converted to JSONObject&amp;#xA;08-13 08:45:59.739    1144-1159/com.amity.paul.amity W/dalvikvm? threadid=11: thread exiting with uncaught exception (group=0xb3ad0ba8)&amp;#xA;08-13 08:46:02.409    1144-1159/com.amity.paul.amity E/AndroidRuntime? FATAL EXCEPTION: AsyncTask #1&amp;#xA;    Process: com.amity.paul.amity, PID: 1144&amp;#xA;    java.lang.RuntimeException: An error occured while executing doInBackground()&amp;#xA;            at android.os.AsyncTask$3.done(AsyncTask.java:300)&amp;#xA;            at java.util.concurrent.FutureTask.finishCompletion(FutureTask.java:355)&amp;#xA;            at java.util.concurrent.FutureTask.setException(FutureTask.java:222)&amp;#xA;            at java.util.concurrent.FutureTask.run(FutureTask.java:242)&amp;#xA;            at android.os.AsyncTask$SerialExecutor$1.run(AsyncTask.java:231)&amp;#xA;            at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1112)&amp;#xA;            at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:587)&amp;#xA;            at java.lang.Thread.run(Thread.java:841)&amp;#xA;     Caused by: java.lang.NullPointerException&amp;#xA;            at com.amity.paul.amity.login$AttemptLogin.doInBackground(login.java:129)&amp;#xA;            at com.amity.paul.amity.login$AttemptLogin.doInBackground(login.java:93)&amp;#xA;            at android.os.AsyncTask$2.call(AsyncTask.java:288)&amp;#xA;            at java.util.concurrent.FutureTask.run(FutureTask.java:237)&amp;#xA;            at android.os.AsyncTask$SerialExecutor$1.run(AsyncTask.java:231)&amp;#xA;            at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1112)&amp;#xA;            at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:587)&amp;#xA;            at java.lang.Thread.run(Thread.java:841)&amp;#xA;&lt;/code&gt;&lt;/pre&gt;&amp;#xA;&amp;#xA;&lt;p&gt;I have no idea what is wrong. Below are the related files:&amp;#xA;login.java&lt;/p&gt;&amp;#xA;&amp;#xA;&lt;pre&gt;&lt;code&gt;package com.amity.paul.amity;&amp;#xA;&amp;#xA;import java.util.ArrayList;&amp;#xA;import java.util.List;&amp;#xA;&amp;#xA;import org.apache.http.NameValuePair;&amp;#xA;import org.apache.http.message.BasicNameValuePair;&amp;#xA;import org.json.JSONException;&amp;#xA;import org.json.JSONObject;&amp;#xA;&amp;#xA;import android.app.Activity;&amp;#xA;import android.app.ProgressDialog;&amp;#xA;import android.content.Intent;&amp;#xA;import android.content.SharedPreferences;&amp;#xA;import android.os.AsyncTask;&amp;#xA;import android.os.Bundle;&amp;#xA;import android.preference.PreferenceManager;&amp;#xA;import android.util.Log;&amp;#xA;import android.view.View;&amp;#xA;import android.view.View.OnClickListener;&amp;#xA;import android.widget.Button;&amp;#xA;import android.widget.EditText;&amp;#xA;import android.widget.Toast;&amp;#xA;&amp;#xA;import library.JSONParser;&amp;#xA;&amp;#xA;public class login extends Activity implements OnClickListener{&amp;#xA;&amp;#xA;    private EditText user, pass;&amp;#xA;    private Button mSubmit, mRegister;&amp;#xA;&amp;#xA;    // Progress Dialog&amp;#xA;    private ProgressDialog pDialog;&amp;#xA;&amp;#xA;    // JSON parser class&amp;#xA;    JSONParser jsonParser = new JSONParser();&amp;#xA;&amp;#xA;    //php login script location:&amp;#xA;&amp;#xA;    //localhost :&amp;#xA;    //testing on your device&amp;#xA;    //put your local ip instead,  on windows, run CMD &amp;gt; ipconfig&amp;#xA;    //or in mac's terminal type ifconfig and look for the ip under en0 or en1&amp;#xA;    // private static final String LOGIN_URL = &quot;http://xxx.xxx.x.x:1234/webservice/login.php&quot;;&amp;#xA;&amp;#xA;    //testing on Emulator:&amp;#xA;    private static final String LOGIN_URL = &quot;http://192.168.2.157/amity/login.php&quot;;&amp;#xA;&amp;#xA;    //testing from a real server:&amp;#xA;    //private static final String LOGIN_URL = &quot;http://www.yourdomain.com/webservice/login.php&quot;;&amp;#xA;&amp;#xA;    //JSON element ids from repsonse of php script:&amp;#xA;    private static final String TAG_SUCCESS = &quot;success&quot;;&amp;#xA;    private static final String TAG_MESSAGE = &quot;message&quot;;&amp;#xA;&amp;#xA;    @Override&amp;#xA;    protected void onCreate(Bundle savedInstanceState) {&amp;#xA;        // TODO Auto-generated method stub&amp;#xA;        super.onCreate(savedInstanceState);&amp;#xA;        setContentView(R.layout.login);&amp;#xA;&amp;#xA;        //setup input fields&amp;#xA;        user = (EditText)findViewById(R.id.username);&amp;#xA;        pass = (EditText)findViewById(R.id.password);&amp;#xA;&amp;#xA;        //setup buttons&amp;#xA;        mSubmit = (Button)findViewById(R.id.login);&amp;#xA;        mRegister = (Button)findViewById(R.id.register);&amp;#xA;&amp;#xA;        //register listeners&amp;#xA;        mSubmit.setOnClickListener(this);&amp;#xA;        mRegister.setOnClickListener(this);&amp;#xA;&amp;#xA;    }&amp;#xA;&amp;#xA;    @Override&amp;#xA;    public void onClick(View v) {&amp;#xA;        // TODO Auto-generated method stub&amp;#xA;        switch (v.getId()) {&amp;#xA;            case R.id.login:&amp;#xA;                new AttemptLogin().execute();&amp;#xA;                break;&amp;#xA;            case R.id.register:&amp;#xA;                Intent i = new Intent(this, register.class);&amp;#xA;                startActivity(i);&amp;#xA;                break;&amp;#xA;&amp;#xA;            default:&amp;#xA;                break;&amp;#xA;        }&amp;#xA;    }&amp;#xA;&amp;#xA;    class AttemptLogin extends AsyncTask&amp;lt;String, String, String&amp;gt; {&amp;#xA;&amp;#xA;        /**&amp;#xA;         * Before starting background thread Show Progress Dialog&amp;#xA;         * */&amp;#xA;        boolean failure = false;&amp;#xA;&amp;#xA;        @Override&amp;#xA;        protected void onPreExecute() {&amp;#xA;            super.onPreExecute();&amp;#xA;            pDialog = new ProgressDialog(login.this);&amp;#xA;            pDialog.setMessage(&quot;Attempting login...&quot;);&amp;#xA;            pDialog.setIndeterminate(false);&amp;#xA;            pDialog.setCancelable(true);&amp;#xA;            pDialog.show();&amp;#xA;        }&amp;#xA;&amp;#xA;        @Override&amp;#xA;        protected String doInBackground(String... args) {&amp;#xA;            // TODO Auto-generated method stub&amp;#xA;            // Check for success tag&amp;#xA;            int success;&amp;#xA;            String username = user.getText().toString();&amp;#xA;            String password = pass.getText().toString();&amp;#xA;            try {&amp;#xA;                // Building Parameters&amp;#xA;                List&amp;lt;NameValuePair&amp;gt; params = new ArrayList&amp;lt;NameValuePair&amp;gt;();&amp;#xA;                params.add(new BasicNameValuePair(&quot;username&quot;, username));&amp;#xA;                params.add(new BasicNameValuePair(&quot;password&quot;, password));&amp;#xA;&amp;#xA;                Log.d(&quot;request!&quot;, &quot;starting&quot;);&amp;#xA;                // getting product details by making HTTP request&amp;#xA;                JSONObject json = jsonParser.makeHttpRequest(&amp;#xA;                        LOGIN_URL, &quot;POST&quot;, params);&amp;#xA;&amp;#xA;                // check your log for json response&amp;#xA;                Log.d(&quot;Login attempt&quot;, json.toString());&amp;#xA;&amp;#xA;                // json success tag&amp;#xA;                success = json.getInt(TAG_SUCCESS);&amp;#xA;                if (success == 1) {&amp;#xA;                    Log.d(&quot;Login Successful!&quot;, json.toString());&amp;#xA;                    //save user data&amp;#xA;                    SharedPreferences sp = PreferenceManager&amp;#xA;                            .getDefaultSharedPreferences(login.this);&amp;#xA;                    SharedPreferences.Editor edit = sp.edit();&amp;#xA;                    edit.putString(&quot;username&quot;,username);&amp;#xA;                    edit.commit();&amp;#xA;&amp;#xA;                    Intent i = new Intent(login.this, home.class);&amp;#xA;                    finish();&amp;#xA;                    startActivity(i);&amp;#xA;                    return json.getString(TAG_MESSAGE);&amp;#xA;                }else{&amp;#xA;                    Log.d(&quot;Login Failure!&quot;, json.getString(TAG_MESSAGE));&amp;#xA;                    return json.getString(TAG_MESSAGE);&amp;#xA;&amp;#xA;                }&amp;#xA;            } catch (JSONException e) {&amp;#xA;                e.printStackTrace();&amp;#xA;            }&amp;#xA;&amp;#xA;            return null;&amp;#xA;&amp;#xA;        }&amp;#xA;        /**&amp;#xA;         * After completing background task Dismiss the progress dialog&amp;#xA;         * **/&amp;#xA;        protected void onPostExecute(String file_url) {&amp;#xA;            // dismiss the dialog once product deleted&amp;#xA;            pDialog.dismiss();&amp;#xA;            if (file_url != null){&amp;#xA;                Toast.makeText(login.this, file_url, Toast.LENGTH_LONG).show();&amp;#xA;            }&amp;#xA;&amp;#xA;        }&amp;#xA;&amp;#xA;    }&amp;#xA;&amp;#xA;}&amp;#xA;&lt;/code&gt;&lt;/pre&gt;&amp;#xA;&amp;#xA;&lt;p&gt;JSONParser:&lt;/p&gt;&amp;#xA;&amp;#xA;&lt;pre&gt;&lt;code&gt;package library;&amp;#xA;&amp;#xA;import java.io.BufferedReader;&amp;#xA;import java.io.IOException;&amp;#xA;import java.io.InputStream;&amp;#xA;import java.io.InputStreamReader;&amp;#xA;import java.io.UnsupportedEncodingException;&amp;#xA;import java.util.List;&amp;#xA;&amp;#xA;import org.apache.http.HttpEntity;&amp;#xA;import org.apache.http.HttpResponse;&amp;#xA;import org.apache.http.NameValuePair;&amp;#xA;import org.apache.http.client.ClientProtocolException;&amp;#xA;import org.apache.http.client.entity.UrlEncodedFormEntity;&amp;#xA;import org.apache.http.client.methods.HttpGet;&amp;#xA;import org.apache.http.client.methods.HttpPost;&amp;#xA;import org.apache.http.client.utils.URLEncodedUtils;&amp;#xA;import org.apache.http.impl.client.DefaultHttpClient;&amp;#xA;import org.json.JSONException;&amp;#xA;import org.json.JSONObject;&amp;#xA;&amp;#xA;import android.util.Log;&amp;#xA;&amp;#xA;public class JSONParser {&amp;#xA;&amp;#xA;    static InputStream is = null;&amp;#xA;    static JSONObject jObj = null;&amp;#xA;    static String json = &quot;&quot;;&amp;#xA;&amp;#xA;    // constructor&amp;#xA;    public JSONParser() {&amp;#xA;&amp;#xA;    }&amp;#xA;&amp;#xA;&amp;#xA;    public JSONObject getJSONFromUrl(final String url) {&amp;#xA;&amp;#xA;        // Making HTTP request&amp;#xA;        try {&amp;#xA;            // Construct the client and the HTTP request.&amp;#xA;            DefaultHttpClient httpClient = new DefaultHttpClient();&amp;#xA;            HttpPost httpPost = new HttpPost(url);&amp;#xA;&amp;#xA;            // Execute the POST request and store the response locally.&amp;#xA;            HttpResponse httpResponse = httpClient.execute(httpPost);&amp;#xA;            // Extract data from the response.&amp;#xA;            HttpEntity httpEntity = httpResponse.getEntity();&amp;#xA;            // Open an inputStream with the data content.&amp;#xA;            is = httpEntity.getContent();&amp;#xA;&amp;#xA;        } catch (UnsupportedEncodingException e) {&amp;#xA;            e.printStackTrace();&amp;#xA;        } catch (ClientProtocolException e) {&amp;#xA;            e.printStackTrace();&amp;#xA;        } catch (IOException e) {&amp;#xA;            e.printStackTrace();&amp;#xA;        }&amp;#xA;&amp;#xA;        try {&amp;#xA;            // Create a BufferedReader to parse through the inputStream.&amp;#xA;            BufferedReader reader = new BufferedReader(new InputStreamReader(&amp;#xA;                    is, &quot;iso-8859-1&quot;), 8);&amp;#xA;            // Declare a string builder to help with the parsing.&amp;#xA;            StringBuilder sb = new StringBuilder();&amp;#xA;            // Declare a string to store the JSON object data in string form.&amp;#xA;            String line = null;&amp;#xA;&amp;#xA;            // Build the string until null.&amp;#xA;            while ((line = reader.readLine()) != null) {&amp;#xA;                sb.append(line + &quot;\n&quot;);&amp;#xA;            }&amp;#xA;&amp;#xA;            // Close the input stream.&amp;#xA;            is.close();&amp;#xA;            // Convert the string builder data to an actual string.&amp;#xA;            json = sb.toString();&amp;#xA;        } catch (Exception e) {&amp;#xA;            Log.e(&quot;Buffer Error&quot;, &quot;Error converting result &quot; + e.toString());&amp;#xA;        }&amp;#xA;&amp;#xA;        // Try to parse the string to a JSON object&amp;#xA;        try {&amp;#xA;            jObj = new JSONObject(json);&amp;#xA;        } catch (JSONException e) {&amp;#xA;            Log.e(&quot;JSON Parser&quot;, &quot;Error parsing data &quot; + e.toString());&amp;#xA;        }&amp;#xA;&amp;#xA;        // Return the JSON Object.&amp;#xA;        return jObj;&amp;#xA;&amp;#xA;    }&amp;#xA;&amp;#xA;&amp;#xA;    // function get json from url&amp;#xA;    // by making HTTP POST or GET mehtod&amp;#xA;    public JSONObject makeHttpRequest(String url, String method,&amp;#xA;                                      List&amp;lt;NameValuePair&amp;gt; params) {&amp;#xA;&amp;#xA;        // Making HTTP request&amp;#xA;        try {&amp;#xA;&amp;#xA;            // check for request method&amp;#xA;            if(method == &quot;POST&quot;){&amp;#xA;                // request method is POST&amp;#xA;                // defaultHttpClient&amp;#xA;                DefaultHttpClient httpClient = new DefaultHttpClient();&amp;#xA;                HttpPost httpPost = new HttpPost(url);&amp;#xA;                httpPost.setEntity(new UrlEncodedFormEntity(params));&amp;#xA;&amp;#xA;                HttpResponse httpResponse = httpClient.execute(httpPost);&amp;#xA;                HttpEntity httpEntity = httpResponse.getEntity();&amp;#xA;                is = httpEntity.getContent();&amp;#xA;&amp;#xA;            }else if(method == &quot;GET&quot;){&amp;#xA;                // request method is GET&amp;#xA;                DefaultHttpClient httpClient = new DefaultHttpClient();&amp;#xA;                String paramString = URLEncodedUtils.format(params, &quot;utf-8&quot;);&amp;#xA;                url += &quot;?&quot; + paramString;&amp;#xA;                HttpGet httpGet = new HttpGet(url);&amp;#xA;&amp;#xA;                HttpResponse httpResponse = httpClient.execute(httpGet);&amp;#xA;                HttpEntity httpEntity = httpResponse.getEntity();&amp;#xA;                is = httpEntity.getContent();&amp;#xA;            }&amp;#xA;&amp;#xA;        } catch (UnsupportedEncodingException e) {&amp;#xA;            e.printStackTrace();&amp;#xA;        } catch (ClientProtocolException e) {&amp;#xA;            e.printStackTrace();&amp;#xA;        } catch (IOException e) {&amp;#xA;            e.printStackTrace();&amp;#xA;        }&amp;#xA;&amp;#xA;        try {&amp;#xA;            BufferedReader reader = new BufferedReader(new InputStreamReader(&amp;#xA;                    is, &quot;iso-8859-1&quot;), 8);&amp;#xA;            StringBuilder sb = new StringBuilder();&amp;#xA;            String line = null;&amp;#xA;            while ((line = reader.readLine()) != null) {&amp;#xA;                sb.append(line + &quot;\n&quot;);&amp;#xA;            }&amp;#xA;            is.close();&amp;#xA;            json = sb.toString();&amp;#xA;        } catch (Exception e) {&amp;#xA;            Log.e(&quot;Buffer Error&quot;, &quot;Error converting result &quot; + e.toString());&amp;#xA;        }&amp;#xA;&amp;#xA;        // try parse the string to a JSON object&amp;#xA;        try {&amp;#xA;            jObj = new JSONObject(json);&amp;#xA;        } catch (JSONException e) {&amp;#xA;            Log.e(&quot;JSON Parser&quot;, &quot;Error parsing data &quot; + e.toString());&amp;#xA;        }&amp;#xA;&amp;#xA;        // return JSON String&amp;#xA;        return jObj;&amp;#xA;&amp;#xA;    }&amp;#xA;}&amp;#xA;&lt;/code&gt;&lt;/pre&gt;&amp;#xA;&amp;#xA;&lt;p&gt;login.php&lt;/p&gt;&amp;#xA;&amp;#xA;&lt;pre&gt;&lt;code&gt;&amp;lt;?php&amp;#xA;&amp;#xA;//load and connect to MySQL database stuff&amp;#xA;require(&quot;config.inc.php&quot;);&amp;#xA;&amp;#xA;if (!empty($_POST)) {&amp;#xA;    //gets user's info based off of a username.&amp;#xA;    $query = &quot; &amp;#xA;            SELECT &amp;#xA;                id, &amp;#xA;                username, &amp;#xA;                password&amp;#xA;            FROM users &amp;#xA;            WHERE &amp;#xA;                username = :username &amp;#xA;        &quot;;&amp;#xA;&amp;#xA;    $query_params = array(&amp;#xA;        ':username' =&amp;gt; $_POST['username']&amp;#xA;    );&amp;#xA;&amp;#xA;    try {&amp;#xA;        $stmt   = $db-&amp;gt;prepare($query);&amp;#xA;        $result = $stmt-&amp;gt;execute($query_params);&amp;#xA;    }&amp;#xA;    catch (PDOException $ex) {&amp;#xA;        // For testing, you could use a die and message. &amp;#xA;        //die(&quot;Failed to run query: &quot; . $ex-&amp;gt;getMessage());&amp;#xA;&amp;#xA;        //or just use this use this one to product JSON data:&amp;#xA;        $response[&quot;success&quot;] = 0;&amp;#xA;        $response[&quot;message&quot;] = &quot;Database Error1. Please Try Again!&quot;;&amp;#xA;        die(json_encode($response));&amp;#xA;&amp;#xA;    }&amp;#xA;&amp;#xA;    //This will be the variable to determine whether or not the user's information is correct.&amp;#xA;    //we initialize it as false.&amp;#xA;    $validated_info = false;&amp;#xA;&amp;#xA;    //fetching all the rows from the query&amp;#xA;    $row = $stmt-&amp;gt;fetch();&amp;#xA;    if ($row) {&amp;#xA;        //if we encrypted the password, we would unencrypt it here, but in our case we just&amp;#xA;        //compare the two passwords&amp;#xA;        if ($_POST['password'] === $row['password']) {&amp;#xA;            $login_ok = true;&amp;#xA;        }&amp;#xA;    }&amp;#xA;&amp;#xA;    // If the user logged in successfully, then we send them to the private members-only page &amp;#xA;    // Otherwise, we display a login failed message and show the login form again &amp;#xA;    if ($login_ok) {&amp;#xA;        $response[&quot;success&quot;] = 1;&amp;#xA;        $response[&quot;message&quot;] = &quot;Login successful!&quot;;&amp;#xA;        die(json_encode($response));&amp;#xA;    } else {&amp;#xA;        $response[&quot;success&quot;] = 0;&amp;#xA;        $response[&quot;message&quot;] = &quot;Invalid Credentials!&quot;;&amp;#xA;        die(json_encode($response));&amp;#xA;    }&amp;#xA;} else {&amp;#xA;?&amp;gt;&amp;#xA;        &amp;lt;h1&amp;gt;Login&amp;lt;/h1&amp;gt; &amp;#xA;        &amp;lt;form action=&quot;login.php&quot; method=&quot;post&quot;&amp;gt; &amp;#xA;            Username:&amp;lt;br /&amp;gt; &amp;#xA;            &amp;lt;input type=&quot;text&quot; name=&quot;username&quot; placeholder=&quot;username&quot; /&amp;gt; &amp;#xA;            &amp;lt;br /&amp;gt;&amp;lt;br /&amp;gt; &amp;#xA;            Password:&amp;lt;br /&amp;gt; &amp;#xA;            &amp;lt;input type=&quot;password&quot; name=&quot;password&quot; placeholder=&quot;password&quot; value=&quot;&quot; /&amp;gt; &amp;#xA;            &amp;lt;br /&amp;gt;&amp;lt;br /&amp;gt; &amp;#xA;            &amp;lt;input type=&quot;submit&quot; value=&quot;Login&quot; /&amp;gt; &amp;#xA;        &amp;lt;/form&amp;gt; &amp;#xA;        &amp;lt;a href=&quot;register.php&quot;&amp;gt;Register&amp;lt;/a&amp;gt;&amp;#xA;    &amp;lt;?php&amp;#xA;}&amp;#xA;&amp;#xA;?&amp;gt;&amp;#xA;&lt;/code&gt;&lt;/pre&gt;&amp;#xA;&amp;#xA;&lt;p&gt;I am extremely new to mobile development so please make it easy to understand. Cheers!&lt;/p&gt;&amp;#xA;" stacktrace="java.lang.RuntimeException: An error occured while executing doInBackground()&#10;            at android.os.AsyncTask$3.done(AsyncTask.java:300)&#10;            at java.util.concurrent.FutureTask.finishCompletion(FutureTask.java:355)&#10;            at java.util.concurrent.FutureTask.setException(FutureTask.java:222)&#10;            at java.util.concurrent.FutureTask.run(FutureTask.java:242)&#10;            at android.os.AsyncTask$SerialExecutor$1.run(AsyncTask.java:231)&#10;            at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1112)&#10;            at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:587)&#10;            at java.lang.Thread.run(Thread.java:841)"/><post answer="" question="&lt;p&gt;I am making a log in/registration activity. I use MySQL with PHP for my database.&lt;/p&gt;&amp;#xA;&amp;#xA;&lt;p&gt;FYI, I am relatively new to Android development, so please make it 'newbie' friendly. Thanks!&lt;/p&gt;&amp;#xA;&amp;#xA;&lt;p&gt;I am unable to log in because the app crashes (sorry, Amity has stopped working). So I check the registration activity to see if it is connecting with the database, I make a new username, enter a passwords, tap register, then the same message (sorry, Amity has stopped working) appears. I check my database table through phpmyadmin, the new user is inserted on a new row.&lt;/p&gt;&amp;#xA;&amp;#xA;&lt;p&gt;Error from logcat:&lt;/p&gt;&amp;#xA;&amp;#xA;&lt;pre&gt;&lt;code&gt;08-14 06:06:56.332    1255-1269/com.amity.paul.amity E/JSON Parser? Error parsing data org.json.JSONException: Value ï»¿ï»¿ of type java.lang.String cannot be converted to JSONObject&amp;#xA;08-14 06:06:56.332    1255-1269/com.amity.paul.amity W/dalvikvm? threadid=12: thread exiting with uncaught exception (group=0xb3adcba8)&amp;#xA;08-14 06:06:56.382    1255-1269/com.amity.paul.amity E/AndroidRuntime? FATAL EXCEPTION: AsyncTask #2&amp;#xA;    Process: com.amity.paul.amity, PID: 1255&amp;#xA;    java.lang.RuntimeException: An error occured while executing doInBackground()&amp;#xA;            at android.os.AsyncTask$3.done(AsyncTask.java:300)&amp;#xA;            at java.util.concurrent.FutureTask.finishCompletion(FutureTask.java:355)&amp;#xA;            at java.util.concurrent.FutureTask.setException(FutureTask.java:222)&amp;#xA;            at java.util.concurrent.FutureTask.run(FutureTask.java:242)&amp;#xA;            at android.os.AsyncTask$SerialExecutor$1.run(AsyncTask.java:231)&amp;#xA;            at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1112)&amp;#xA;            at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:587)&amp;#xA;            at java.lang.Thread.run(Thread.java:841)&amp;#xA;     Caused by: java.lang.NullPointerException&amp;#xA;            at com.amity.paul.amity.register$CreateUser.doInBackground(register.java:113)&amp;#xA;            at com.amity.paul.amity.register$CreateUser.doInBackground(register.java:76)&amp;#xA;            at android.os.AsyncTask$2.call(AsyncTask.java:288)&amp;#xA;            at java.util.concurrent.FutureTask.run(FutureTask.java:237)&amp;#xA;            at android.os.AsyncTask$SerialExecutor$1.run(AsyncTask.java:231)&amp;#xA;            at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1112)&amp;#xA;            at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:587)&amp;#xA;            at java.lang.Thread.run(Thread.java:841)&amp;#xA;08-14 06:06:56.812    1255-1255/com.amity.paul.amity I/Choreographer? Skipped 62 frames!  The application may be doing too much work on its main thread.&amp;#xA;08-14 06:06:57.722    1255-1255/com.amity.paul.amity I/Choreographer? Skipped 201 frames!  The application may be doing too much work on its main thread.&amp;#xA;08-14 06:06:58.102    1255-1255/com.amity.paul.amity I/Choreographer? Skipped 63 frames!  The application may be doing too much work on its main thread.&amp;#xA;08-14 06:06:58.712    1255-1255/com.amity.paul.amity E/WindowManager? android.view.WindowLeaked: Activity com.amity.paul.amity.register has leaked window com.android.internal.policy.impl.PhoneWindow$DecorView{b3d97bf8 V.E..... R.....ID 0,0-456,144} that was originally added here&amp;#xA;            at android.view.ViewRootImpl.&amp;lt;init&amp;gt;(ViewRootImpl.java:348)&amp;#xA;            at android.view.WindowManagerGlobal.addView(WindowManagerGlobal.java:248)&amp;#xA;            at android.view.WindowManagerImpl.addView(WindowManagerImpl.java:69)&amp;#xA;            at android.app.Dialog.show(Dialog.java:286)&amp;#xA;            at com.amity.paul.amity.register$CreateUser.onPreExecute(register.java:90)&amp;#xA;            at android.os.AsyncTask.executeOnExecutor(AsyncTask.java:587)&amp;#xA;            at android.os.AsyncTask.execute(AsyncTask.java:535)&amp;#xA;            at com.amity.paul.amity.register.onClick(register.java:72)&amp;#xA;            at android.view.View.performClick(View.java:4438)&amp;#xA;            at android.view.View$PerformClick.run(View.java:18422)&amp;#xA;            at android.os.Handler.handleCallback(Handler.java:733)&amp;#xA;            at android.os.Handler.dispatchMessage(Handler.java:95)&amp;#xA;            at android.os.Looper.loop(Looper.java:136)&amp;#xA;            at android.app.ActivityThread.main(ActivityThread.java:5017)&amp;#xA;            at java.lang.reflect.Method.invokeNative(Native Method)&amp;#xA;            at java.lang.reflect.Method.invoke(Method.java:515)&amp;#xA;            at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:779)&amp;#xA;            at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:595)&amp;#xA;            at dalvik.system.NativeStart.main(Native Method)&amp;#xA;&lt;/code&gt;&lt;/pre&gt;&amp;#xA;&amp;#xA;&lt;p&gt;register.php&lt;/p&gt;&amp;#xA;&amp;#xA;&lt;pre&gt;&lt;code&gt;&amp;lt;?php&amp;#xA;&amp;#xA;/*&amp;#xA;Our &quot;config.inc.php&quot; file connects to database every time we include or require&amp;#xA;it within a php script.  Since we want this script to add a new user to our db,&amp;#xA;we will be talking with our database, and therefore,&amp;#xA;let's require the connection to happen:&amp;#xA;*/&amp;#xA;require(&quot;config.inc.php&quot;);&amp;#xA;&amp;#xA;//if posted data is not empty&amp;#xA;if (!empty($_POST)) {&amp;#xA;    //If the username or password is empty when the user submits&amp;#xA;    //the form, the page will die.&amp;#xA;    //Using die isn't a very good practice, you may want to look into&amp;#xA;    //displaying an error message within the form instead.  &amp;#xA;    //We could also do front-end form validation from within our Android App,&amp;#xA;    //but it is good to have a have the back-end code do a double check.&amp;#xA;    if (empty($_POST['username']) || empty($_POST['password'])) {&amp;#xA;&amp;#xA;&amp;#xA;        // Create some data that will be the JSON response &amp;#xA;        $response[&quot;success&quot;] = 0;&amp;#xA;        $response[&quot;message&quot;] = &quot;Please Enter Both a Username and Password.&quot;;&amp;#xA;&amp;#xA;        //die will kill the page and not execute any code below, it will also&amp;#xA;        //display the parameter... in this case the JSON data our Android&amp;#xA;        //app will parse&amp;#xA;        die(json_encode($response));&amp;#xA;    }&amp;#xA;&amp;#xA;    //if the page hasn't died, we will check with our database to see if there is&amp;#xA;    //already a user with the username specificed in the form.  &quot;:user&quot; is just&amp;#xA;    //a blank variable that we will change before we execute the query.  We&amp;#xA;    //do it this way to increase security, and defend against sql injections&amp;#xA;    $query        = &quot; SELECT 1 FROM users WHERE username = :user&quot;;&amp;#xA;    //now lets update what :user should be&amp;#xA;    $query_params = array(&amp;#xA;        ':user' =&amp;gt; $_POST['username']&amp;#xA;    );&amp;#xA;&amp;#xA;    //Now let's make run the query:&amp;#xA;    try {&amp;#xA;        // These two statements run the query against your database table. &amp;#xA;        $stmt   = $db-&amp;gt;prepare($query);&amp;#xA;        $result = $stmt-&amp;gt;execute($query_params);&amp;#xA;    }&amp;#xA;    catch (PDOException $ex) {&amp;#xA;        // For testing, you could use a die and message. &amp;#xA;        //die(&quot;Failed to run query: &quot; . $ex-&amp;gt;getMessage());&amp;#xA;&amp;#xA;        //or just use this use this one to product JSON data:&amp;#xA;        $response[&quot;success&quot;] = 0;&amp;#xA;        $response[&quot;message&quot;] = &quot;Database Error1. Please Try Again!&quot;;&amp;#xA;        die(json_encode($response));&amp;#xA;    }&amp;#xA;&amp;#xA;    //fetch is an array of returned data.  If any data is returned,&amp;#xA;    //we know that the username is already in use, so we murder our&amp;#xA;    //page&amp;#xA;    $row = $stmt-&amp;gt;fetch();&amp;#xA;    if ($row) {&amp;#xA;        // For testing, you could use a die and message. &amp;#xA;        //die(&quot;This username is already in use&quot;);&amp;#xA;&amp;#xA;        //You could comment out the above die and use this one:&amp;#xA;        $response[&quot;success&quot;] = 0;&amp;#xA;        $response[&quot;message&quot;] = &quot;I'm sorry, this username is already in use&quot;;&amp;#xA;        die(json_encode($response));&amp;#xA;    }&amp;#xA;&amp;#xA;    //If we have made it here without dying, then we are in the clear to &amp;#xA;    //create a new user.  Let's setup our new query to create a user.  &amp;#xA;    //Again, to protect against sql injects, user tokens such as :user and :pass&amp;#xA;    $query = &quot;INSERT INTO users ( username, password ) VALUES ( :user, :pass ) &quot;;&amp;#xA;&amp;#xA;    //Again, we need to update our tokens with the actual data:&amp;#xA;    $query_params = array(&amp;#xA;        ':user' =&amp;gt; $_POST['username'],&amp;#xA;        ':pass' =&amp;gt; $_POST['password']&amp;#xA;    );&amp;#xA;&amp;#xA;    //time to run our query, and create the user&amp;#xA;    try {&amp;#xA;        $stmt   = $db-&amp;gt;prepare($query);&amp;#xA;        $result = $stmt-&amp;gt;execute($query_params);&amp;#xA;    }&amp;#xA;    catch (PDOException $ex) {&amp;#xA;        // For testing, you could use a die and message. &amp;#xA;        //die(&quot;Failed to run query: &quot; . $ex-&amp;gt;getMessage());&amp;#xA;&amp;#xA;        //or just use this use this one:&amp;#xA;        $response[&quot;success&quot;] = 0;&amp;#xA;        $response[&quot;message&quot;] = &quot;Database Error2. Please Try Again!&quot;;&amp;#xA;        die(json_encode($response));&amp;#xA;    }&amp;#xA;&amp;#xA;    //If we have made it this far without dying, we have successfully added&amp;#xA;    //a new user to our database.  We could do a few things here, such as &amp;#xA;    //redirect to the login page.  Instead we are going to echo out some&amp;#xA;    //json data that will be read by the Android application, which will login&amp;#xA;    //the user (or redirect to a different activity, I'm not sure yet..)&amp;#xA;    $response[&quot;success&quot;] = 1;&amp;#xA;    $response[&quot;message&quot;] = &quot;Username Successfully Added!&quot;;&amp;#xA;    echo json_encode($response);&amp;#xA;&amp;#xA;    //for a php webservice you could do a simple redirect and die.&amp;#xA;    //header(&quot;Location: login.php&quot;); &amp;#xA;    //die(&quot;Redirecting to login.php&quot;);&amp;#xA;&amp;#xA;&amp;#xA;} else {&amp;#xA;?&amp;gt;&amp;#xA;    &amp;lt;h1&amp;gt;Register&amp;lt;/h1&amp;gt; &amp;#xA;    &amp;lt;form action=&quot;register.php&quot; method=&quot;post&quot;&amp;gt; &amp;#xA;        Username:&amp;lt;br /&amp;gt; &amp;#xA;        &amp;lt;input type=&quot;text&quot; name=&quot;username&quot; value=&quot;&quot; /&amp;gt; &amp;#xA;        &amp;lt;br /&amp;gt;&amp;lt;br /&amp;gt; &amp;#xA;        Password:&amp;lt;br /&amp;gt; &amp;#xA;        &amp;lt;input type=&quot;password&quot; name=&quot;password&quot; value=&quot;&quot; /&amp;gt; &amp;#xA;        &amp;lt;br /&amp;gt;&amp;lt;br /&amp;gt; &amp;#xA;        &amp;lt;input type=&quot;submit&quot; value=&quot;Register New User&quot; /&amp;gt; &amp;#xA;    &amp;lt;/form&amp;gt;&amp;#xA;    &amp;lt;?php&amp;#xA;}&amp;#xA;&amp;#xA;?&amp;gt;&amp;#xA;&lt;/code&gt;&lt;/pre&gt;&amp;#xA;&amp;#xA;&lt;p&gt;register.java&lt;/p&gt;&amp;#xA;&amp;#xA;&lt;pre&gt;&lt;code&gt;package com.amity.paul.amity;&amp;#xA;&amp;#xA;/**&amp;#xA; * Created by Paul on 13/08/2014.&amp;#xA; */&amp;#xA;import java.util.ArrayList;&amp;#xA;import java.util.List;&amp;#xA;import org.apache.http.NameValuePair;&amp;#xA;import org.apache.http.message.BasicNameValuePair;&amp;#xA;import org.json.JSONException;&amp;#xA;import org.json.JSONObject;&amp;#xA;import android.app.Activity;&amp;#xA;import android.app.ProgressDialog;&amp;#xA;import android.os.AsyncTask;&amp;#xA;import android.os.Bundle;&amp;#xA;import android.util.Log;&amp;#xA;import android.view.View;&amp;#xA;import android.view.View.OnClickListener;&amp;#xA;import android.widget.Button;&amp;#xA;import android.widget.EditText;&amp;#xA;import android.widget.Toast;&amp;#xA;&amp;#xA;import library.JSONParser;&amp;#xA;&amp;#xA;public class register extends Activity implements OnClickListener{&amp;#xA;&amp;#xA;    private EditText user, pass;&amp;#xA;    private Button  mRegister;&amp;#xA;&amp;#xA;    // Progress Dialog&amp;#xA;    private ProgressDialog pDialog;&amp;#xA;&amp;#xA;    // JSON parser class&amp;#xA;    JSONParser jsonParser = new JSONParser();&amp;#xA;&amp;#xA;    //php login script&amp;#xA;&amp;#xA;    //localhost :&amp;#xA;    //testing on your device&amp;#xA;    //put your local ip instead,  on windows, run CMD &amp;gt; ipconfig&amp;#xA;    //or in mac's terminal type ifconfig and look for the ip under en0 or en1&amp;#xA;    // private static final String LOGIN_URL = &quot;http://xxx.xxx.x.x:1234/webservice/register.php&quot;;&amp;#xA;&amp;#xA;    //testing on Emulator:&amp;#xA;    private static final String LOGIN_URL = &quot;http://192.168.2.157/amity/register.php&quot;;&amp;#xA;&amp;#xA;    //testing from a real server:&amp;#xA;    //private static final String LOGIN_URL = &quot;http://www.yourdomain.com/webservice/register.php&quot;;&amp;#xA;&amp;#xA;    //ids&amp;#xA;    private static final String TAG_SUCCESS = &quot;success&quot;;&amp;#xA;    private static final String TAG_MESSAGE = &quot;message&quot;;&amp;#xA;&amp;#xA;    @Override&amp;#xA;    protected void onCreate(Bundle savedInstanceState) {&amp;#xA;        // TODO Auto-generated method stub&amp;#xA;        super.onCreate(savedInstanceState);&amp;#xA;        setContentView(R.layout.register);&amp;#xA;&amp;#xA;        user = (EditText)findViewById(R.id.username);&amp;#xA;        pass = (EditText)findViewById(R.id.password);&amp;#xA;&amp;#xA;        mRegister = (Button)findViewById(R.id.register);&amp;#xA;        mRegister.setOnClickListener(this);&amp;#xA;&amp;#xA;    }&amp;#xA;&amp;#xA;    @Override&amp;#xA;    public void onClick(View v) {&amp;#xA;        // TODO Auto-generated method stub&amp;#xA;&amp;#xA;        new CreateUser().execute();&amp;#xA;&amp;#xA;    }&amp;#xA;&amp;#xA;    class CreateUser extends AsyncTask&amp;lt;String, String, String&amp;gt; {&amp;#xA;&amp;#xA;        /**&amp;#xA;         * Before starting background thread Show Progress Dialog&amp;#xA;         * */&amp;#xA;        boolean failure = false;&amp;#xA;&amp;#xA;        @Override&amp;#xA;        protected void onPreExecute() {&amp;#xA;            super.onPreExecute();&amp;#xA;            pDialog = new ProgressDialog(register.this);&amp;#xA;            pDialog.setMessage(&quot;Creating User...&quot;);&amp;#xA;            pDialog.setIndeterminate(false);&amp;#xA;            pDialog.setCancelable(true);&amp;#xA;            pDialog.show();&amp;#xA;        }&amp;#xA;&amp;#xA;        @Override&amp;#xA;        protected String doInBackground(String... args) {&amp;#xA;            // TODO Auto-generated method stub&amp;#xA;            // Check for success tag&amp;#xA;            int success;&amp;#xA;            String username = user.getText().toString();&amp;#xA;            String password = pass.getText().toString();&amp;#xA;            try {&amp;#xA;                // Building Parameters&amp;#xA;                List&amp;lt;NameValuePair&amp;gt; params = new ArrayList&amp;lt;NameValuePair&amp;gt;();&amp;#xA;                params.add(new BasicNameValuePair(&quot;username&quot;, username));&amp;#xA;                params.add(new BasicNameValuePair(&quot;password&quot;, password));&amp;#xA;&amp;#xA;                Log.d(&quot;request!&quot;, &quot;starting&quot;);&amp;#xA;&amp;#xA;                //Posting user data to script&amp;#xA;                JSONObject json = jsonParser.makeHttpRequest(&amp;#xA;                        LOGIN_URL, &quot;POST&quot;, params);&amp;#xA;&amp;#xA;                // full json response&amp;#xA;                Log.d(&quot;Login attempt&quot;, json.toString());&amp;#xA;&amp;#xA;                // json success element&amp;#xA;                success = json.getInt(TAG_SUCCESS);&amp;#xA;                if (success == 1) {&amp;#xA;                    Log.d(&quot;User Created!&quot;, json.toString());&amp;#xA;                    finish();&amp;#xA;                    return json.getString(TAG_MESSAGE);&amp;#xA;                }else{&amp;#xA;                    Log.d(&quot;Login Failure!&quot;, json.getString(TAG_MESSAGE));&amp;#xA;                    return json.getString(TAG_MESSAGE);&amp;#xA;&amp;#xA;                }&amp;#xA;            } catch (JSONException e) {&amp;#xA;                e.printStackTrace();&amp;#xA;            }&amp;#xA;&amp;#xA;            return null;&amp;#xA;&amp;#xA;        }&amp;#xA;        /**&amp;#xA;         * After completing background task Dismiss the progress dialog&amp;#xA;         * **/&amp;#xA;        protected void onPostExecute(String file_url) {&amp;#xA;            // dismiss the dialog once product deleted&amp;#xA;            pDialog.dismiss();&amp;#xA;            if (file_url != null){&amp;#xA;                Toast.makeText(register.this, file_url, Toast.LENGTH_LONG).show();&amp;#xA;            }&amp;#xA;&amp;#xA;        }&amp;#xA;&amp;#xA;    }&amp;#xA;&amp;#xA;}&amp;#xA;&lt;/code&gt;&lt;/pre&gt;&amp;#xA;&amp;#xA;&lt;p&gt;register.xml&lt;/p&gt;&amp;#xA;&amp;#xA;&lt;pre&gt;&lt;code&gt;&amp;lt;RelativeLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&amp;#xA;    xmlns:tools=&quot;http://schemas.android.com/tools&quot;&amp;#xA;    android:layout_width=&quot;match_parent&quot;&amp;#xA;    android:layout_height=&quot;match_parent&quot;&amp;#xA;    &amp;gt;&amp;#xA;&amp;#xA;    &amp;lt;TextView&amp;#xA;        android:id=&quot;@+id/textView1&quot;&amp;#xA;        android:layout_width=&quot;wrap_content&quot;&amp;#xA;        android:layout_height=&quot;wrap_content&quot;&amp;#xA;        android:text=&quot;Username&quot;&amp;#xA;        android:layout_below=&quot;@+id/textView2&quot;&amp;#xA;        android:layout_alignLeft=&quot;@+id/password&quot;&amp;#xA;        android:layout_alignStart=&quot;@+id/password&quot;&amp;#xA;        android:layout_marginTop=&quot;86dp&quot; /&amp;gt;&amp;#xA;&amp;#xA;    &amp;lt;EditText&amp;#xA;        android:id=&quot;@+id/username&quot;&amp;#xA;        android:layout_width=&quot;wrap_content&quot;&amp;#xA;        android:layout_height=&quot;wrap_content&quot;&amp;#xA;        android:layout_alignLeft=&quot;@+id/textView1&quot;&amp;#xA;        android:layout_below=&quot;@+id/textView1&quot;&amp;#xA;        android:ems=&quot;10&quot; /&amp;gt;&amp;#xA;&amp;#xA;    &amp;lt;TextView&amp;#xA;        android:id=&quot;@+id/TextView01&quot;&amp;#xA;        android:layout_width=&quot;wrap_content&quot;&amp;#xA;        android:layout_height=&quot;wrap_content&quot;&amp;#xA;        android:layout_alignLeft=&quot;@+id/username&quot;&amp;#xA;        android:layout_below=&quot;@+id/username&quot;&amp;#xA;        android:text=&quot;Password&quot; /&amp;gt;&amp;#xA;&amp;#xA;    &amp;lt;TextView&amp;#xA;        android:id=&quot;@+id/textView2&quot;&amp;#xA;        android:layout_width=&quot;wrap_content&quot;&amp;#xA;        android:layout_height=&quot;wrap_content&quot;&amp;#xA;        android:gravity=&quot;center&quot;&amp;#xA;        android:text=&quot;Android Remote Server Tutorial&quot;&amp;#xA;        android:textAppearance=&quot;?android:attr/textAppearanceLarge&quot;&amp;#xA;        android:textStyle=&quot;bold&quot;&amp;#xA;        android:layout_alignParentTop=&quot;true&quot;&amp;#xA;        android:layout_centerHorizontal=&quot;true&quot; /&amp;gt;&amp;#xA;&amp;#xA;    &amp;lt;EditText&amp;#xA;        android:id=&quot;@+id/password&quot;&amp;#xA;        android:layout_width=&quot;wrap_content&quot;&amp;#xA;        android:layout_height=&quot;wrap_content&quot;&amp;#xA;        android:layout_below=&quot;@+id/TextView01&quot;&amp;#xA;        android:layout_centerHorizontal=&quot;true&quot;&amp;#xA;        android:ems=&quot;10&quot;&amp;#xA;        android:inputType=&quot;textPassword&quot; /&amp;gt;&amp;#xA;&amp;#xA;    &amp;lt;Button&amp;#xA;        android:id=&quot;@+id/register&quot;&amp;#xA;        android:layout_width=&quot;wrap_content&quot;&amp;#xA;        android:layout_height=&quot;wrap_content&quot;&amp;#xA;        android:layout_alignRight=&quot;@+id/password&quot;&amp;#xA;        android:layout_below=&quot;@+id/password&quot;&amp;#xA;        android:text=&quot;Register&quot; /&amp;gt;&amp;#xA;&amp;#xA;&amp;lt;/RelativeLayout&amp;gt;&amp;#xA;&lt;/code&gt;&lt;/pre&gt;&amp;#xA;&amp;#xA;&lt;p&gt;JSONParser.java&lt;/p&gt;&amp;#xA;&amp;#xA;&lt;pre&gt;&lt;code&gt;package library;&amp;#xA;&amp;#xA;import java.io.BufferedReader;&amp;#xA;import java.io.IOException;&amp;#xA;import java.io.InputStream;&amp;#xA;import java.io.InputStreamReader;&amp;#xA;import java.io.UnsupportedEncodingException;&amp;#xA;import java.util.List;&amp;#xA;&amp;#xA;import org.apache.http.HttpEntity;&amp;#xA;import org.apache.http.HttpResponse;&amp;#xA;import org.apache.http.NameValuePair;&amp;#xA;import org.apache.http.client.ClientProtocolException;&amp;#xA;import org.apache.http.client.entity.UrlEncodedFormEntity;&amp;#xA;import org.apache.http.client.methods.HttpGet;&amp;#xA;import org.apache.http.client.methods.HttpPost;&amp;#xA;import org.apache.http.client.utils.URLEncodedUtils;&amp;#xA;import org.apache.http.impl.client.DefaultHttpClient;&amp;#xA;import org.json.JSONException;&amp;#xA;import org.json.JSONObject;&amp;#xA;&amp;#xA;import android.util.Log;&amp;#xA;&amp;#xA;public class JSONParser {&amp;#xA;&amp;#xA;    static InputStream is = null;&amp;#xA;    static JSONObject jObj = null;&amp;#xA;    static String json = &quot;&quot;;&amp;#xA;&amp;#xA;    // constructor&amp;#xA;    public JSONParser() {&amp;#xA;&amp;#xA;    }&amp;#xA;&amp;#xA;&amp;#xA;    public JSONObject getJSONFromUrl(final String url) {&amp;#xA;&amp;#xA;        // Making HTTP request&amp;#xA;        try {&amp;#xA;            // Construct the client and the HTTP request.&amp;#xA;            DefaultHttpClient httpClient = new DefaultHttpClient();&amp;#xA;            HttpPost httpPost = new HttpPost(url);&amp;#xA;&amp;#xA;            // Execute the POST request and store the response locally.&amp;#xA;            HttpResponse httpResponse = httpClient.execute(httpPost);&amp;#xA;            // Extract data from the response.&amp;#xA;            HttpEntity httpEntity = httpResponse.getEntity();&amp;#xA;            // Open an inputStream with the data content.&amp;#xA;            is = httpEntity.getContent();&amp;#xA;&amp;#xA;        } catch (UnsupportedEncodingException e) {&amp;#xA;            e.printStackTrace();&amp;#xA;        } catch (ClientProtocolException e) {&amp;#xA;            e.printStackTrace();&amp;#xA;        } catch (IOException e) {&amp;#xA;            e.printStackTrace();&amp;#xA;        }&amp;#xA;&amp;#xA;        try {&amp;#xA;            // Create a BufferedReader to parse through the inputStream.&amp;#xA;            BufferedReader reader = new BufferedReader(new InputStreamReader(&amp;#xA;                    is, &quot;iso-8859-1&quot;), 8);&amp;#xA;            // Declare a string builder to help with the parsing.&amp;#xA;            StringBuilder sb = new StringBuilder();&amp;#xA;            // Declare a string to store the JSON object data in string form.&amp;#xA;            String line = null;&amp;#xA;&amp;#xA;            // Build the string until null.&amp;#xA;            while ((line = reader.readLine()) != null) {&amp;#xA;                sb.append(line + &quot;\n&quot;);&amp;#xA;            }&amp;#xA;&amp;#xA;            // Close the input stream.&amp;#xA;            is.close();&amp;#xA;            // Convert the string builder data to an actual string.&amp;#xA;            json = sb.toString();&amp;#xA;        } catch (Exception e) {&amp;#xA;            Log.e(&quot;Buffer Error&quot;, &quot;Error converting result &quot; + e.toString());&amp;#xA;        }&amp;#xA;&amp;#xA;        // Try to parse the string to a JSON object&amp;#xA;        try {&amp;#xA;            jObj = new JSONObject(json);&amp;#xA;        } catch (JSONException e) {&amp;#xA;            Log.e(&quot;JSON Parser&quot;, &quot;Error parsing data &quot; + e.toString());&amp;#xA;        }&amp;#xA;&amp;#xA;        // Return the JSON Object.&amp;#xA;        return jObj;&amp;#xA;&amp;#xA;    }&amp;#xA;&amp;#xA;&amp;#xA;    // function get json from url&amp;#xA;    // by making HTTP POST or GET mehtod&amp;#xA;    public JSONObject makeHttpRequest(String url, String method,&amp;#xA;                                      List&amp;lt;NameValuePair&amp;gt; params) {&amp;#xA;&amp;#xA;        // Making HTTP request&amp;#xA;        try {&amp;#xA;&amp;#xA;            // check for request method&amp;#xA;            if(method == &quot;POST&quot;){&amp;#xA;                // request method is POST&amp;#xA;                // defaultHttpClient&amp;#xA;                DefaultHttpClient httpClient = new DefaultHttpClient();&amp;#xA;                HttpPost httpPost = new HttpPost(url);&amp;#xA;                httpPost.setEntity(new UrlEncodedFormEntity(params));&amp;#xA;&amp;#xA;                HttpResponse httpResponse = httpClient.execute(httpPost);&amp;#xA;                HttpEntity httpEntity = httpResponse.getEntity();&amp;#xA;                is = httpEntity.getContent();&amp;#xA;&amp;#xA;            }else if(method == &quot;GET&quot;){&amp;#xA;                // request method is GET&amp;#xA;                DefaultHttpClient httpClient = new DefaultHttpClient();&amp;#xA;                String paramString = URLEncodedUtils.format(params, &quot;utf-8&quot;);&amp;#xA;                url += &quot;?&quot; + paramString;&amp;#xA;                HttpGet httpGet = new HttpGet(url);&amp;#xA;&amp;#xA;                HttpResponse httpResponse = httpClient.execute(httpGet);&amp;#xA;                HttpEntity httpEntity = httpResponse.getEntity();&amp;#xA;                is = httpEntity.getContent();&amp;#xA;            }&amp;#xA;&amp;#xA;        } catch (UnsupportedEncodingException e) {&amp;#xA;            e.printStackTrace();&amp;#xA;        } catch (ClientProtocolException e) {&amp;#xA;            e.printStackTrace();&amp;#xA;        } catch (IOException e) {&amp;#xA;            e.printStackTrace();&amp;#xA;        }&amp;#xA;&amp;#xA;        try {&amp;#xA;            BufferedReader reader = new BufferedReader(new InputStreamReader(&amp;#xA;                    is, &quot;iso-8859-1&quot;), 8);&amp;#xA;            StringBuilder sb = new StringBuilder();&amp;#xA;            String line = null;&amp;#xA;            while ((line = reader.readLine()) != null) {&amp;#xA;                sb.append(line + &quot;\n&quot;);&amp;#xA;            }&amp;#xA;            is.close();&amp;#xA;            json = sb.toString();&amp;#xA;        } catch (Exception e) {&amp;#xA;            Log.e(&quot;Buffer Error&quot;, &quot;Error converting result &quot; + e.toString());&amp;#xA;        }&amp;#xA;&amp;#xA;        // try parse the string to a JSON object&amp;#xA;        try {&amp;#xA;            jObj = new JSONObject(json);&amp;#xA;        } catch (JSONException e) {&amp;#xA;            Log.e(&quot;JSON Parser&quot;, &quot;Error parsing data &quot; + e.toString());&amp;#xA;        }&amp;#xA;&amp;#xA;        // return JSON String&amp;#xA;        return jObj;&amp;#xA;&amp;#xA;    }&amp;#xA;}&amp;#xA;&lt;/code&gt;&lt;/pre&gt;&amp;#xA;" stacktrace="java.lang.RuntimeException: An error occured while executing doInBackground()&#10;            at android.os.AsyncTask$3.done(AsyncTask.java:300)&#10;            at java.util.concurrent.FutureTask.finishCompletion(FutureTask.java:355)&#10;            at java.util.concurrent.FutureTask.setException(FutureTask.java:222)&#10;            at java.util.concurrent.FutureTask.run(FutureTask.java:242)&#10;            at android.os.AsyncTask$SerialExecutor$1.run(AsyncTask.java:231)&#10;            at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1112)&#10;            at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:587)&#10;            at java.lang.Thread.run(Thread.java:841)"/><post answer="&lt;p&gt;I actually ported this exact tutorial to Android Studio a while back, and ran into the same exact issue that you're facing.&lt;/p&gt;&amp;#xA;&amp;#xA;&lt;p&gt;After trying many things to fix it, this is how I was able to get it working.&lt;/p&gt;&amp;#xA;&amp;#xA;&lt;p&gt;Use the following jars :&lt;/p&gt;&amp;#xA;&amp;#xA;&lt;ul&gt;&amp;#xA;&lt;li&gt;&lt;a href=&quot;http://mvnrepository.com/artifact/org.apache.httpcomponents/httpclient-android/4.3.5.1&quot; rel=&quot;nofollow&quot;&gt;httpclient-android-4.3.5.1.jar&lt;/a&gt;&lt;/li&gt;&amp;#xA;&lt;li&gt;&lt;a href=&quot;http://mvnrepository.com/artifact/org.apache.httpcomponents/httpmime/4.3.5&quot; rel=&quot;nofollow&quot;&gt;httpmime-4.3.5.jar&lt;/a&gt;&lt;/li&gt;&amp;#xA;&lt;/ul&gt;&amp;#xA;&amp;#xA;&lt;p&gt;Then, in your build.gradle:&lt;/p&gt;&amp;#xA;&amp;#xA;&lt;pre&gt;&lt;code&gt;dependencies {&amp;#xA;    compile fileTree(dir: 'libs', include: ['*.jar'])&amp;#xA;    compile 'com.android.support:appcompat-v7:22.1.1'&amp;#xA;&amp;#xA;    compile('org.apache.httpcomponents:httpmime:4.3.5') {&amp;#xA;        exclude module: 'httpclient'&amp;#xA;    }&amp;#xA;    compile 'org.apache.httpcomponents:httpclient-android:4.3.5.1'&amp;#xA;}&amp;#xA;&lt;/code&gt;&lt;/pre&gt;&amp;#xA;&amp;#xA;&lt;p&gt;Full project on GitHub:&lt;/p&gt;&amp;#xA;&amp;#xA;&lt;p&gt;&lt;a href=&quot;https://github.com/dmnugent80/CameraPhotoUpload&quot; rel=&quot;nofollow&quot;&gt;https://github.com/dmnugent80/CameraPhotoUpload&lt;/a&gt;&lt;/p&gt;&amp;#xA;" question="&lt;p&gt;How to fix this error? I try everything i can but i am still getting this error&lt;/p&gt;&amp;#xA;&amp;#xA;&lt;p&gt;Caused by: &lt;code&gt;java.lang.NoClassDefFoundError: info.androidhive.camerafileupload.MyMultiPartEntity&lt;/code&gt;&lt;/p&gt;&amp;#xA;&amp;#xA;&lt;p&gt;I am using these libraries&lt;/p&gt;&amp;#xA;&amp;#xA;&lt;ul&gt;&amp;#xA;&lt;li&gt;httpclient-4.2.5.jar, &lt;/li&gt;&amp;#xA;&lt;li&gt;httpcore-4.2.4.jar, &lt;/li&gt;&amp;#xA;&lt;li&gt;httpmime-4.2.5.jar&lt;/li&gt;&amp;#xA;&lt;/ul&gt;&amp;#xA;&amp;#xA;&lt;p&gt;I get this code from &lt;a href=&quot;http://www.androidhive.info/2014/12/android-uploading-camera-image-video-to-server-with-progress-bar/&quot; rel=&quot;nofollow&quot;&gt;http://www.androidhive.info/2014/12/android-uploading-camera-image-video-to-server-with-progress-bar/&lt;/a&gt;&lt;/p&gt;&amp;#xA;&amp;#xA;&lt;p&gt;This is my AsyncTask:&lt;/p&gt;&amp;#xA;&amp;#xA;&lt;pre&gt;&lt;code&gt;private class UploadFileToServer extends AsyncTask&amp;lt;Void, Integer, String&amp;gt; {&amp;#xA;        @Override&amp;#xA;        protected void onPreExecute() {&amp;#xA;            // setting progress bar to zero&amp;#xA;            progressBar.setProgress(0);&amp;#xA;            super.onPreExecute();&amp;#xA;        }&amp;#xA;&amp;#xA;        @Override&amp;#xA;        protected void onProgressUpdate(Integer... progress) {&amp;#xA;            // Making progress bar visible&amp;#xA;            progressBar.setVisibility(View.VISIBLE);&amp;#xA;&amp;#xA;            // updating progress bar value&amp;#xA;            progressBar.setProgress(progress[0]);&amp;#xA;&amp;#xA;            // updating percentage value&amp;#xA;            txtPercentage.setText(String.valueOf(progress[0]) + &quot;%&quot;);&amp;#xA;        }&amp;#xA;&amp;#xA;        @Override&amp;#xA;        protected String doInBackground(Void... params) {&amp;#xA;            return uploadFile();&amp;#xA;        }&amp;#xA;&amp;#xA;        private String uploadFile() {&amp;#xA;            String responseString = null;&amp;#xA;&amp;#xA;            HttpClient httpclient = new DefaultHttpClient();&amp;#xA;            HttpPost httppost = new HttpPost(Config.FILE_UPLOAD_URL);&amp;#xA;&amp;#xA;            try {&amp;#xA;                MyMultiPartEntity entity = new MyMultiPartEntity( // Casuing NoClassDefFoundError&amp;#xA;                        new ProgressListener() {&amp;#xA;                            @Override&amp;#xA;                            public void transferred(long num) {&amp;#xA;                                publishProgress((int) ((num / (float) totalSize) * 100));&amp;#xA;                            }&amp;#xA;                        });&amp;#xA;&amp;#xA;                File sourceFile = new File(filePath);&amp;#xA;&amp;#xA;                // Adding file data to http body&amp;#xA;                entity.addPart(&quot;image&quot;, new FileBody(sourceFile));&amp;#xA;&amp;#xA;                // Extra parameters if you want to pass to server&amp;#xA;                entity.addPart(&quot;website&quot;,&amp;#xA;                        new StringBody(&quot;www.androidhive.info&quot;));&amp;#xA;                entity.addPart(&quot;email&quot;, new StringBody(&quot;abc@gmail.com&quot;));&amp;#xA;&amp;#xA;                totalSize = entity.getContentLength();&amp;#xA;                httppost.setEntity(entity);&amp;#xA;&amp;#xA;                // Making server call&amp;#xA;                HttpResponse response = httpclient.execute(httppost);&amp;#xA;                HttpEntity r_entity = response.getEntity();&amp;#xA;&amp;#xA;                int statusCode = response.getStatusLine().getStatusCode();&amp;#xA;                if (statusCode == 200) {&amp;#xA;                    // Server response&amp;#xA;                    responseString = EntityUtils.toString(r_entity);&amp;#xA;                } else {&amp;#xA;                    responseString = &quot;Error occurred! Http Status Code: &quot;&amp;#xA;                            + statusCode;&amp;#xA;                }&amp;#xA;&amp;#xA;            } catch (ClientProtocolException e) {&amp;#xA;                responseString = e.toString();&amp;#xA;            } catch (IOException e) {&amp;#xA;                responseString = e.toString();&amp;#xA;            }/* catch(NoClassDefFoundError e){&amp;#xA;                responseString = e.toString();&amp;#xA;            }*/&amp;#xA;&amp;#xA;            return responseString;&amp;#xA;&amp;#xA;        }&amp;#xA;&amp;#xA;        @Override&amp;#xA;        protected void onPostExecute(String result) {&amp;#xA;            Log.e(TAG, &quot;Response from server: &quot; + result);&amp;#xA;&amp;#xA;            // showing the server response in an alert dialog&amp;#xA;            showAlert(result);&amp;#xA;&amp;#xA;            super.onPostExecute(result);&amp;#xA;        }&amp;#xA;&amp;#xA;    }&amp;#xA;&lt;/code&gt;&lt;/pre&gt;&amp;#xA;&amp;#xA;&lt;p&gt;This is my Multipart Entity&lt;/p&gt;&amp;#xA;&amp;#xA;&lt;pre&gt;&lt;code&gt;public class MyMultiPartEntity extends MultipartEntity {&amp;#xA;&amp;#xA;    private final ProgressListener listener;&amp;#xA;&amp;#xA;    public MyMultiPartEntity(final ProgressListener listener) {&amp;#xA;        super();&amp;#xA;        this.listener = listener;&amp;#xA;    }&amp;#xA;&amp;#xA;    public MyMultiPartEntity(final HttpMultipartMode mode,&amp;#xA;                             final ProgressListener listener) {&amp;#xA;        super(mode);&amp;#xA;        this.listener = listener;&amp;#xA;    }&amp;#xA;&amp;#xA;    public MyMultiPartEntity(HttpMultipartMode mode, final String boundary,&amp;#xA;                             final Charset charset, final ProgressListener listener) {&amp;#xA;        super(mode, boundary, charset);&amp;#xA;        this.listener = listener;&amp;#xA;    }&amp;#xA;&amp;#xA;    @Override&amp;#xA;    public void writeTo(final OutputStream outStream) throws IOException {&amp;#xA;        super.writeTo(new CountingOutputStream(outStream, this.listener));&amp;#xA;    }&amp;#xA;&amp;#xA;    public interface ProgressListener {&amp;#xA;        void transferred(long num);&amp;#xA;    }&amp;#xA;&amp;#xA;    public static class CountingOutputStream extends FilterOutputStream {&amp;#xA;&amp;#xA;        private final ProgressListener listener;&amp;#xA;        private long transferred;&amp;#xA;&amp;#xA;        public CountingOutputStream(final OutputStream out,&amp;#xA;                final ProgressListener listener) {&amp;#xA;            super(out);&amp;#xA;            this.listener = listener;&amp;#xA;            this.transferred = 0;&amp;#xA;        }&amp;#xA;&amp;#xA;        public void write(byte[] b, int off, int len) throws IOException {&amp;#xA;            out.write(b, off, len);&amp;#xA;            this.transferred += len;&amp;#xA;            this.listener.transferred(this.transferred);&amp;#xA;        }&amp;#xA;&amp;#xA;        public void write(int b) throws IOException {&amp;#xA;            out.write(b);&amp;#xA;            this.transferred++;&amp;#xA;            this.listener.transferred(this.transferred);&amp;#xA;        }&amp;#xA;    }&amp;#xA;}&amp;#xA;&lt;/code&gt;&lt;/pre&gt;&amp;#xA;&amp;#xA;&lt;p&gt;Logcat:&lt;/p&gt;&amp;#xA;&amp;#xA;&lt;pre&gt;&lt;code&gt;07-03 13:56:05.128  32464-32464/info.androidhive.camerafileupload E/dalvikvm? Could not find class 'info.androidhive.camerafileupload.MyMultiPartEntity', referenced from method info.androidhive.camerafileupload.UploadActivity$UploadFileToServer.uploadFile&amp;#xA;07-03 13:56:05.158  32464-32549/info.androidhive.camerafileupload E/AndroidRuntime? FATAL EXCEPTION: AsyncTask #1&amp;#xA;    Process: info.androidhive.camerafileupload, PID: 32464&amp;#xA;    java.lang.RuntimeException: An error occured while executing doInBackground()&amp;#xA;            at android.os.AsyncTask$3.done(AsyncTask.java:300)&amp;#xA;            at java.util.concurrent.FutureTask.finishCompletion(FutureTask.java:355)&amp;#xA;            at java.util.concurrent.FutureTask.setException(FutureTask.java:222)&amp;#xA;            at java.util.concurrent.FutureTask.run(FutureTask.java:242)&amp;#xA;            at android.os.AsyncTask$SerialExecutor$1.run(AsyncTask.java:231)&amp;#xA;            at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1112)&amp;#xA;            at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:587)&amp;#xA;            at java.lang.Thread.run(Thread.java:841)&amp;#xA;     Caused by: java.lang.NoClassDefFoundError: info.androidhive.camerafileupload.MyMultiPartEntity&amp;#xA;            at info.androidhive.camerafileupload.UploadActivity$UploadFileToServer.uploadFile(UploadActivity.java:151)&amp;#xA;            at info.androidhive.camerafileupload.UploadActivity$UploadFileToServer.doInBackground(UploadActivity.java:141)&amp;#xA;            at info.androidhive.camerafileupload.UploadActivity$UploadFileToServer.doInBackground(UploadActivity.java:119)&amp;#xA;            at android.os.AsyncTask$2.call(AsyncTask.java:288)&amp;#xA;            at java.util.concurrent.FutureTask.run(FutureTask.java:237)&amp;#xA;            at android.os.AsyncTask$SerialExecutor$1.run(AsyncTask.java:231)&amp;#xA;            at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1112)&amp;#xA;            at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:587)&amp;#xA;            at java.lang.Thread.run(Thread.java:841)&amp;#xA;&lt;/code&gt;&lt;/pre&gt;&amp;#xA;&amp;#xA;&lt;p&gt;Gradle&lt;/p&gt;&amp;#xA;&amp;#xA;&lt;pre&gt;&lt;code&gt;apply plugin: 'com.android.application'&amp;#xA;&amp;#xA;android {&amp;#xA;    compileSdkVersion 21&amp;#xA;    buildToolsVersion &quot;22.0.1&quot;&amp;#xA;    defaultConfig {&amp;#xA;        applicationId &quot;info.androidhive.camerafileupload&quot;&amp;#xA;        minSdkVersion 11&amp;#xA;        targetSdkVersion 21&amp;#xA;    }&amp;#xA;    buildTypes {&amp;#xA;        release {&amp;#xA;            minifyEnabled false;&amp;#xA;            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'&amp;#xA;        }&amp;#xA;    }&amp;#xA;    productFlavors {&amp;#xA;    }&amp;#xA;}&amp;#xA;&amp;#xA;dependencies {&amp;#xA;    provided files('libs/httpclient-4.2.5.jar')&amp;#xA;    provided files('libs/httpcore-4.2.4.jar')&amp;#xA;    provided files('libs/httpmime-4.2.5.jar')&amp;#xA;    provided files('libs/android-support-v4.jar')&amp;#xA;    compile 'com.android.support:appcompat-v7:22.1.1'&amp;#xA;}&amp;#xA;&lt;/code&gt;&lt;/pre&gt;&amp;#xA;" stacktrace="java.lang.RuntimeException: An error occured while executing doInBackground()&#10;            at android.os.AsyncTask$3.done(AsyncTask.java:300)&#10;            at java.util.concurrent.FutureTask.finishCompletion(FutureTask.java:355)&#10;            at java.util.concurrent.FutureTask.setException(FutureTask.java:222)&#10;            at java.util.concurrent.FutureTask.run(FutureTask.java:242)&#10;            at android.os.AsyncTask$SerialExecutor$1.run(AsyncTask.java:231)&#10;            at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1112)&#10;            at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:587)&#10;            at java.lang.Thread.run(Thread.java:841)"/><post answer="" question="&lt;p&gt;I'm having a weird error with lists and parse that I can't figure out. Whenever I try to query and &lt;code&gt;find()&lt;/code&gt; on a parse request, I sometimes get the &lt;code&gt;java.lang.String cannot be cast to org.json.JSONObject&lt;/code&gt; error. &lt;/p&gt;&amp;#xA;&amp;#xA;&lt;p&gt;This happens when I get to this part of my code:&lt;/p&gt;&amp;#xA;&amp;#xA;&lt;pre&gt;&lt;code&gt;private List&amp;lt;ParseUser&amp;gt; users; &amp;#xA;&amp;#xA;......&amp;#xA;else if (viewStatus == 2) {&amp;#xA;&amp;#xA;                Log.d(&quot;Friends view&quot;, &quot;getting current user&quot;);&amp;#xA;                ParseUser current = ParseUser.getCurrentUser();&amp;#xA;&amp;#xA;                Log.d(&quot;Friends view&quot;, &quot;Getting friend relation of user&quot;);&amp;#xA;                ParseRelation &amp;lt;ParseUser&amp;gt; friendRelation = current.getRelation(&quot;friends&quot;);&amp;#xA;&amp;#xA;                Log.d(&quot;Friends view&quot;, &quot;Getting relation query&quot;);&amp;#xA;                ParseQuery &amp;lt;ParseUser&amp;gt; queryFriends =  friendRelation.getQuery();&amp;#xA;&amp;#xA;                Log.d(&quot;Friends view&quot;, &quot;Getting friend query&quot;);&amp;#xA;                try {&amp;#xA;                    users =  queryFriends.find();&amp;#xA;                } catch (ParseException e) {&amp;#xA;                    Log.e(&quot;queryUsers&quot;, &quot;error: &quot; + e);&amp;#xA;                }&amp;#xA;                Log.d(&quot;Friends view&quot;, &quot;users = query done&quot;);&amp;#xA;&amp;#xA;            }&amp;#xA;&lt;/code&gt;&lt;/pre&gt;&amp;#xA;&amp;#xA;&lt;p&gt;The oddest part of this is that once I have the user log out and back in after the first time, I never have this issue again. Is it something to do with &lt;code&gt;ParseUser.getCurrentUser();&lt;/code&gt; ? &lt;/p&gt;&amp;#xA;&amp;#xA;&lt;p&gt;Error:&lt;/p&gt;&amp;#xA;&amp;#xA;&lt;pre&gt;&lt;code&gt;07-09 20:11:35.723  17089-17089/com.curtain.projectcurtain D/List Click? Position = 3&amp;#xA;07-09 20:11:36.543      980-980/? I/SBar.NetworkController? onDataActivity: direction=3&amp;#xA;07-09 20:11:36.553      980-980/? I/SBar.NetworkController? refreshSignalCluster: mobile: mHasMobileDataFeature=true DataTypeShown=zz_moto_stat_sys_data_fully_connected_4g_lte_waves_wide Activity=zz_moto_stat_sys_data_fully_inandout_waves_animation_wide in=false out=false Accessibility=&quot;4 G L T E&quot;&amp;#xA;07-09 20:11:38.225  17089-17241/com.curtain.projectcurtain D/Friends view? getting current user&amp;#xA;07-09 20:11:38.226  17089-17241/com.curtain.projectcurtain D/Friends view? Getting friend relation of user&amp;#xA;07-09 20:11:38.226  17089-17241/com.curtain.projectcurtain D/Friends view? Getting relation query&amp;#xA;07-09 20:11:38.226  17089-17241/com.curtain.projectcurtain D/Friends view? Getting friend query&amp;#xA;07-09 20:11:38.229  17089-17241/com.curtain.projectcurtain W/dalvikvm? threadid=14: thread exiting with uncaught exception (group=0x4170dd40)&amp;#xA;07-09 20:11:39.273      236-509/? I/SFPerfTracer? triggers: (rate: 0:46) (3805837 sw vsyncs) (0 skipped) (534:1361110 vsyncs) (536:5190383)&amp;#xA;07-09 20:11:40.557      980-980/? I/SBar.NetworkController? onDataActivity: direction=0&amp;#xA;07-09 20:11:40.564      980-980/? I/SBar.NetworkController? refreshSignalCluster: mobile: Signal=zz_moto_stat_sys_signal_5bar_2_fully_wide Roaming=(none) mSimIconId=(none) Accessibility=&quot;Phone two bars.&quot;,&quot;Not roaming.&quot;,&quot;&quot;&amp;#xA;07-09 20:11:40.564      980-980/? I/SBar.NetworkController? refreshSignalCluster: mobile: mHasMobileDataFeature=true DataTypeShown=zz_moto_stat_sys_data_fully_connected_4g_lte_waves_wide Activity=zz_moto_stat_sys_data_fully_connected_waves_none_wide in=false out=false Accessibility=&quot;4 G L T E&quot;&amp;#xA;07-09 20:11:41.320  17089-17241/com.curtain.projectcurtain E/AndroidRuntime? FATAL EXCEPTION: AsyncTask #2&amp;#xA;    Process: com.curtain.projectcurtain, PID: 17089&amp;#xA;    java.lang.RuntimeException: An error occured while executing doInBackground()&amp;#xA;            at android.os.AsyncTask$3.done(AsyncTask.java:300)&amp;#xA;            at java.util.concurrent.FutureTask.finishCompletion(FutureTask.java:355)&amp;#xA;            at java.util.concurrent.FutureTask.setException(FutureTask.java:222)&amp;#xA;            at java.util.concurrent.FutureTask.run(FutureTask.java:242)&amp;#xA;            at android.os.AsyncTask$SerialExecutor$1.run(AsyncTask.java:231)&amp;#xA;            at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1112)&amp;#xA;            at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:587)&amp;#xA;            at java.lang.Thread.run(Thread.java:841)&amp;#xA;     Caused by: java.lang.ClassCastException: java.lang.String cannot be cast to org.json.JSONObject&amp;#xA;            at com.parse.ParseRESTQueryCommand.constructParameters(ParseRESTQueryCommand.java:84)&amp;#xA;            at com.parse.ParseRESTQueryCommand.findCommand(ParseRESTQueryCommand.java:15)&amp;#xA;            at com.parse.NetworkQueryController.findAsync(NetworkQueryController.java:49)&amp;#xA;            at com.parse.NetworkQueryController.findAsync(NetworkQueryController.java:27)&amp;#xA;            at com.parse.OfflineQueryController.findAsync(OfflineQueryController.java:26)&amp;#xA;            at com.parse.ParseQuery.findAsync(ParseQuery.java:1184)&amp;#xA;            at com.parse.ParseQuery$3$1.then(ParseQuery.java:1176)&amp;#xA;            at com.parse.ParseQuery$3$1.then(ParseQuery.java:1172)&amp;#xA;            at bolts.Task$14.run(Task.java:796)&amp;#xA;            at bolts.BoltsExecutors$ImmediateExecutor.execute(BoltsExecutors.java:105)&amp;#xA;            at bolts.Task.completeAfterTask(Task.java:787)&amp;#xA;            at bolts.Task.continueWithTask(Task.java:599)&amp;#xA;            at bolts.Task.continueWithTask(Task.java:610)&amp;#xA;            at bolts.Task$12.then(Task.java:702)&amp;#xA;            at bolts.Task$12.then(Task.java:690)&amp;#xA;            at bolts.Task$14.run(Task.java:796)&amp;#xA;            at bolts.BoltsExecutors$ImmediateExecutor.execute(BoltsExecutors.java:105)&amp;#xA;            at bolts.Task.completeAfterTask(Task.java:787)&amp;#xA;            at bolts.Task.continueWithTask(Task.java:599)&amp;#xA;            at bolts.Task.continueWithTask(Task.java:574)&amp;#xA;            at bolts.Task.onSuccessTask(Task.java:690)&amp;#xA;            at bolts.Task.onSuccessTask(Task.java:680)&amp;#xA;            at bolts.Task.onSuccessTask(Task.java:714)&amp;#xA;            at com.parse.ParseQuery$3.call(ParseQuery.java:1172)&amp;#xA;            at com.parse.ParseQuery$3.call(ParseQuery.java:1169)&amp;#xA;            at com.parse.ParseQuery.doWithRunningCheck(ParseQuery.java:1108)&amp;#xA;            at com.parse.ParseQuery.findAsync(ParseQuery.java:1169)&amp;#xA;            at com.parse.ParseQuery.findInBackground(ParseQuery.java:1137)&amp;#xA;            at com.parse.ParseQuery.find(ParseQuery.java:957)&amp;#xA;            at com.curtain.projectcurtain.AddFriends$RemoteDataTask.doInBackground(AddFriends.java:106)&amp;#xA;            at com.curtain.projectcurtain.AddFriends$RemoteDataTask.doInBackground(AddFriends.java:55)&amp;#xA;            at android.os.AsyncTask$2.call(AsyncTask.java:288)&amp;#xA;            at java.util.concurrent.FutureTask.run(FutureTask.java:237)&amp;#xA;            at android.os.AsyncTask$SerialExecutor$1.run(AsyncTask.java:231)&amp;#xA;            at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1112)&amp;#xA;            at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:587)&amp;#xA;            at java.lang.Thread.run(Thread.java:841)&amp;#xA;07-09 20:11:41.332     855-1233/? W/ActivityManager? Force finishing activity com.curtain.projectcurtain/.AddFriends&amp;#xA;&lt;/code&gt;&lt;/pre&gt;&amp;#xA;&amp;#xA;&lt;p&gt;AddFriends.java : &lt;/p&gt;&amp;#xA;&amp;#xA;&lt;pre&gt;&lt;code&gt;public class AddFriends extends ListActivity {&amp;#xA;    //Global variables&amp;#xA;    public static final int ADD_ID = Menu.FIRST;&amp;#xA;    public static final int REQUESTS_ID = Menu.FIRST + 1;&amp;#xA;    public static final int FRIENDS_ID = Menu.FIRST + 2;&amp;#xA;    public static final int DELETE_ID = Menu.FIRST + 3;&amp;#xA;&amp;#xA;    public TextView title;&amp;#xA;    public static int viewStatus = 0;&amp;#xA;&amp;#xA;    private List&amp;lt;ParseUser&amp;gt; users;&amp;#xA;    private List&amp;lt;ParseObject&amp;gt; requests;&amp;#xA;&amp;#xA;    Button btnAdd, btnRequests, btnFriends;&amp;#xA;&amp;#xA;    //Grabbing users and putting them in the list&amp;#xA;    private class RemoteDataTask extends AsyncTask&amp;lt;Void, Void, Void&amp;gt; {&amp;#xA;        protected Void doInBackground(Void... params) {&amp;#xA;&amp;#xA;            if (users != null){&amp;#xA;                users = null;&amp;#xA;            }&amp;#xA;&amp;#xA;            //add friends view&amp;#xA;            if (viewStatus == 0 ) {&amp;#xA;                ParseQuery&amp;lt;ParseUser&amp;gt; queryUsers = new ParseQuery&amp;lt;ParseUser&amp;gt;(&quot;_User&quot;);&amp;#xA;                queryUsers.orderByDescending(&quot;createdAt&quot;);&amp;#xA;                queryUsers.whereNotEqualTo(&quot;username&quot;, ParseUser.getCurrentUser().getUsername());&amp;#xA;&amp;#xA;                try {&amp;#xA;                    users = queryUsers.find();&amp;#xA;                } catch (ParseException e) {&amp;#xA;                    Log.e(&quot;queryUsers&quot;, &quot;error: &quot; + e);&amp;#xA;                }&amp;#xA;&amp;#xA;&amp;#xA;            }&amp;#xA;            //show requests&amp;#xA;            else if (viewStatus == 1) {&amp;#xA;&amp;#xA;                //grab requests only&amp;#xA;                ParseQuery&amp;lt;ParseObject&amp;gt; queryRequests = new ParseQuery&amp;lt;ParseObject&amp;gt;(&quot;FriendRequests&quot;);&amp;#xA;                queryRequests.whereEqualTo(&quot;to&quot;, ParseUser.getCurrentUser());&amp;#xA;                queryRequests.whereEqualTo(&quot;status&quot;, &quot;waiting&quot;);&amp;#xA;&amp;#xA;                try {&amp;#xA;                    requests = queryRequests.find();&amp;#xA;                } catch (ParseException e) {&amp;#xA;                    Log.e(&quot;queryUsers&quot;, &quot;error: &quot; + e);&amp;#xA;                }&amp;#xA;&amp;#xA;&amp;#xA;            }&amp;#xA;            //View friends&amp;#xA;            else if (viewStatus == 2) {&amp;#xA;&amp;#xA;                Log.d(&quot;Friends view&quot;, &quot;getting current user&quot;);&amp;#xA;                ParseUser current = ParseUser.getCurrentUser();&amp;#xA;&amp;#xA;                Log.d(&quot;Friends view&quot;, &quot;Getting friend relation of user&quot;);&amp;#xA;                ParseRelation &amp;lt;ParseUser&amp;gt; friendRelation = current.getRelation(&quot;friends&quot;);&amp;#xA;&amp;#xA;                Log.d(&quot;Friends view&quot;, &quot;Getting relation query&quot;);&amp;#xA;                ParseQuery &amp;lt;ParseUser&amp;gt; queryFriends =  friendRelation.getQuery();&amp;#xA;&amp;#xA;                Log.d(&quot;Friends view&quot;, &quot;Getting friend query&quot;);&amp;#xA;                try {&amp;#xA;                    users =  queryFriends.find();&amp;#xA;                } catch (ParseException e) {&amp;#xA;                    Log.e(&quot;queryUsers&quot;, &quot;error: &quot; + e);&amp;#xA;                }&amp;#xA;                Log.d(&quot;Friends view&quot;, &quot;users = query done&quot;);&amp;#xA;&amp;#xA;            }&amp;#xA;            return null;&amp;#xA;        }&amp;#xA;&amp;#xA;        //before execution&amp;#xA;        @Override&amp;#xA;        protected void onPreExecute() {&amp;#xA;            super.onPreExecute();&amp;#xA;        }&amp;#xA;&amp;#xA;        //while executing&amp;#xA;        @Override&amp;#xA;        protected void onProgressUpdate(Void... values) {&amp;#xA;            super.onProgressUpdate(values);&amp;#xA;        }&amp;#xA;&amp;#xA;        @Override&amp;#xA;        protected void onPostExecute(Void result) {&amp;#xA;            //puts users into list view&amp;#xA;            ArrayAdapter&amp;lt;String&amp;gt; adapter = new ArrayAdapter&amp;lt;String&amp;gt; (AddFriends.this, R.layout.friends_row);&amp;#xA;&amp;#xA;&amp;#xA;            if (users != null &amp;amp;&amp;amp; viewStatus != 1) {&amp;#xA;                for (ParseUser user : users){&amp;#xA;                    adapter.add((String) user.get(&quot;username&quot;));&amp;#xA;                }&amp;#xA;            }&amp;#xA;            //because requests come in as a parseObject instead of a ParseUser&amp;#xA;            else if (viewStatus == 1 &amp;amp;&amp;amp; requests != null){&amp;#xA;                for (ParseObject request : requests){&amp;#xA;                    adapter.add(request.getParseUser(&quot;from&quot;).getUsername());&amp;#xA;                }&amp;#xA;            }&amp;#xA;            Log.d(&quot;View&quot;, &quot;Done, setting list adapter..&quot;);&amp;#xA;&amp;#xA;&amp;#xA;            setListAdapter(adapter);&amp;#xA;&amp;#xA;&amp;#xA;        }&amp;#xA;    }&amp;#xA;&amp;#xA;    @Override&amp;#xA;    protected void onCreate(Bundle savedInstanceState) {&amp;#xA;        super.onCreate(savedInstanceState);&amp;#xA;        setContentView(R.layout.activity_friends);&amp;#xA;&amp;#xA;&amp;#xA;        title = (TextView) findViewById(R.id.friendsTitle);&amp;#xA;        title.setText(&quot;Send a friend request to one of the following:&quot;);&amp;#xA;&amp;#xA;        new RemoteDataTask().execute();&amp;#xA;        registerForContextMenu(getListView());&amp;#xA;&amp;#xA;        //Add a friend&amp;#xA;        btnAdd = (Button) findViewById(R.id.button);&amp;#xA;        btnAdd.setOnClickListener(new View.OnClickListener() {&amp;#xA;            @Override&amp;#xA;            public void onClick(View v) {&amp;#xA;                title.setText(&quot;Send a friend request to one of the following:&quot;);&amp;#xA;                viewStatus = 0;&amp;#xA;                new RemoteDataTask().execute();&amp;#xA;                registerForContextMenu(getListView());&amp;#xA;            }&amp;#xA;        });&amp;#xA;&amp;#xA;        //View friend requests button&amp;#xA;        btnRequests = (Button) findViewById(R.id.button2);&amp;#xA;        btnRequests.setOnClickListener(new View.OnClickListener() {&amp;#xA;            @Override&amp;#xA;            public void onClick(View v) {&amp;#xA;                title.setText(&quot;Tap to accept request, hold to deny&quot;);&amp;#xA;                viewStatus = 1;&amp;#xA;                new RemoteDataTask().execute();&amp;#xA;                registerForContextMenu(getListView());&amp;#xA;            }&amp;#xA;        });&amp;#xA;&amp;#xA;        //Friends button&amp;#xA;        btnFriends = (Button) findViewById(R.id.button3);&amp;#xA;        btnFriends.setOnClickListener(new View.OnClickListener() {&amp;#xA;            @Override&amp;#xA;            public void onClick(View v) {&amp;#xA;                title.setText(&quot;Your friends. Hold to delete them&quot;);&amp;#xA;                viewStatus = 2;&amp;#xA;                new RemoteDataTask().execute();&amp;#xA;                registerForContextMenu(getListView());&amp;#xA;            }&amp;#xA;        });&amp;#xA;&amp;#xA;&amp;#xA;    }&amp;#xA;&amp;#xA;.....&amp;#xA;&lt;/code&gt;&lt;/pre&gt;&amp;#xA;&amp;#xA;&lt;p&gt;Note: This is very early into development. Mostly just programming functionality right now. Want to figure out this error as early as possible. Any help/suggestions is very much appreciated. &lt;/p&gt;&amp;#xA;&amp;#xA;&lt;p&gt;Thanks in advance!&lt;/p&gt;&amp;#xA;" stacktrace="java.lang.RuntimeException: An error occured while executing doInBackground()&#10;            at android.os.AsyncTask$3.done(AsyncTask.java:300)&#10;            at java.util.concurrent.FutureTask.finishCompletion(FutureTask.java:355)&#10;            at java.util.concurrent.FutureTask.setException(FutureTask.java:222)&#10;            at java.util.concurrent.FutureTask.run(FutureTask.java:242)&#10;            at android.os.AsyncTask$SerialExecutor$1.run(AsyncTask.java:231)&#10;            at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1112)&#10;            at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:587)&#10;            at java.lang.Thread.run(Thread.java:841)"/><post answer="&lt;p&gt;If &lt;code&gt;Async&lt;/code&gt; class is a &lt;code&gt;non-static&lt;/code&gt; inner class inside of your &lt;code&gt;Activity&lt;/code&gt;, then you need an &lt;code&gt;instance&lt;/code&gt; of the enclosing class in order to &lt;code&gt;instantiate&lt;/code&gt; the &lt;code&gt;inner class&lt;/code&gt;.&lt;/p&gt;&amp;#xA;&amp;#xA;&lt;p&gt;You have to call like this way inside &lt;code&gt;static&lt;/code&gt; method:&lt;/p&gt;&amp;#xA;&amp;#xA;&lt;pre&gt;&lt;code&gt;SearchPeopleTab outerClass = new SearchPeopleTab(); //Outer class&amp;#xA;        GetSearchResults task = outerClass.new GetSearchResults(requestSearch);&amp;#xA;        task.execute();&amp;#xA;&lt;/code&gt;&lt;/pre&gt;&amp;#xA;" question="&lt;p&gt;I can't seem to call a AsyncTask from a static method. It says &quot;cannot be referenced from a static context&quot;. It is important that this method IS static and I need to have it like that for a few other processes of mine.&lt;/p&gt;&amp;#xA;&amp;#xA;&lt;p&gt;Is there a way to call the AsyncTask from the method?&lt;/p&gt;&amp;#xA;&amp;#xA;&lt;pre&gt;&lt;code&gt;public static void UpdateResults(String requestSearch){&amp;#xA;    new GetSearchResults(requestSearch).execute(); //shows an error&amp;#xA;}&amp;#xA;&amp;#xA;class GetSearchResults extends AsyncTask&amp;lt;Void, Void, Void&amp;gt; {&amp;#xA;&amp;#xA;    String requestSearch;&amp;#xA;&amp;#xA;    GetSearchResults(String searchtext){&amp;#xA;        this.requestSearch = searchtext;&amp;#xA;    }&amp;#xA;&amp;#xA;    @Override&amp;#xA;    protected Void doInBackground(Void... params) {&amp;#xA;        //functions continuing &amp;#xA;    }&amp;#xA;}&amp;#xA;&lt;/code&gt;&lt;/pre&gt;&amp;#xA;&amp;#xA;&lt;p&gt;EDIT: Anands solution worked however it threw this exception as soon as it got to the method:&lt;/p&gt;&amp;#xA;&amp;#xA;&lt;pre&gt;&lt;code&gt;FATAL EXCEPTION: AsyncTask #1&amp;#xA;    Process: com.eproject.eproject.emobile, PID: 26831&amp;#xA;    java.lang.RuntimeException: An error occured while executing doInBackground()&amp;#xA;            at android.os.AsyncTask$3.done(AsyncTask.java:300)&amp;#xA;            at java.util.concurrent.FutureTask.finishCompletion(FutureTask.java:355)&amp;#xA;            at java.util.concurrent.FutureTask.setException(FutureTask.java:222)&amp;#xA;            at java.util.concurrent.FutureTask.run(FutureTask.java:242)&amp;#xA;            at android.os.AsyncTask$SerialExecutor$1.run(AsyncTask.java:231)&amp;#xA;            at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1112)&amp;#xA;            at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:587)&amp;#xA;            at java.lang.Thread.run(Thread.java:841)&amp;#xA;     Caused by: java.lang.NullPointerException&amp;#xA;            at com.eproject.eproject.emobile.SearchTabs.SearchPeopleTab$GetSearchResults.doInBackground(SearchPeopleTab.java:78)&amp;#xA;            at com.eproject.eproject.emobile.SearchTabs.SearchPeopleTab$GetSearchResults.doInBackground(SearchPeopleTab.java:63)&amp;#xA;&lt;/code&gt;&lt;/pre&gt;&amp;#xA;&amp;#xA;&lt;p&gt;The line 78 which shows null pointer, points to this line of code:&lt;/p&gt;&amp;#xA;&amp;#xA;&lt;pre&gt;&lt;code&gt;SharedPreferences accPref = getActivity().getSharedPreferences(&amp;#xA;                    &quot;accPref&quot;, Context.MODE_PRIVATE);&amp;#xA;&lt;/code&gt;&lt;/pre&gt;&amp;#xA;&amp;#xA;&lt;p&gt;Looks like it can't get hold of the SharedPreferences from the AsyncTask method now. It worked well before. What is wrong with it?&lt;/p&gt;&amp;#xA;" stacktrace="java.lang.RuntimeException: An error occured while executing doInBackground()&#10;            at android.os.AsyncTask$3.done(AsyncTask.java:300)&#10;            at java.util.concurrent.FutureTask.finishCompletion(FutureTask.java:355)&#10;            at java.util.concurrent.FutureTask.setException(FutureTask.java:222)&#10;            at java.util.concurrent.FutureTask.run(FutureTask.java:242)&#10;            at android.os.AsyncTask$SerialExecutor$1.run(AsyncTask.java:231)&#10;            at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1112)&#10;            at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:587)&#10;            at java.lang.Thread.run(Thread.java:841)"/><post answer="" question="&lt;p&gt;I am developing an android application when try to run my application, I got following exception.&lt;/p&gt;&amp;#xA;&amp;#xA;&lt;pre&gt;&lt;code&gt;08-12 16:57:41.546  25559-25603/com.ringee.app E/AndroidRuntime? FATAL EXCEPTION: AsyncTask #5&amp;#xA;    Process: com.ringee.app, PID: 25559&amp;#xA;    java.lang.RuntimeException: An error occured while executing doInBackground()&amp;#xA;            at android.os.AsyncTask$3.done(AsyncTask.java:300)&amp;#xA;            at java.util.concurrent.FutureTask.finishCompletion(FutureTask.java:355)&amp;#xA;            at java.util.concurrent.FutureTask.setException(FutureTask.java:222)&amp;#xA;            at java.util.concurrent.FutureTask.run(FutureTask.java:242)&amp;#xA;            at android.os.AsyncTask$SerialExecutor$1.run(AsyncTask.java:231)&amp;#xA;            at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1112)&amp;#xA;            at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:587)&amp;#xA;            at java.lang.Thread.run(Thread.java:841)&amp;#xA;     Caused by: java.lang.NullPointerException&amp;#xA;            at com.ringee.app.ImageUploadActivity$4$1.doInBackground(ImageUploadActivity.java:169)&amp;#xA;            at com.ringee.app.ImageUploadActivity$4$1.doInBackground(ImageUploadActivity.java:158)&amp;#xA;            at android.os.AsyncTask$2.call(AsyncTask.java:288)&amp;#xA;            at java.util.concurrent.FutureTask.run(FutureTask.java:237)&amp;#xA;            at android.os.AsyncTask$SerialExecutor$1.run(AsyncTask.java:231)&amp;#xA;            at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1112)&amp;#xA;            at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:587)&amp;#xA;            at java.lang.Thread.run(Thread.java:841)&amp;#xA;08-12 16:57:41.982  25559-25559/com.ringee.app E/WindowManager? android.view.WindowLeaked: Activity com.ringee.app.ImageUploadActivity has leaked window com.android.internal.policy.impl.PhoneWindow$DecorView{41bfa110 V.E..... R......D 0,0-456,144} that was originally added here&amp;#xA;            at android.view.ViewRootImpl.&amp;lt;init&amp;gt;(ViewRootImpl.java:346)&amp;#xA;            at android.view.WindowManagerGlobal.addView(WindowManagerGlobal.java:248)&amp;#xA;            at android.view.WindowManagerImpl.addView(WindowManagerImpl.java:69)&amp;#xA;            at android.app.Dialog.show(Dialog.java:286)&amp;#xA;            at com.ringee.app.ImageUploadActivity$4.onClick(ImageUploadActivity.java:156)&amp;#xA;            at android.view.View.performClick(View.java:4438)&amp;#xA;            at android.view.View$PerformClick.run(View.java:18422)&amp;#xA;            at android.os.Handler.handleCallback(Handler.java:733)&amp;#xA;            at android.os.Handler.dispatchMessage(Handler.java:95)&amp;#xA;            at android.os.Looper.loop(Looper.java:136)&amp;#xA;            at android.app.ActivityThread.main(ActivityThread.java:5001)&amp;#xA;            at java.lang.reflect.Method.invokeNative(Native Method)&amp;#xA;            at java.lang.reflect.Method.invoke(Method.java:515)&amp;#xA;            at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:785)&amp;#xA;            at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:601)&amp;#xA;            at dalvik.system.NativeStart.main(Native Method)&amp;#xA;&amp;#xA;&amp;#xA;&amp;#xA;&amp;#xA;&amp;#xA;this is my programming code&amp;#xA;&lt;/code&gt;&lt;/pre&gt;&amp;#xA;&amp;#xA;&lt;p&gt;package com.ringee.app;&lt;/p&gt;&amp;#xA;&amp;#xA;&lt;pre&gt;&lt;code&gt;import android.app.Activity;&amp;#xA;import android.app.ProgressDialog;&amp;#xA;import android.content.Context;&amp;#xA;import android.content.Intent;&amp;#xA;import android.database.Cursor;&amp;#xA;import android.graphics.Bitmap;&amp;#xA;import android.graphics.BitmapFactory;&amp;#xA;import android.net.Uri;&amp;#xA;import android.os.AsyncTask;&amp;#xA;import android.os.Bundle;&amp;#xA;import android.provider.MediaStore;&amp;#xA;import android.util.Log;&amp;#xA;import android.view.Menu;&amp;#xA;import android.view.MenuInflater;&amp;#xA;import android.view.View;&amp;#xA;import android.widget.Button;&amp;#xA;import android.widget.EditText;&amp;#xA;import android.widget.ImageView;&amp;#xA;&amp;#xA;import com.google.gson.Gson;&amp;#xA;import com.google.gson.reflect.TypeToken;&amp;#xA;import com.ringee.app.dataaccess.DatabaseHelper;&amp;#xA;import com.ringee.app.dataobjects.MediaMO;&amp;#xA;import com.ringee.app.dataobjects.UserMO;&amp;#xA;import com.ringee.app.delegates.MediaDelegates;&amp;#xA;import com.ringee.app.delegates.UserDelegate;&amp;#xA;import com.ringee.app.utility.Constants;&amp;#xA;&amp;#xA;import java.io.File;&amp;#xA;import java.io.IOException;&amp;#xA;import java.io.InputStream;&amp;#xA;import java.net.HttpURLConnection;&amp;#xA;import java.net.URL;&amp;#xA;public class ImageUploadActivity extends Activity {&amp;#xA;    private static int RESULT_LOAD_IMAGE = 1;&amp;#xA;    //EditText initialized here&amp;#xA;    EditText Myusername;&amp;#xA;    EditText user;&amp;#xA;    private MediaDelegates mediaDelegates = new MediaDelegates();&amp;#xA;    private File imgFile;&amp;#xA;    private DatabaseHelper dbHelper;&amp;#xA;    private Context context;&amp;#xA;    private UserMO userMO = new UserMO();&amp;#xA;    private ImageView imageView;&amp;#xA;    private EditText eText;&amp;#xA;    private Gson gson = new Gson();&amp;#xA;    private ProgressDialog prgDialog;&amp;#xA;    private MediaMO mediaMO = null;&amp;#xA;    private UserDelegate userDelegates = new UserDelegate();&amp;#xA;    private String text;&amp;#xA;&amp;#xA;&amp;#xA;    @Override&amp;#xA;    public boolean onCreateOptionsMenu(Menu menu) {&amp;#xA;        MenuInflater inflater = getMenuInflater();&amp;#xA;        inflater.inflate(R.menu.image_upload, menu);&amp;#xA;&amp;#xA;        return true;&amp;#xA;    }&amp;#xA;&amp;#xA;    /**&amp;#xA;     * Called when the activity is first created.&amp;#xA;     */&amp;#xA;    @Override&amp;#xA;    public void onCreate(Bundle savedInstanceState) {&amp;#xA;        super.onCreate(savedInstanceState);&amp;#xA;        setContentView(R.layout.imageupload);&amp;#xA;        context = getApplicationContext();&amp;#xA;        dbHelper = new DatabaseHelper(context);&amp;#xA;        userMO = dbHelper.getRingeeUserData(1);&amp;#xA;        imageView = (ImageView) findViewById(R.id.imgView);&amp;#xA;        prgDialog = new ProgressDialog(this);&amp;#xA;        // Set Progress Dialog Text&amp;#xA;        prgDialog.setMessage(&quot;Please wait...&quot;);&amp;#xA;        // Set Cancelable as False&amp;#xA;        prgDialog.setCancelable(false);&amp;#xA;&amp;#xA;        prgDialog.show();&amp;#xA;&amp;#xA;        new AsyncTask&amp;lt;Void, Void, Bitmap&amp;gt;() {&amp;#xA;            @Override&amp;#xA;            protected Bitmap doInBackground(Void... arg0) {&amp;#xA;                String mediaMo = mediaDelegates.getFileFromServer(userMO, context);&amp;#xA;                if (!mediaMo.equals(&quot;null&quot;)) {&amp;#xA;                    mediaMO = gson.fromJson(mediaMo, new TypeToken&amp;lt;MediaMO&amp;gt;() {&amp;#xA;                    }.getType());&amp;#xA;                    try {&amp;#xA;                        URL url = new URL(mediaMO.getFileSrcLink());&amp;#xA;                        HttpURLConnection connection = (HttpURLConnection) url.openConnection();&amp;#xA;                        connection.setDoInput(true);&amp;#xA;                        connection.connect();&amp;#xA;                        InputStream input = connection.getInputStream();&amp;#xA;                        return BitmapFactory.decodeStream(input);&amp;#xA;                    } catch (IOException e) {&amp;#xA;                        Log.i(Constants.TAG, e.toString());&amp;#xA;                    }&amp;#xA;                } else&amp;#xA;                    mediaMO = null;&amp;#xA;                Bitmap largeIcon = BitmapFactory.decodeResource(getResources(), R.drawable.ic_action_user);&amp;#xA;                return largeIcon;&amp;#xA;            }&amp;#xA;&amp;#xA;            @Override&amp;#xA;            protected void onPostExecute(Bitmap myBitmap) {&amp;#xA;                prgDialog.cancel();&amp;#xA;                imageView.setImageBitmap(myBitmap);&amp;#xA;            }&amp;#xA;        }.execute(null, null, null);&amp;#xA;&amp;#xA;        //EditText added here for get current username&amp;#xA;&amp;#xA;        Myusername = (EditText) findViewById(R.id.userEditText);&amp;#xA;        //String s = userMO.getUserName();&amp;#xA;        String s=userMO.getUserName();&amp;#xA;        Myusername.setText(s);&amp;#xA;&amp;#xA;        Myusername.setOnClickListener(new View.OnClickListener() {&amp;#xA;&amp;#xA;            public void onClick(View v) {&amp;#xA;                final String str1 = Myusername.getText().toString();&amp;#xA;&amp;#xA;                Intent int1 = new Intent(ImageUploadActivity.this, NameUpdateActivity.class);&amp;#xA;                Bundle bundle = new Bundle();&amp;#xA;                bundle.putString(&quot;userdata1&quot;, str1);&amp;#xA;                int1.putExtras(bundle);&amp;#xA;                //(int1);&amp;#xA;                startActivityForResult(int1, 0);&amp;#xA;            }&amp;#xA;&amp;#xA;&amp;#xA;        });&amp;#xA;&amp;#xA;        Button buttonAddImage = (Button) findViewById(R.id.buttonAddPicture);&amp;#xA;        buttonAddImage.setOnClickListener(new View.OnClickListener() {&amp;#xA;&amp;#xA;            @Override&amp;#xA;            public void onClick(View arg0) {&amp;#xA;                MediaMO mediaMO1 = new MediaMO();&amp;#xA;                mediaMO1.setRingeeUserId(userMO.getRingeeUserId());&amp;#xA;            }&amp;#xA;        });&amp;#xA;&amp;#xA;        Button buttonLoadImage = (Button) findViewById(R.id.buttonLoadPicture);&amp;#xA;        buttonLoadImage.setOnClickListener(new View.OnClickListener() {&amp;#xA;&amp;#xA;            @Override&amp;#xA;            public void onClick(View arg0) {&amp;#xA;                prgDialog.show();&amp;#xA;                if (mediaMO == null) {&amp;#xA;                    new AsyncTask&amp;lt;Void, Void, Bitmap&amp;gt;() {&amp;#xA;                        @Override&amp;#xA;                        protected Bitmap doInBackground(Void... arg0) {&amp;#xA;                            MediaMO mediaMO1 = new MediaMO();&amp;#xA;                            mediaMO1.setRingeeUserId(userMO.getRingeeUserId());&amp;#xA;                            mediaMO1.setIsType(Constants.IS_TYPE_PROFILE_IMAGE);&amp;#xA;                            String mediaMo = mediaDelegates.uploadFileToServer(mediaMO1, context, imgFile);&amp;#xA;                            if (!mediaMo.equals(&quot;null&quot;)) {&amp;#xA;                                mediaMO = gson.fromJson(mediaMo, new TypeToken&amp;lt;MediaMO&amp;gt;() {&amp;#xA;                                }.getType());&amp;#xA;                                try {&amp;#xA;                                    URL url = new URL(mediaMO.getFileSrcLink());&amp;#xA;                                    HttpURLConnection connection = (HttpURLConnection) url.openConnection();&amp;#xA;                                    connection.setDoInput(true);&amp;#xA;                                    connection.connect();&amp;#xA;                                    InputStream input = connection.getInputStream();&amp;#xA;                                    return BitmapFactory.decodeStream(input);&amp;#xA;                                } catch (IOException e) {&amp;#xA;                                    Log.i(Constants.TAG, e.toString());&amp;#xA;                                }&amp;#xA;                            }&amp;#xA;                            Bitmap largeIcon = BitmapFactory.decodeResource(getResources(), R.drawable.ic_action_user);&amp;#xA;                            return largeIcon;&amp;#xA;                        }&amp;#xA;&amp;#xA;                        @Override&amp;#xA;                        protected void onPostExecute(Bitmap myBitmap) {&amp;#xA;                            prgDialog.cancel();&amp;#xA;                            imageView.setImageBitmap(myBitmap);&amp;#xA;                        }&amp;#xA;                    }.execute(null, null, null);&amp;#xA;                } else {&amp;#xA;                    new AsyncTask&amp;lt;Void, Void, Bitmap&amp;gt;() {&amp;#xA;                        @Override&amp;#xA;                        protected Bitmap doInBackground(Void... arg0) {&amp;#xA;                            String mediaMo = mediaDelegates.updateFileToServer(mediaMO, context, imgFile);&amp;#xA;                            if (!mediaMo.equals(&quot;null&quot;)) {&amp;#xA;                                mediaMO = gson.fromJson(mediaMo, new TypeToken&amp;lt;MediaMO&amp;gt;() {&amp;#xA;                                }.getType());&amp;#xA;                                try {&amp;#xA;                                    URL url = new URL(mediaMO.getFileSrcLink());&amp;#xA;                                    HttpURLConnection connection = (HttpURLConnection) url.openConnection();&amp;#xA;                                    connection.setDoInput(true);&amp;#xA;                                    connection.connect();&amp;#xA;                                    InputStream input = connection.getInputStream();&amp;#xA;                                    return BitmapFactory.decodeStream(input);&amp;#xA;                                } catch (IOException e) {&amp;#xA;                                    Log.i(Constants.TAG, e.toString());&amp;#xA;                                }&amp;#xA;                            }&amp;#xA;                            Bitmap largeIcon = BitmapFactory.decodeResource(getResources(), R.drawable.ic_action_user);&amp;#xA;                            return largeIcon;&amp;#xA;                        }&amp;#xA;&amp;#xA;                        @Override&amp;#xA;                        protected void onPostExecute(Bitmap myBitmap) {&amp;#xA;                            prgDialog.cancel();&amp;#xA;                            imageView.setImageBitmap(myBitmap);&amp;#xA;                        }&amp;#xA;                    }.execute(null, null, null);&amp;#xA;                }&amp;#xA;            }&amp;#xA;        });&amp;#xA;    }&amp;#xA;&amp;#xA;    @Override&amp;#xA;    protected void onActivityResult(int requestCode, int resultCode, Intent data) {&amp;#xA;        super.onActivityResult(requestCode, resultCode, data);&amp;#xA;&amp;#xA;        if (requestCode == RESULT_LOAD_IMAGE &amp;amp;&amp;amp; resultCode == RESULT_OK &amp;amp;&amp;amp; null != data) {&amp;#xA;            Uri selectedImage = data.getData();&amp;#xA;            String[] filePathColumn = {MediaStore.Images.Media.DATA};&amp;#xA;&amp;#xA;            Cursor cursor = getContentResolver().query(selectedImage,&amp;#xA;                    filePathColumn, null, null, null);&amp;#xA;            cursor.moveToFirst();&amp;#xA;&amp;#xA;            int columnIndex = cursor.getColumnIndex(filePathColumn[0]);&amp;#xA;            String picturePath = cursor.getString(columnIndex);&amp;#xA;            cursor.close();&amp;#xA;&amp;#xA;            ImageView imageView = (ImageView) findViewById(R.id.imgView);&amp;#xA;            imageView.setImageBitmap(BitmapFactory.decodeFile(picturePath));&amp;#xA;            imgFile = new File(picturePath);&amp;#xA;&amp;#xA;        }&amp;#xA;    }&amp;#xA;&lt;/code&gt;&lt;/pre&gt;&amp;#xA;&amp;#xA;&lt;p&gt;when runtime i am click to load image buttoni got this  exception.Button buttonLoadImage i am used to load the image can anyone help me how to fix that exception.&lt;/p&gt;&amp;#xA;" stacktrace="java.lang.RuntimeException: An error occured while executing doInBackground()&#10;            at android.os.AsyncTask$3.done(AsyncTask.java:300)&#10;            at java.util.concurrent.FutureTask.finishCompletion(FutureTask.java:355)&#10;            at java.util.concurrent.FutureTask.setException(FutureTask.java:222)&#10;            at java.util.concurrent.FutureTask.run(FutureTask.java:242)&#10;            at android.os.AsyncTask$SerialExecutor$1.run(AsyncTask.java:231)&#10;            at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1112)&#10;            at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:587)&#10;            at java.lang.Thread.run(Thread.java:841)"/><post answer="" question="&lt;p&gt;I did this tutorial &lt;a href=&quot;http://javapapers.com/android/android-twitter-feed-reader/&quot; rel=&quot;nofollow&quot;&gt;http://javapapers.com/android/android-twitter-feed-reader/&lt;/a&gt; in eclipse and moved my project to studio. Can someone please assist on what these errors mean and how I could resolve them? My logcat is as follows:&lt;/p&gt;&amp;#xA;&amp;#xA;&lt;pre&gt;&lt;code&gt;java.lang.RuntimeException: An error occured while executing doInBackground()&amp;#xA;            at android.os.AsyncTask$3.done(AsyncTask.java:300)&amp;#xA;            at java.util.concurrent.FutureTask.finishCompletion(FutureTask.java:355)&amp;#xA;            at java.util.concurrent.FutureTask.setException(FutureTask.java:222)&amp;#xA;            at java.util.concurrent.FutureTask.run(FutureTask.java:242)&amp;#xA;            at android.os.AsyncTask$SerialExecutor$1.run(AsyncTask.java:231)&amp;#xA;            at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1112)&amp;#xA;            at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:587)&amp;#xA;            at java.lang.Thread.run(Thread.java:841)&amp;#xA;     Caused by: java.lang.ClassCastException: com.example.ishonours.witsbusapp.TwitterFragment cannot be cast to android.app.ListActivity&amp;#xA;            at com.example.ishonours.witsbusapp.TwitterAsyncTask.doInBackground(TwitterAsyncTask.java:24)&amp;#xA;            at com.example.ishonours.witsbusapp.TwitterAsyncTask.doInBackground(TwitterAsyncTask.java:15)&amp;#xA;            at android.os.AsyncTask$2.call(AsyncTask.java:288)&amp;#xA;            at java.util.concurrent.FutureTask.run(FutureTask.java:237)&amp;#xA;            at android.os.AsyncTask$SerialExecutor$1.run(AsyncTask.java:231)&amp;#xA;            at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1112)&amp;#xA;            at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:587)&amp;#xA;            at java.lang.Thread.run(Thread.java:841)&amp;#xA;&lt;/code&gt;&lt;/pre&gt;&amp;#xA;&amp;#xA;&lt;p&gt;This is my TwitterAsyncTask Class:&lt;/p&gt;&amp;#xA;&amp;#xA;&lt;pre&gt;&lt;code&gt;import android.app.ListActivity;&amp;#xA;import android.text.method.LinkMovementMethod;&amp;#xA;import android.widget.ArrayAdapter;&amp;#xA;import android.os.AsyncTask;&amp;#xA;import android.widget.ListView;&amp;#xA;import android.widget.TextView;&amp;#xA;&amp;#xA;import com.example.ishonours.witsbusapp.TwitterAPI;&amp;#xA;import com.example.ishonours.witsbusapp.TwitterTweet;&amp;#xA;&amp;#xA;import java.util.ArrayList;&amp;#xA;&amp;#xA;public class TwitterAsyncTask extends AsyncTask&amp;lt;Object, Void, ArrayList&amp;lt;TwitterTweet&amp;gt;&amp;gt; {&amp;#xA;    ListActivity callerActivity;&amp;#xA;&amp;#xA;    final static String TWITTER_API_KEY = &quot;xxx&quot;;&amp;#xA;    final static String TWITTER_API_SECRET = &quot;xxx&quot;;&amp;#xA;&amp;#xA;    @Override&amp;#xA;    protected ArrayList&amp;lt;TwitterTweet&amp;gt; doInBackground(Object... params) {&amp;#xA;        ArrayList&amp;lt;TwitterTweet&amp;gt; twitterTweets = null;&amp;#xA;        callerActivity = (ListActivity) params[1];&amp;#xA;        if (params.length &amp;gt; 0) {&amp;#xA;            TwitterAPI twitterAPI = new TwitterAPI(TWITTER_API_KEY,TWITTER_API_SECRET);&amp;#xA;            twitterTweets = twitterAPI.getTwitterTweets(params[0].toString());&amp;#xA;        }&amp;#xA;        return twitterTweets;&amp;#xA;    }&amp;#xA;&amp;#xA;    @Override&amp;#xA;    protected void onPostExecute(ArrayList&amp;lt;TwitterTweet&amp;gt; twitterTweets) {&amp;#xA;        ArrayAdapter&amp;lt;TwitterTweet&amp;gt; adapter =&amp;#xA;                new ArrayAdapter&amp;lt;TwitterTweet&amp;gt;(callerActivity, R.layout.twitter_tweets_list,&amp;#xA;                        R.id.listTextView, twitterTweets);&amp;#xA;        callerActivity.setListAdapter(adapter);&amp;#xA;        ListView lv = callerActivity.getListView();&amp;#xA;        lv.setDividerHeight(0);&amp;#xA;        //lv.setDivider(this.getResources().getDrawable(android.R.color.transparent));&amp;#xA;        //lv.setBackgroundColor(callerActivity.getResources().getColor(R.color.Twitter_blue));&amp;#xA;    }&amp;#xA;}&amp;#xA;&lt;/code&gt;&lt;/pre&gt;&amp;#xA;&amp;#xA;&lt;p&gt;I should've mentioned that I am extremely new to this. The comments have given me some perspective of the error. I am still not quite sure how to resolve it. Any further suggestions?&lt;/p&gt;&amp;#xA;&amp;#xA;&lt;p&gt;This is the other class, TwitterFragment:&lt;/p&gt;&amp;#xA;&amp;#xA;&lt;pre&gt;&lt;code&gt;public class TwitterFragment extends ListFragment {&amp;#xA;&amp;#xA;    private static final String ARG_SECTION_NUMBER = &quot;4&quot;;&amp;#xA;&amp;#xA;    private OnFragmentInteractionListener mListener;&amp;#xA;&amp;#xA;    public static TwitterFragment newInstance(int menuNumber) {&amp;#xA;        TwitterFragment fragment = new TwitterFragment();&amp;#xA;        Bundle args = new Bundle();&amp;#xA;        args.putInt(ARG_SECTION_NUMBER, menuNumber);&amp;#xA;        fragment.setArguments(args);&amp;#xA;        return fragment;&amp;#xA;    }&amp;#xA;&amp;#xA;    public TwitterFragment() {&amp;#xA;    }&amp;#xA;&amp;#xA;    //i added&amp;#xA;    final static String twitterScreenName = &quot;WitsServices&quot;;&amp;#xA;    final static String TAG = &quot;MainActivity&quot;;&amp;#xA;&amp;#xA;    @Override&amp;#xA;    public void onCreate(Bundle savedInstanceState) {&amp;#xA;        super.onCreate(savedInstanceState);&amp;#xA;        //i added&amp;#xA;        AndroidNetworkUtility androidNetworkUtility = new AndroidNetworkUtility();&amp;#xA;        if (androidNetworkUtility.isConnected(this)) {&amp;#xA;            new TwitterAsyncTask().execute(twitterScreenName,this);&amp;#xA;        } else {&amp;#xA;            Log.v(TAG, &quot;Network not Available!&quot;);&amp;#xA;        }&amp;#xA;&amp;#xA;&amp;#xA;        //setListAdapter(new ArrayAdapter&amp;lt;DummyContent.DummyItem&amp;gt;(getActivity(),&amp;#xA;        //        android.R.layout.simple_list_item_1, android.R.id.text1, DummyContent.ITEMS));&amp;#xA;    }&amp;#xA;&amp;#xA;&amp;#xA;    @Override&amp;#xA;    public void onAttach(Activity activity) {&amp;#xA;        super.onAttach(activity);&amp;#xA;        ((MainActivity) activity).onSectionAttached(&amp;#xA;                getArguments().getInt(ARG_SECTION_NUMBER));&amp;#xA;    }&amp;#xA;&amp;#xA;    @Override&amp;#xA;    public void onDetach() {&amp;#xA;        super.onDetach();&amp;#xA;        mListener = null;&amp;#xA;    }&amp;#xA;&amp;#xA;    @Override&amp;#xA;    public void onListItemClick(ListView l, View v, int position, long id) {&amp;#xA;        super.onListItemClick(l, v, position, id);&amp;#xA;&amp;#xA;        if (null != mListener) {&amp;#xA;            // Notify the active callbacks interface (the activity, if the&amp;#xA;            // fragment is attached to one) that an item has been selected.&amp;#xA;            //mListener.onFragmentInteraction(DummyContent.ITEMS.get(position).id);&amp;#xA;        }&amp;#xA;    }&amp;#xA;&amp;#xA;    public interface OnFragmentInteractionListener {&amp;#xA;        // TODO: Update argument type and name&amp;#xA;        public void onFragmentInteraction(String id);&amp;#xA;    }&amp;#xA;&amp;#xA;}&amp;#xA;&lt;/code&gt;&lt;/pre&gt;&amp;#xA;" stacktrace="java.lang.RuntimeException: An error occured while executing doInBackground()&#10;            at android.os.AsyncTask$3.done(AsyncTask.java:300)&#10;            at java.util.concurrent.FutureTask.finishCompletion(FutureTask.java:355)&#10;            at java.util.concurrent.FutureTask.setException(FutureTask.java:222)&#10;            at java.util.concurrent.FutureTask.run(FutureTask.java:242)&#10;            at android.os.AsyncTask$SerialExecutor$1.run(AsyncTask.java:231)&#10;            at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1112)&#10;            at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:587)&#10;            at java.lang.Thread.run(Thread.java:841)"/><post answer="&lt;p&gt;You should remove the ':' char in the array you're pasing to &lt;code&gt;prepare()&lt;/code&gt;:&lt;/p&gt;&amp;#xA;&amp;#xA;&lt;pre&gt;&lt;code&gt;$result = $stmt-&amp;gt;execute(array('username' =&amp;gt; $_POST['username'],&amp;#xA;                               'password' =&amp;gt; $_POST['password']&amp;#xA;&lt;/code&gt;&lt;/pre&gt;&amp;#xA;&amp;#xA;&lt;p&gt;Because otherwise PDO would return an empty response or worse, a &quot;Warning&quot; or &quot;Error&quot; php statement that will add up before the JSON you're generating at the end, and thus generate a parsing exception. Your php response would look like:&lt;/p&gt;&amp;#xA;&amp;#xA;&lt;pre&gt;&lt;code&gt;Error in line BLA BLA BLA ...&amp;#xA;[&quot;success&quot;: &quot;false&quot;, &quot;message&quot;:&quot;blablabla&quot;]&amp;#xA;&lt;/code&gt;&lt;/pre&gt;&amp;#xA;&amp;#xA;&lt;p&gt;Which you would unable to parse with your Java app.&lt;/p&gt;&amp;#xA;&amp;#xA;&lt;p&gt;So it's not actually an issue in your Android code!&lt;/p&gt;&amp;#xA;&amp;#xA;&lt;p&gt;The ':' in the request means &quot;check in the given array the value after ':'&quot;.&lt;/p&gt;&amp;#xA;" question="&lt;p&gt;Through chrome i can log in using a member from the database (MySQL), and i can make a new user. When i use the app, i can make a new user but the app crashes.&lt;/p&gt;&amp;#xA;&amp;#xA;&lt;p&gt;Using simple php (below) i get a proper response, and the new activity is launched. The problem here is both correct and incorrect credentials work.&lt;/p&gt;&amp;#xA;&amp;#xA;&lt;pre&gt;&lt;code&gt;&amp;lt;?php&amp;#xA;$response = array();&amp;#xA;if (isset($_POST['username'], $_POST['password'])) {&amp;#xA;    $response[&quot;success&quot;] = 1;&amp;#xA;    $response[&quot;message&quot;] = &quot;User Name and password are set&quot;;&amp;#xA;} else {&amp;#xA;    $response[&quot;success&quot;] = 0;&amp;#xA;    $response[&quot;message&quot;] = &quot;User Name and password not set&quot;;&amp;#xA;}&amp;#xA;echo json_encode($response);&amp;#xA;&lt;/code&gt;&lt;/pre&gt;&amp;#xA;&amp;#xA;&lt;p&gt;The following is my login.java file:&lt;/p&gt;&amp;#xA;&amp;#xA;&lt;pre&gt;&lt;code&gt;package com.amity.paul.amity;&amp;#xA;&amp;#xA;import java.util.ArrayList;&amp;#xA;import java.util.List;&amp;#xA;&amp;#xA;import org.apache.http.NameValuePair;&amp;#xA;import org.apache.http.message.BasicNameValuePair;&amp;#xA;import org.json.JSONException;&amp;#xA;import org.json.JSONObject;&amp;#xA;&amp;#xA;import android.app.Activity;&amp;#xA;import android.app.ProgressDialog;&amp;#xA;import android.content.Intent;&amp;#xA;import android.content.SharedPreferences;&amp;#xA;import android.os.AsyncTask;&amp;#xA;import android.os.Bundle;&amp;#xA;import android.preference.PreferenceManager;&amp;#xA;import android.util.Log;&amp;#xA;import android.view.View;&amp;#xA;import android.view.View.OnClickListener;&amp;#xA;import android.widget.Button;&amp;#xA;import android.widget.EditText;&amp;#xA;import android.widget.Toast;&amp;#xA;&amp;#xA;import library.JSONParser;&amp;#xA;&amp;#xA;public class login extends Activity implements OnClickListener{&amp;#xA;&amp;#xA;    private EditText user, pass;&amp;#xA;    private Button mSubmit, mRegister;&amp;#xA;&amp;#xA;    // Progress Dialog&amp;#xA;    private ProgressDialog pDialog;&amp;#xA;&amp;#xA;    // JSON parser class&amp;#xA;    JSONParser jsonParser = new JSONParser();&amp;#xA;&amp;#xA;    //php login script location:&amp;#xA;&amp;#xA;    //localhost :&amp;#xA;    //testing on your device&amp;#xA;    //put your local ip instead,  on windows, run CMD &amp;gt; ipconfig&amp;#xA;    //or in mac's terminal type ifconfig and look for the ip under en0 or en1&amp;#xA;    // private static final String LOGIN_URL = &quot;http://xxx.xxx.x.x:1234/webservice/login.php&quot;;&amp;#xA;&amp;#xA;    //testing on Emulator:&amp;#xA;    private static final String LOGIN_URL = &quot;http://10.0.2.2/amity/login.php&quot;;&amp;#xA;&amp;#xA;    //testing from a real server:&amp;#xA;    //private static final String LOGIN_URL = &quot;http://www.yourdomain.com/webservice/login.php&quot;;&amp;#xA;&amp;#xA;    //JSON element ids from repsonse of php script:&amp;#xA;    private static final String TAG_SUCCESS = &quot;success&quot;;&amp;#xA;    private static final String TAG_MESSAGE = &quot;message&quot;;&amp;#xA;&amp;#xA;    @Override&amp;#xA;    protected void onCreate(Bundle savedInstanceState) {&amp;#xA;        // TODO Auto-generated method stub&amp;#xA;        super.onCreate(savedInstanceState);&amp;#xA;        setContentView(R.layout.login);&amp;#xA;&amp;#xA;        //setup input fields&amp;#xA;        user = (EditText)findViewById(R.id.username);&amp;#xA;        pass = (EditText)findViewById(R.id.password);&amp;#xA;&amp;#xA;        //setup buttons&amp;#xA;        mSubmit = (Button)findViewById(R.id.login);&amp;#xA;        mRegister = (Button)findViewById(R.id.register);&amp;#xA;&amp;#xA;        //register listeners&amp;#xA;        mSubmit.setOnClickListener(this);&amp;#xA;        mRegister.setOnClickListener(this);&amp;#xA;&amp;#xA;    }&amp;#xA;&amp;#xA;    @Override&amp;#xA;    public void onClick(View v) {&amp;#xA;        // TODO Auto-generated method stub&amp;#xA;        switch (v.getId()) {&amp;#xA;            case R.id.login:&amp;#xA;                new AttemptLogin().execute();&amp;#xA;                break;&amp;#xA;            case R.id.register:&amp;#xA;                Intent i = new Intent(this, register.class);&amp;#xA;                startActivity(i);&amp;#xA;                break;&amp;#xA;&amp;#xA;            default:&amp;#xA;                break;&amp;#xA;        }&amp;#xA;    }&amp;#xA;&amp;#xA;    class AttemptLogin extends AsyncTask&amp;lt;String, String, String&amp;gt; {&amp;#xA;&amp;#xA;        /**&amp;#xA;         * Before starting background thread Show Progress Dialog&amp;#xA;         * */&amp;#xA;        boolean failure = false;&amp;#xA;&amp;#xA;        @Override&amp;#xA;        protected void onPreExecute() {&amp;#xA;            super.onPreExecute();&amp;#xA;            pDialog = new ProgressDialog(login.this);&amp;#xA;            pDialog.setMessage(&quot;Attempting login...&quot;);&amp;#xA;            pDialog.setIndeterminate(false);&amp;#xA;            pDialog.setCancelable(true);&amp;#xA;            pDialog.show();&amp;#xA;        }&amp;#xA;&amp;#xA;        @Override&amp;#xA;        protected String doInBackground(String... args) {&amp;#xA;            // TODO Auto-generated method stub&amp;#xA;            // Check for success tag&amp;#xA;            int success;&amp;#xA;            String username = user.getText().toString();&amp;#xA;            String password = pass.getText().toString();&amp;#xA;            try {&amp;#xA;                // Building Parameters&amp;#xA;                List&amp;lt;NameValuePair&amp;gt; params = new ArrayList&amp;lt;NameValuePair&amp;gt;();&amp;#xA;                params.add(new BasicNameValuePair(&quot;username&quot;, username));&amp;#xA;                params.add(new BasicNameValuePair(&quot;password&quot;, password));&amp;#xA;&amp;#xA;                Log.d(&quot;request!&quot;, &quot;starting&quot;);&amp;#xA;                // getting product details by making HTTP request&amp;#xA;                JSONObject json = jsonParser.makeHttpRequest(&amp;#xA;                        LOGIN_URL, &quot;POST&quot;, params);&amp;#xA;&amp;#xA;                // check your log for json response&amp;#xA;                Log.d(&quot;Login attempt&quot;, json.toString());&amp;#xA;&amp;#xA;                // json success tag&amp;#xA;                success = json.getInt(TAG_SUCCESS);&amp;#xA;                if (success == 1) {&amp;#xA;                    Log.d(&quot;Login Successful!&quot;, json.toString());&amp;#xA;                    //save user data&amp;#xA;                    SharedPreferences sp = PreferenceManager&amp;#xA;                            .getDefaultSharedPreferences(login.this);&amp;#xA;                    SharedPreferences.Editor edit = sp.edit();&amp;#xA;                    edit.putString(&quot;username&quot;,username);&amp;#xA;                    edit.commit();&amp;#xA;&amp;#xA;                    Intent i = new Intent(login.this, home.class);&amp;#xA;                    finish();&amp;#xA;                    startActivity(i);&amp;#xA;                    return json.getString(TAG_MESSAGE);&amp;#xA;                }else{&amp;#xA;                    Log.d(&quot;Login Failure!&quot;, json.getString(TAG_MESSAGE));&amp;#xA;                    return json.getString(TAG_MESSAGE);&amp;#xA;&amp;#xA;                }&amp;#xA;            } catch (JSONException e) {&amp;#xA;                e.printStackTrace();&amp;#xA;            }&amp;#xA;&amp;#xA;            return null;&amp;#xA;&amp;#xA;        }&amp;#xA;        /**&amp;#xA;         * After completing background task Dismiss the progress dialog&amp;#xA;         * **/&amp;#xA;        protected void onPostExecute(String file_url) {&amp;#xA;            // dismiss the dialog once product deleted&amp;#xA;            pDialog.dismiss();&amp;#xA;            if (file_url != null){&amp;#xA;                Toast.makeText(login.this, file_url, Toast.LENGTH_LONG).show();&amp;#xA;            }&amp;#xA;&amp;#xA;        }&amp;#xA;&amp;#xA;    }&amp;#xA;&amp;#xA;}&amp;#xA;&lt;/code&gt;&lt;/pre&gt;&amp;#xA;&amp;#xA;&lt;p&gt;I then changed the php to be more advanced, as below:&lt;/p&gt;&amp;#xA;&amp;#xA;&lt;pre&gt;&lt;code&gt;&amp;lt;?php   &amp;#xA;$response = array();&amp;#xA;if (isset($_POST['username'], $_POST['password'])) {  &amp;#xA;    require(&quot;config.inc.php&quot;);&amp;#xA;    try {&amp;#xA;        $query = &quot; &amp;#xA;            SELECT &amp;#xA;                id, &amp;#xA;                username, &amp;#xA;                password&amp;#xA;            FROM users &amp;#xA;            WHERE &amp;#xA;                username = :username&amp;#xA;            AND password = :password&amp;#xA;        &quot;;&amp;#xA;&amp;#xA;        $stmt   = $db-&amp;gt;prepare($query);&amp;#xA;        $result = $stmt-&amp;gt;execute(array(':username' =&amp;gt; $_POST['username'],&amp;#xA;                                       ':password' =&amp;gt; $_POST['password']&amp;#xA;                         ));&amp;#xA;        if($stmt-&amp;gt;rowCount() == 1){&amp;#xA;            $response[&quot;success&quot;] = true;&amp;#xA;            $response[&quot;message&quot;] = &quot;user found&quot;;        &amp;#xA;        }else{&amp;#xA;            $response[&quot;success&quot;] = false;&amp;#xA;            $response[&quot;message&quot;] = &quot;user not found&quot;;&amp;#xA;        }&amp;#xA;    }&amp;#xA;    catch (PDOException $ex) {&amp;#xA;        $response[&quot;success&quot;] = false;&amp;#xA;        $response[&quot;message&quot;] = &quot;Database Error1. Please Try Again!&quot;;&amp;#xA;    }&amp;#xA;&amp;#xA;} else {          &amp;#xA;    $response[&quot;success&quot;] = false;         &amp;#xA;    $response[&quot;message&quot;] = &quot;User Name and password not set&quot;; &amp;#xA;}&amp;#xA;echo json_encode($response);&amp;#xA;&lt;/code&gt;&lt;/pre&gt;&amp;#xA;&amp;#xA;&lt;p&gt;Problem now is parsing error. Logcat:&lt;/p&gt;&amp;#xA;&amp;#xA;&lt;pre&gt;&lt;code&gt;08-16 15:39:40.620      841-856/com.amity.paul.amity E/JSON Parser? Error parsing data org.json.JSONException: Value  of type java.lang.String cannot be converted to JSONObject&amp;#xA;08-16 15:39:40.630      841-856/com.amity.paul.amity W/dalvikvm? threadid=11: thread exiting with uncaught exception (group=0xb3a21ba8)&amp;#xA;08-16 15:39:40.670      841-856/com.amity.paul.amity E/AndroidRuntime? FATAL EXCEPTION: AsyncTask #1&amp;#xA;    Process: com.amity.paul.amity, PID: 841&amp;#xA;    java.lang.RuntimeException: An error occured while executing doInBackground()&amp;#xA;            at android.os.AsyncTask$3.done(AsyncTask.java:300)&amp;#xA;            at java.util.concurrent.FutureTask.finishCompletion(FutureTask.java:355)&amp;#xA;            at java.util.concurrent.FutureTask.setException(FutureTask.java:222)&amp;#xA;            at java.util.concurrent.FutureTask.run(FutureTask.java:242)&amp;#xA;            at android.os.AsyncTask$SerialExecutor$1.run(AsyncTask.java:231)&amp;#xA;            at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1112)&amp;#xA;            at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:587)&amp;#xA;            at java.lang.Thread.run(Thread.java:841)&amp;#xA;     Caused by: java.lang.NullPointerException&amp;#xA;            at com.amity.paul.amity.login$AttemptLogin.doInBackground(login.java:117)&amp;#xA;            at com.amity.paul.amity.login$AttemptLogin.doInBackground(login.java:97)&amp;#xA;            at android.os.AsyncTask$2.call(AsyncTask.java:288)&amp;#xA;            at java.util.concurrent.FutureTask.run(FutureTask.java:237)&amp;#xA;            at android.os.AsyncTask$SerialExecutor$1.run(AsyncTask.java:231)&amp;#xA;            at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1112)&amp;#xA;            at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:587)&amp;#xA;            at java.lang.Thread.run(Thread.java:841)&amp;#xA;&lt;/code&gt;&lt;/pre&gt;&amp;#xA;&amp;#xA;&lt;p&gt;Please make the solution 'noob friendly' as I am new to android app development. Thanks!&lt;/p&gt;&amp;#xA;&amp;#xA;&lt;p&gt;Edit:&lt;/p&gt;&amp;#xA;&amp;#xA;&lt;p&gt;I fixed the issue using the following php:&lt;/p&gt;&amp;#xA;&amp;#xA;&lt;pre&gt;&lt;code&gt;&amp;lt;?php   &amp;#xA;$response = array();&amp;#xA;if (isset($_POST['username'], $_POST['password'])) {  &amp;#xA;    require(&quot;config.inc.php&quot;);&amp;#xA;    try {&amp;#xA;        $query = &quot; &amp;#xA;            SELECT &amp;#xA;                id, &amp;#xA;                username, &amp;#xA;                password&amp;#xA;            FROM users &amp;#xA;            WHERE &amp;#xA;                username = :username&amp;#xA;            AND password = :password&amp;#xA;        &quot;;&amp;#xA;&amp;#xA;        $stmt   = $db-&amp;gt;prepare($query);&amp;#xA;        $result = $stmt-&amp;gt;execute(array(':username' =&amp;gt; $_POST['username'],&amp;#xA;                                       ':password' =&amp;gt; $_POST['password']&amp;#xA;                         ));&amp;#xA;        if($stmt-&amp;gt;rowCount() == 1){&amp;#xA;            $response[&quot;success&quot;] = true;&amp;#xA;            $response[&quot;message&quot;] = &quot;user found&quot;;        &amp;#xA;        }else{&amp;#xA;            $response[&quot;success&quot;] = false;&amp;#xA;            $response[&quot;message&quot;] = &quot;user not found&quot;;&amp;#xA;        }&amp;#xA;    }&amp;#xA;    catch (PDOException $ex) {&amp;#xA;        $response[&quot;success&quot;] = false;&amp;#xA;        $response[&quot;message&quot;] = &quot;Database Error1. Please Try Again!&quot;;&amp;#xA;    }&amp;#xA;&amp;#xA;} else {          &amp;#xA;    $response[&quot;success&quot;] = false;         &amp;#xA;    $response[&quot;message&quot;] = &quot;User Name and password not set&quot;; &amp;#xA;}&amp;#xA;echo json_encode($response);&amp;#xA;&lt;/code&gt;&lt;/pre&gt;&amp;#xA;&amp;#xA;&lt;p&gt;One last issue, in logcat, it will tell me if success = true / false. How can i make a message appear to say incorrect credentials, and if the right combo is entered, to launch the new activity?&lt;/p&gt;&amp;#xA;" stacktrace="java.lang.RuntimeException: An error occured while executing doInBackground()&#10;            at android.os.AsyncTask$3.done(AsyncTask.java:300)&#10;            at java.util.concurrent.FutureTask.finishCompletion(FutureTask.java:355)&#10;            at java.util.concurrent.FutureTask.setException(FutureTask.java:222)&#10;            at java.util.concurrent.FutureTask.run(FutureTask.java:242)&#10;            at android.os.AsyncTask$SerialExecutor$1.run(AsyncTask.java:231)&#10;            at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1112)&#10;            at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:587)&#10;            at java.lang.Thread.run(Thread.java:841)"/><post answer="" question="&lt;p&gt;Don't no what's the problem,It's just every time i enter username and password&amp;#xA;dialog box shows Attempting Login and app just crashes.&amp;#xA;Server used:Wamp&amp;#xA;Below are the codes used.&amp;#xA;Any help would be appreciable.Thanks in advance.&lt;/p&gt;&amp;#xA;&amp;#xA;&lt;p&gt;LoginActivity.java:&lt;/p&gt;&amp;#xA;&amp;#xA;&lt;pre&gt;&lt;code&gt;package com.sam.kiet;    &amp;#xA;import android.app.Activity;   &amp;#xA;import android.app.ProgressDialog;   &amp;#xA;import android.content.Intent;     &amp;#xA;import android.os.AsyncTask;     &amp;#xA;import android.os.Bundle;     &amp;#xA;import android.view.View;      &amp;#xA;import android.widget.Button;      &amp;#xA;import android.widget.EditText;      &amp;#xA;import android.widget.Toast;      &amp;#xA;import android.util.Log;            &amp;#xA;&amp;#xA;&amp;#xA;import org.apache.http.NameValuePair;       &amp;#xA;import org.apache.http.message.BasicNameValuePair;     &amp;#xA;import org.json.JSONException;      &amp;#xA;import org.json.JSONObject;       &amp;#xA;&amp;#xA;import java.util.ArrayList;     &amp;#xA;import java.util.List;      &amp;#xA;&amp;#xA;/**       &amp;#xA; * Created by Vaibhav on 10/2/2015.     &amp;#xA;*/      &amp;#xA;&amp;#xA;&amp;#xA;public class LoginActivity extends Activity implements View.OnClickListener                  {&amp;#xA;   private EditText user, pass;       &amp;#xA;   private Button bLogin;       &amp;#xA;   private ProgressDialog pDialog;         &amp;#xA;   JSONParser jsonParser = new JSONParser();            &amp;#xA;   private static final String LOGIN_URL = &quot;http://192.168.43.1/login.php&quot;;      &amp;#xA;   private static final String TAG_SUCCESS = &quot;success&quot;;            &amp;#xA;   private static final String TAG_MESSAGE = &quot;message&quot;;         &amp;#xA;@Override&amp;#xA;protected void onCreate(Bundle savedInstanceState) {&amp;#xA;    super.onCreate(savedInstanceState);&amp;#xA;    setContentView(R.layout.login);&amp;#xA;    user = (EditText) findViewById(R.id.username);&amp;#xA;    pass = (EditText) findViewById(R.id.password);&amp;#xA;    bLogin = (Button) findViewById(R.id.Blogin);&amp;#xA;    bLogin.setOnClickListener(this);&amp;#xA;&amp;#xA;}&amp;#xA;&amp;#xA;@Override    &amp;#xA;public void onClick(View v) {&amp;#xA;    switch (v.getId()) {&amp;#xA;        case R.id.Blogin:&amp;#xA;            new AttemptLogin().execute();&amp;#xA;&amp;#xA;        default:&amp;#xA;            break;&amp;#xA;    }&amp;#xA;}&amp;#xA;&amp;#xA;class AttemptLogin extends AsyncTask&amp;lt;String, String, String&amp;gt; {&amp;#xA;    //boolean failure = false;&amp;#xA;    private String username,password;&amp;#xA;&amp;#xA;    @Override&amp;#xA;    protected void onPreExecute() {&amp;#xA;        super.onPreExecute();&amp;#xA;        pDialog = new ProgressDialog(LoginActivity.this);&amp;#xA;        pDialog.setMessage(&quot;Attempting for login...&quot;);&amp;#xA;        pDialog.setIndeterminate(false);&amp;#xA;        pDialog.setCancelable(true);&amp;#xA;        pDialog.show();&amp;#xA;        username = user.getText().toString();&amp;#xA;        password = pass.getText().toString();&amp;#xA;&amp;#xA;&amp;#xA;&amp;#xA;    }&amp;#xA;&amp;#xA;    @Override&amp;#xA;    protected String doInBackground(String... args) {&amp;#xA;        int success;&amp;#xA;&amp;#xA;        try {&amp;#xA;            List&amp;lt;NameValuePair&amp;gt; params = new ArrayList&amp;lt;NameValuePair&amp;gt;();&amp;#xA;&amp;#xA;&amp;#xA;            params.add(new BasicNameValuePair(&quot;username&quot;, username));&amp;#xA;            params.add(new BasicNameValuePair(&quot;password&quot;, password));&amp;#xA;            Log.d(&quot;request!&quot;, &quot;starting&quot;);&amp;#xA;&amp;#xA;            JSONObject json = jsonParser.makeHttpRequest(LOGIN_URL, &quot;POST&quot;, params);&amp;#xA;            Log.d(&quot;Login attempt&quot;, json.toString());&amp;#xA;            success = json.getInt(TAG_SUCCESS);&amp;#xA;            if (success == 1) {&amp;#xA;                Log.d(&quot;Successfully Login!&quot;, json.toString());&amp;#xA;&amp;#xA;                Intent main_activity = new Intent(LoginActivity.this, MainActivity.class);&amp;#xA;                finish();&amp;#xA;                startActivity(main_activity);&amp;#xA;                return json.getString(TAG_MESSAGE);&amp;#xA;            } else {&amp;#xA;                return json.getString(TAG_MESSAGE);&amp;#xA;&amp;#xA;&amp;#xA;            }&amp;#xA;&amp;#xA;        } catch (JSONException e) {&amp;#xA;            e.printStackTrace();&amp;#xA;        }&amp;#xA;        return null;&amp;#xA;    }&amp;#xA;&amp;#xA;    @Override&amp;#xA;    protected void onPostExecute(String message) {&amp;#xA;        super.onPostExecute(message);&amp;#xA;        pDialog.dismiss();&amp;#xA;        if (message != null){&amp;#xA;            Toast.makeText(LoginActivity.this, message, Toast.LENGTH_LONG).show();&amp;#xA;&amp;#xA;    }&amp;#xA;  }&amp;#xA; }&amp;#xA;}&amp;#xA;&lt;/code&gt;&lt;/pre&gt;&amp;#xA;&amp;#xA;&lt;p&gt;JasonParsor.java:&lt;/p&gt;&amp;#xA;&amp;#xA;&lt;pre&gt;&lt;code&gt;package com.sam.kiet;&amp;#xA;import java.io.BufferedReader;&amp;#xA;import java.io.IOException;&amp;#xA;import java.io.InputStream;&amp;#xA;import java.io.InputStreamReader; &amp;#xA;import java.io.UnsupportedEncodingException;&amp;#xA;import java.util.List;&amp;#xA;&amp;#xA;import org.apache.http.HttpEntity;&amp;#xA;import org.apache.http.HttpResponse;&amp;#xA;import org.apache.http.NameValuePair;&amp;#xA;import org.apache.http.client.ClientProtocolException;&amp;#xA;import org.apache.http.client.entity.UrlEncodedFormEntity;&amp;#xA;import org.apache.http.client.methods.HttpGet;&amp;#xA;import org.apache.http.client.methods.HttpPost;&amp;#xA;import org.apache.http.client.utils.URLEncodedUtils;&amp;#xA;import org.apache.http.impl.client.DefaultHttpClient;&amp;#xA;import org.json.JSONException; &amp;#xA;import org.json.JSONObject;&amp;#xA;&amp;#xA;import android.util.Log;&amp;#xA;&amp;#xA;public class JSONParser{&amp;#xA;&amp;#xA;  static InputStream is = null;&amp;#xA;  static JSONObject jObj = null;&amp;#xA;  static String json = &quot;&quot;;&amp;#xA;&amp;#xA;// constructor&amp;#xA;public JSONParser() {&amp;#xA;&amp;#xA;}&amp;#xA;&amp;#xA;// function get json from url&amp;#xA;// by making HTTP POST or GET mehtod&amp;#xA;public JSONObject makeHttpRequest(String url, String method,&amp;#xA;                                  List&amp;lt;NameValuePair&amp;gt; params) {&amp;#xA;&amp;#xA;    // Making HTTP request&amp;#xA;    try {&amp;#xA;&amp;#xA;        // check for request method&amp;#xA;        if(method == &quot;POST&quot;){&amp;#xA;            // request method is POST&amp;#xA;            // defaultHttpClient&amp;#xA;            DefaultHttpClient httpClient = new DefaultHttpClient();&amp;#xA;            HttpPost httpPost = new HttpPost(url);&amp;#xA;            httpPost.setEntity(new UrlEncodedFormEntity(params));&amp;#xA;&amp;#xA;            HttpResponse httpResponse = httpClient.execute(httpPost);&amp;#xA;            HttpEntity httpEntity = httpResponse.getEntity();&amp;#xA;            is = httpEntity.getContent();&amp;#xA;&amp;#xA;        }else if(method == &quot;GET&quot;){&amp;#xA;            // request method is GET&amp;#xA;            DefaultHttpClient httpClient = new DefaultHttpClient();&amp;#xA;            String paramString = URLEncodedUtils.format(params, &quot;utf-8&quot;);&amp;#xA;            url += &quot;?&quot; + paramString;&amp;#xA;            HttpGet httpGet = new HttpGet(url);&amp;#xA;&amp;#xA;            HttpResponse httpResponse = httpClient.execute(httpGet);&amp;#xA;            HttpEntity httpEntity = httpResponse.getEntity();&amp;#xA;            is = httpEntity.getContent();&amp;#xA;        }&amp;#xA;&amp;#xA;&amp;#xA;    } catch (UnsupportedEncodingException e) {&amp;#xA;        e.printStackTrace();&amp;#xA;    } catch (ClientProtocolException e) {&amp;#xA;        e.printStackTrace();&amp;#xA;    } catch (IOException e) {&amp;#xA;        e.printStackTrace();&amp;#xA;    }&amp;#xA;&amp;#xA;    try {&amp;#xA;        BufferedReader reader = new BufferedReader(new InputStreamReader(&amp;#xA;                is, &quot;iso-8859-1&quot;), 8);&amp;#xA;        StringBuilder sb = new StringBuilder();&amp;#xA;        String line = null;&amp;#xA;        while ((line = reader.readLine()) != null) {&amp;#xA;            sb.append(line + &quot;\n&quot;);&amp;#xA;        }&amp;#xA;        is.close();&amp;#xA;        json = sb.toString();&amp;#xA;    } catch (Exception e) {&amp;#xA;        Log.e(&quot;Buffer Error&quot;, &quot;Error converting result &quot; + e.toString());&amp;#xA;    }&amp;#xA;&amp;#xA;    // try parse the string to a JSON object&amp;#xA;    try {&amp;#xA;        jObj = new JSONObject(json);&amp;#xA;    } catch (JSONException e) {&amp;#xA;        Log.e(&quot;JSON Parser&quot;, &quot;Error parsing data &quot; + e.toString());&amp;#xA;    }&amp;#xA;&amp;#xA;    // return JSON String&amp;#xA;    return jObj;&amp;#xA;&amp;#xA;}&amp;#xA;&amp;#xA;public JSONObject getJSONFromUrl(final String url) {&amp;#xA;&amp;#xA;    // Making HTTP request&amp;#xA;    try {&amp;#xA;        // Construct the client and the HTTP request.&amp;#xA;        DefaultHttpClient httpClient = new DefaultHttpClient();&amp;#xA;        HttpPost httpPost = new HttpPost(url);&amp;#xA;&amp;#xA;        // Execute the POST request and store the response locally.&amp;#xA;        HttpResponse httpResponse = httpClient.execute(httpPost);&amp;#xA;        // Extract data from the response.&amp;#xA;        HttpEntity httpEntity = httpResponse.getEntity();&amp;#xA;        // Open an inputStream with the data content.&amp;#xA;        is = httpEntity.getContent();&amp;#xA;&amp;#xA;    } catch (UnsupportedEncodingException e) {&amp;#xA;        e.printStackTrace();&amp;#xA;    } catch (ClientProtocolException e) {&amp;#xA;        e.printStackTrace();&amp;#xA;    } catch (IOException e) {&amp;#xA;        e.printStackTrace();&amp;#xA;    }&amp;#xA;&amp;#xA;    try {&amp;#xA;        // Create a BufferedReader to parse through the inputStream.&amp;#xA;        BufferedReader reader = new BufferedReader(new InputStreamReader(&amp;#xA;                is, &quot;iso-8859-1&quot;), 8);&amp;#xA;        // Declare a string builder to help with the parsing.&amp;#xA;        StringBuilder sb = new StringBuilder();&amp;#xA;        // Declare a string to store the JSON object data in string form.&amp;#xA;        String line = null;&amp;#xA;&amp;#xA;        // Build the string until null.&amp;#xA;        while ((line = reader.readLine()) != null) {&amp;#xA;            sb.append(line + &quot;\n&quot;);&amp;#xA;        }&amp;#xA;&amp;#xA;        // Close the input stream.&amp;#xA;        is.close();&amp;#xA;        // Convert the string builder data to an actual string.&amp;#xA;        json = sb.toString();&amp;#xA;    } catch (Exception e) {&amp;#xA;        Log.e(&quot;Buffer Error&quot;, &quot;Error converting result &quot; + e.toString());&amp;#xA;    }&amp;#xA;&amp;#xA;    // Try to parse the string to a JSON object&amp;#xA;    try {&amp;#xA;        jObj = new JSONObject(json);&amp;#xA;    } catch (JSONException e) {&amp;#xA;        Log.e(&quot;JSON Parser&quot;, &quot;Error parsing data &quot; + e.toString());&amp;#xA;    }&amp;#xA;&amp;#xA;    // Return the JSON Object.&amp;#xA;    return jObj;&amp;#xA;&amp;#xA;   }&amp;#xA;} &amp;#xA;&lt;/code&gt;&lt;/pre&gt;&amp;#xA;&amp;#xA;&lt;p&gt;Login.xml:&lt;/p&gt;&amp;#xA;&amp;#xA;&lt;pre&gt;&lt;code&gt;    &amp;lt;LinearLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&amp;#xA;xmlns:tools=&quot;http://schemas.android.com/tools&quot;&amp;#xA;android:layout_width=&quot;match_parent&quot;&amp;#xA;android:layout_height=&quot;match_parent&quot;&amp;#xA;android:gravity=&quot;center_horizontal&quot;&amp;#xA;android:orientation=&quot;vertical&quot;&amp;#xA;android:paddingBottom=&quot;16dp&quot;&amp;#xA;android:paddingLeft=&quot;16dp&quot;&amp;#xA;android:paddingRight=&quot;16dp&quot;&amp;#xA;android:paddingTop=&quot;16dp&quot;&amp;#xA;tools:context=&quot;.LoginActivity&quot;&amp;#xA;&amp;gt;&amp;#xA;&amp;#xA;&amp;lt;!-- Login progress --&amp;gt;&amp;#xA;&amp;lt;ProgressBar&amp;#xA;    android:id=&quot;@+id/login_progress&quot; style=&quot;?android:attr/progressBarStyleLarge&quot;&amp;#xA;    android:layout_width=&quot;wrap_content&quot;&amp;#xA;    android:layout_height=&quot;wrap_content&quot;&amp;#xA;    android:layout_marginBottom=&quot;8dp&quot;&amp;#xA;    android:visibility=&quot;gone&quot;&amp;#xA;    /&amp;gt;&amp;#xA;&amp;#xA;&amp;lt;ScrollView&amp;#xA;    android:id=&quot;@+id/login_form&quot;&amp;#xA;    android:layout_width=&quot;match_parent&quot;&amp;#xA;    android:layout_height=&quot;match_parent&quot;&amp;#xA;    &amp;gt;&amp;#xA;    &amp;lt;LinearLayout&amp;#xA;        android:layout_width=&quot;match_parent&quot;&amp;#xA;        android:layout_height=&quot;wrap_content&quot;&amp;#xA;        android:orientation=&quot;vertical&quot;&amp;#xA;        &amp;gt;&amp;#xA;&amp;#xA;&amp;#xA;        &amp;lt;LinearLayout&amp;#xA;            android:id=&quot;@+id/email_login_form&quot;&amp;#xA;            android:layout_width=&quot;match_parent&quot;&amp;#xA;            android:layout_height=&quot;wrap_content&quot;&amp;#xA;            android:orientation=&quot;vertical&quot;&amp;gt;&amp;#xA;&amp;#xA;            &amp;lt;AutoCompleteTextView&amp;#xA;                android:id=&quot;@+id/username&quot;&amp;#xA;                android:layout_width=&quot;match_parent&quot;&amp;#xA;                android:layout_height=&quot;wrap_content&quot;&amp;#xA;                android:hint=&quot;Username&quot;&amp;#xA;                android:inputType=&quot;text&quot;&amp;#xA;                android:maxLines=&quot;1&quot;&amp;#xA;                android:singleLine=&quot;true&quot; /&amp;gt;&amp;#xA;&amp;#xA;            &amp;lt;EditText android:id=&quot;@+id/password&quot;&amp;#xA;                android:layout_width=&quot;match_parent&quot;&amp;#xA;                android:layout_height=&quot;wrap_content&quot;&amp;#xA;                android:hint=&quot;Password&quot;&amp;#xA;                android:imeActionId=&quot;@+id/login&quot;&amp;#xA;                android:imeActionLabel=&quot;Login&quot;&amp;#xA;                android:imeOptions=&quot;actionUnspecified&quot;&amp;#xA;                android:inputType=&quot;textPassword&quot;&amp;#xA;                android:maxLines=&quot;1&quot;&amp;#xA;                android:singleLine=&quot;true&quot; /&amp;gt;&amp;#xA;&amp;#xA;            &amp;lt;Button&amp;#xA;                android:id=&quot;@+id/Blogin&quot;&amp;#xA;                style=&quot;?android:textAppearanceSmall&quot;&amp;#xA;                android:layout_width=&quot;match_parent&quot;&amp;#xA;                android:layout_height=&quot;wrap_content&quot;&amp;#xA;                android:layout_marginTop=&quot;16dp&quot;&amp;#xA;                android:text=&quot;Login&quot;&amp;#xA;                android:textStyle=&quot;bold&quot; /&amp;gt;&amp;#xA;&amp;#xA;        &amp;lt;/LinearLayout&amp;gt;&amp;#xA;    &amp;lt;/LinearLayout&amp;gt;&amp;#xA;&amp;lt;/ScrollView&amp;gt;&amp;#xA;&lt;/code&gt;&lt;/pre&gt;&amp;#xA;&amp;#xA;&lt;p&gt;&lt;/p&gt;&amp;#xA;&amp;#xA;&lt;p&gt;Logcat(error):&lt;/p&gt;&amp;#xA;&amp;#xA;&lt;pre&gt;&lt;code&gt;10-12 09:02:22.084    1804-1819/com.sam.kiet E/Buffer Error? Error converting &amp;#xA;&amp;#xA;result java.lang.NullPointerException: lock == null&amp;#xA;10-12 09:02:22.084    1804-1819/com.sam.kiet E/JSON Parser? Error parsing data org.json.JSONException: End of input at character 0 of&amp;#xA;10-12 09:02:22.094    1804-1819/com.sam.kiet E/AndroidRuntime? FATAL EXCEPTION: AsyncTask #2&amp;#xA;    Process: com.sam.kiet, PID: 1804&amp;#xA;    java.lang.RuntimeException: An error occured while executing doInBackground()&amp;#xA;            at android.os.AsyncTask$3.done(AsyncTask.java:300)&amp;#xA;            at java.util.concurrent.FutureTask.finishCompletion(FutureTask.java:355)&amp;#xA;            at java.util.concurrent.FutureTask.setException(FutureTask.java:222)&amp;#xA;            at java.util.concurrent.FutureTask.run(FutureTask.java:242)&amp;#xA;            at android.os.AsyncTask$SerialExecutor$1.run(AsyncTask.java:231)&amp;#xA;            at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1112)&amp;#xA;            at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:587)&amp;#xA;            at java.lang.Thread.run(Thread.java:841)&amp;#xA;     Caused by: java.lang.NullPointerException&amp;#xA;            at com.sam.kiet.LoginActivity$AttemptLogin.doInBackground(LoginActivity.java:92)&amp;#xA;            at com.sam.kiet.LoginActivity$AttemptLogin.doInBackground(LoginActivity.java:60)&amp;#xA;            at android.os.AsyncTask$2.call(AsyncTask.java:288)&amp;#xA;            at java.util.concurrent.FutureTask.run(FutureTask.java:237)&amp;#xA;            at android.os.AsyncTask$SerialExecutor$1.run(AsyncTask.java:231)&amp;#xA;            at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1112)&amp;#xA;            at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:587)&amp;#xA;            at java.lang.Thread.run(Thread.java:841)&amp;#xA;10-12 09:02:23.744    1804-1804/com.sam.kiet E/WindowManager? android.view.WindowLeaked: Activity com.sam.kiet.LoginActivity has leaked window com.android.internal.policy.impl.PhoneWindow$DecorView{b1402280 V.E..... R......D 0,0-1026,288} that was originally added here&amp;#xA;            at android.view.ViewRootImpl.&amp;lt;init&amp;gt;(ViewRootImpl.java:346)&amp;#xA;            at android.view.WindowManagerGlobal.addView(WindowManagerGlobal.java:248)&amp;#xA;            at android.view.WindowManagerImpl.addView(WindowManagerImpl.java:69)&amp;#xA;            at android.app.Dialog.show(Dialog.java:286)&amp;#xA;            at com.sam.kiet.LoginActivity$AttemptLogin.onPreExecute(LoginActivity.java:71)&amp;#xA;            at android.os.AsyncTask.executeOnExecutor(AsyncTask.java:587)&amp;#xA;            at android.os.AsyncTask.execute(AsyncTask.java:535)&amp;#xA;            at com.sam.kiet.LoginActivity.onClick(LoginActivity.java:53)&amp;#xA;            at android.view.View.performClick(View.java:4438)&amp;#xA;            at android.view.View$PerformClick.run(View.java:18422)&amp;#xA;            at android.os.Handler.handleCallback(Handler.java:733)&amp;#xA;            at android.os.Handler.dispatchMessage(Handler.java:95)&amp;#xA;            at android.os.Looper.loop(Looper.java:136)&amp;#xA;            at android.app.ActivityThread.main(ActivityThread.java:5001)&amp;#xA;            at java.lang.reflect.Method.invokeNative(Native Method)&amp;#xA;            at java.lang.reflect.Method.invoke(Method.java:515)&amp;#xA;            at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:785)&amp;#xA;            at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:601)&amp;#xA;            at dalvik.system.NativeStart.main(Native Method)&amp;#xA;&lt;/code&gt;&lt;/pre&gt;&amp;#xA;&amp;#xA;&lt;p&gt;New LOGCAT:&lt;/p&gt;&amp;#xA;&amp;#xA;&lt;pre&gt;&lt;code&gt;10-12 10:40:56.083    5644-5658/com.sam.kiet E/JSON Parser? Error parsing data org.json.JSONException: Value success of type java.lang.String cannot be converted to JSONObject&amp;#xA;10-12 10:40:56.093    5644-5658/com.sam.kiet E/AndroidRuntime? FATAL EXCEPTION: AsyncTask #2&amp;#xA;    Process: com.sam.kiet, PID: 5644&amp;#xA;    java.lang.RuntimeException: An error occured while executing doInBackground()&amp;#xA;            at android.os.AsyncTask$3.done(AsyncTask.java:300)&amp;#xA;            at java.util.concurrent.FutureTask.finishCompletion(FutureTask.java:355)&amp;#xA;            at java.util.concurrent.FutureTask.setException(FutureTask.java:222)&amp;#xA;            at java.util.concurrent.FutureTask.run(FutureTask.java:242)&amp;#xA;            at android.os.AsyncTask$SerialExecutor$1.run(AsyncTask.java:231)&amp;#xA;            at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1112)&amp;#xA;            at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:587)&amp;#xA;            at java.lang.Thread.run(Thread.java:841)&amp;#xA;     Caused by: java.lang.NullPointerException&amp;#xA;            at com.sam.kiet.LoginActivity$AttemptLogin.doInBackground(LoginActivity.java:85)&amp;#xA;            at com.sam.kiet.LoginActivity$AttemptLogin.doInBackground(LoginActivity.java:60)&amp;#xA;            at android.os.AsyncTask$2.call(AsyncTask.java:288)&amp;#xA;            at java.util.concurrent.FutureTask.run(FutureTask.java:237)&amp;#xA;            at android.os.AsyncTask$SerialExecutor$1.run(AsyncTask.java:231)&amp;#xA;            at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1112)&amp;#xA;            at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:587)&amp;#xA;            at java.lang.Thread.run(Thread.java:841)&amp;#xA;10-12 10:40:58.003    5644-5644/com.sam.kiet E/WindowManager? android.view.WindowLeaked: Activity com.sam.kiet.LoginActivity has leaked window com.android.internal.policy.impl.PhoneWindow$DecorView{b1401ef8 V.E..... R......D 0,0-1026,288} that was originally added here&amp;#xA;            at android.view.ViewRootImpl.&amp;lt;init&amp;gt;(ViewRootImpl.java:346)&amp;#xA;            at android.view.WindowManagerGlobal.addView(WindowManagerGlobal.java:248)&amp;#xA;            at android.view.WindowManagerImpl.addView(WindowManagerImpl.java:69)&amp;#xA;            at android.app.Dialog.show(Dialog.java:286)&amp;#xA;            at com.sam.kiet.LoginActivity$AttemptLogin.onPreExecute(LoginActivity.java:71)&amp;#xA;            at android.os.AsyncTask.executeOnExecutor(AsyncTask.java:587)&amp;#xA;            at android.os.AsyncTask.execute(AsyncTask.java:535)&amp;#xA;            at com.sam.kiet.LoginActivity.onClick(LoginActivity.java:53)&amp;#xA;            at android.view.View.performClick(View.java:4438)&amp;#xA;            at android.view.View$PerformClick.run(View.java:18422)&amp;#xA;            at android.os.Handler.handleCallback(Handler.java:733)&amp;#xA;            at android.os.Handler.dispatchMessage(Handler.java:95)&amp;#xA;            at android.os.Looper.loop(Looper.java:136)&amp;#xA;            at android.app.ActivityThread.main(ActivityThread.java:5001)&amp;#xA;            at java.lang.reflect.Method.invokeNative(Native Method)&amp;#xA;            at java.lang.reflect.Method.invoke(Method.java:515)&amp;#xA;            at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:785)&amp;#xA;            at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:601)&amp;#xA;            at dalvik.system.NativeStart.main(Native Method)&amp;#xA;&lt;/code&gt;&lt;/pre&gt;&amp;#xA;" stacktrace="java.lang.RuntimeException: An error occured while executing doInBackground()&#10;            at android.os.AsyncTask$3.done(AsyncTask.java:300)&#10;            at java.util.concurrent.FutureTask.finishCompletion(FutureTask.java:355)&#10;            at java.util.concurrent.FutureTask.setException(FutureTask.java:222)&#10;            at java.util.concurrent.FutureTask.run(FutureTask.java:242)&#10;            at android.os.AsyncTask$SerialExecutor$1.run(AsyncTask.java:231)&#10;            at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1112)&#10;            at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:587)&#10;            at java.lang.Thread.run(Thread.java:841)"/></posts>